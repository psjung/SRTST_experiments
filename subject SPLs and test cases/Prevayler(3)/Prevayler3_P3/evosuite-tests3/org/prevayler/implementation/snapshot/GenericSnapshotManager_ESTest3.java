/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 07 18:58:46 KST 2017
 */

package org.prevayler.implementation.snapshot;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.HashMap;
import java.util.Map;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.prevayler.foundation.serialization.JavaSerializer;
import org.prevayler.foundation.serialization.Serializer;
import org.prevayler.foundation.serialization.SkaringaSerializer;
import org.prevayler.foundation.serialization.XStreamSerializer;
import org.prevayler.implementation.PrevalentSystemGuard;
import org.prevayler.implementation.PrevaylerDirectory;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class GenericSnapshotManager_ESTest3 extends GenericSnapshotManager_ESTest_scaffolding3 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void clearEvoSuiteFramework() {
String a = "aa";
}

  @Test
  public void test0()  throws Throwable  {
      HashMap<JavaSerializer, SkaringaSerializer> hashMap0 = new HashMap<JavaSerializer, SkaringaSerializer>();
      XStreamSerializer xStreamSerializer0 = new XStreamSerializer("java.util.LinkedHashSet");
      PrevaylerDirectory prevaylerDirectory0 = new PrevaylerDirectory("java.util.LinkedHashSet");
      GenericSnapshotManager genericSnapshotManager0 = null;
      try {
        genericSnapshotManager0 = new GenericSnapshotManager((Map) hashMap0, "java.util.LinkedHashSet", (Object) xStreamSerializer0, prevaylerDirectory0, (Serializer) xStreamSerializer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Primary suffix 'java.util.LinkedHashSet' does not appear in strategies map
         //
         assertThrownBy("org.prevayler.implementation.snapshot.GenericSnapshotManager", e);
      }
  }

  @Test
  public void test1()  throws Throwable  {
      XStreamSerializer xStreamSerializer0 = new XStreamSerializer("kf=R,w=~B_6Y");
      GenericSnapshotManager genericSnapshotManager0 = new GenericSnapshotManager(xStreamSerializer0);
      // Undeclared exception!
      try { 
        genericSnapshotManager0.writeSnapshot(xStreamSerializer0, 1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.prevayler.implementation.snapshot.GenericSnapshotManager", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      HashMap<JavaSerializer, SkaringaSerializer> hashMap0 = new HashMap<JavaSerializer, SkaringaSerializer>();
      XStreamSerializer xStreamSerializer0 = new XStreamSerializer("java.util.LinkedHashSet");
      SkaringaSerializer skaringaSerializer0 = new SkaringaSerializer();
      hashMap0.put((JavaSerializer) null, skaringaSerializer0);
      PrevaylerDirectory prevaylerDirectory0 = new PrevaylerDirectory("java.util.LinkedHashSet");
      GenericSnapshotManager genericSnapshotManager0 = null;
      try {
        genericSnapshotManager0 = new GenericSnapshotManager((Map) hashMap0, "java.util.LinkedHashSet", (Object) xStreamSerializer0, prevaylerDirectory0, (Serializer) xStreamSerializer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.prevayler.implementation.PrevaylerDirectory", e);
      }
  }

  @Test
  public void test3()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      PrevaylerDirectory prevaylerDirectory0 = new PrevaylerDirectory((File) null);
      Object object0 = new Object();
      Integer integer0 = new Integer((-509));
      hashMap0.put(object0, integer0);
      GenericSnapshotManager genericSnapshotManager0 = null;
      try {
        genericSnapshotManager0 = new GenericSnapshotManager((Map) hashMap0, "ERDTe", (Object) hashMap0, prevaylerDirectory0, (Serializer) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.String
         //
         assertThrownBy("org.prevayler.implementation.snapshot.GenericSnapshotManager", e);
      }
  }

  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream((InputStream) byteArrayInputStream0, (InputStream) byteArrayInputStream0);
      GenericSnapshotManager genericSnapshotManager0 = new GenericSnapshotManager(sequenceInputStream0);
      PrevalentSystemGuard prevalentSystemGuard0 = genericSnapshotManager0.recoveredPrevalentSystem();
      assertNotNull(prevalentSystemGuard0);
  }

  @Test
  public void test5()  throws Throwable  {
      XStreamSerializer xStreamSerializer0 = new XStreamSerializer("kf=R,w=~B_6Y");
      GenericSnapshotManager genericSnapshotManager0 = new GenericSnapshotManager(xStreamSerializer0);
      JavaSerializer javaSerializer0 = (JavaSerializer)genericSnapshotManager0.primarySerializer();
      assertNotNull(javaSerializer0);
  }
}
