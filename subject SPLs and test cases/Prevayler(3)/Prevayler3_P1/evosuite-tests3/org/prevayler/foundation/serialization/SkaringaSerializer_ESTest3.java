/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 07 17:38:19 KST 2017
 */

package org.prevayler.foundation.serialization;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedOutputStream;
import java.util.EmptyStackException;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.skaringa.javaxml.impl.sax.ObjectTransformerSAXImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class SkaringaSerializer_ESTest3 extends SkaringaSerializer_ESTest_scaffolding33 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void clearEvoSuiteFramework() {
String a = "aa";
}

  @Test
  public void test0()  throws Throwable  {
      SkaringaSerializer skaringaSerializer0 = new SkaringaSerializer();
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        skaringaSerializer0.readObject((InputStream) null);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.Stack", e);
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SkaringaSerializer skaringaSerializer0 = new SkaringaSerializer();
      ObjectTransformerSAXImpl objectTransformerSAXImpl0 = (ObjectTransformerSAXImpl)skaringaSerializer0.createTransformer();
      assertNotNull(objectTransformerSAXImpl0);
  }

  @Test
  public void test2()  throws Throwable  {
      SkaringaSerializer skaringaSerializer0 = new SkaringaSerializer();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      skaringaSerializer0.writeObject(byteArrayOutputStream0, "!q=;4TPX(LriT)");
      assertEquals(209, byteArrayOutputStream0.size());
  }

  @Test
  public void test3()  throws Throwable  {
      SkaringaSerializer skaringaSerializer0 = new SkaringaSerializer();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        skaringaSerializer0.readObject(byteArrayInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unable to deserialize with Skaringa: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; \uD504\uB864\uB85C\uADF8\uC5D0\uC11C\uB294 \uCF58\uD150\uCE20\uAC00 \uD5C8\uC6A9\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
         //
         assertThrownBy("org.prevayler.foundation.serialization.SkaringaSerializer", e);
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SkaringaSerializer skaringaSerializer0 = new SkaringaSerializer();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        skaringaSerializer0.writeObject(pipedOutputStream0, (Object) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unable to serialize with Skaringa: org.xml.sax.SAXException: Pipe not connected
         // java.io.IOException: Pipe not connected
         //
         assertThrownBy("org.prevayler.foundation.serialization.SkaringaSerializer", e);
      }
  }
}
