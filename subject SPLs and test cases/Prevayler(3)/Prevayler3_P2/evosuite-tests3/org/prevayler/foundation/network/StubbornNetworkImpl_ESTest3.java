/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 07 17:29:22 KST 2017
 */

package org.prevayler.foundation.network;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertNotSame;
import static org.junit.Assert.fail;

import java.io.IOException;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class StubbornNetworkImpl_ESTest3 extends StubbornNetworkImpl_ESTest_scaffolding3 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void clearEvoSuiteFramework() {
String a = "aa";
}

  @Test
  public void test1()  throws Throwable  {
      StubbornNetworkImpl stubbornNetworkImpl0 = new StubbornNetworkImpl();
      StubbornServerReceiverImpl stubbornServerReceiverImpl0 = (StubbornServerReceiverImpl)stubbornNetworkImpl0.newReceiver((Service) null, (ObjectSocket) null);
      StubbornServerReceiverImpl stubbornServerReceiverImpl1 = (StubbornServerReceiverImpl)stubbornNetworkImpl0.newReceiver((Service) null, (ObjectSocket) null);
      assertNotSame(stubbornServerReceiverImpl1, stubbornServerReceiverImpl0);
  }

  @Test
  public void test2()  throws Throwable  {
      StubbornNetworkImpl stubbornNetworkImpl0 = new StubbornNetworkImpl();
      // Undeclared exception!
      try { 
        stubbornNetworkImpl0.newInstance("Por Nt in Service", (-5340));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-5340
         //
         assertThrownBy("java.net.InetSocketAddress", e);
      }
  }

  @Test
  public void test3()  throws Throwable  {
      StubbornNetworkImpl stubbornNetworkImpl0 = new StubbornNetworkImpl();
      StubbornClientReceiverImpl stubbornClientReceiverImpl0 = new StubbornClientReceiverImpl((ObjectSocket) null, (Service) null);
      StubbornClientReceiverImpl stubbornClientReceiverImpl1 = (StubbornClientReceiverImpl)stubbornNetworkImpl0.newReceiver("Por Nt in Service", (-1119), (ObjectReceiver) stubbornClientReceiverImpl0);
      assertNotSame(stubbornClientReceiverImpl0, stubbornClientReceiverImpl1);
  }
}
