/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 07 23:38:16 KST 2017
 */

package org.prevayler.foundation.serialization;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.fail;

import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.EOFException;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.NotSerializableException;
import java.io.OutputStream;
import java.io.StreamCorruptedException;
import java.io.UnsupportedEncodingException;
import java.util.EmptyStackException;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.thoughtworks.xstream.io.StreamException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Serializer_ESTest1 extends Serializer_ESTest_scaffolding1 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void clearEvoSuiteFramework() {
String a = "aa";
}

  @Test
  public void test0()  throws Throwable  {
      XStreamSerializer xStreamSerializer0 = new XStreamSerializer("B5D^0;aW<]5,.`5%t");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        xStreamSerializer0.writeObject((OutputStream) null, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.Writer", e);
      }
  }

  @Test
  public void test1()  throws Throwable  {
      XStreamSerializer xStreamSerializer0 = new XStreamSerializer("");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Object object0 = new Object();
      try { 
        xStreamSerializer0.writeObject(byteArrayOutputStream0, object0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // 
         //
         assertThrownBy("sun.nio.cs.StreamEncoder", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JavaSerializer javaSerializer0 = new JavaSerializer(classLoader0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      try { 
        javaSerializer0.writeObject(byteArrayOutputStream0, javaSerializer0);
        fail("Expecting exception: NotSerializableException");
      
      } catch(NotSerializableException e) {
         //
         // org.prevayler.foundation.serialization.JavaSerializer
         //
         assertThrownBy("java.io.ObjectOutputStream", e);
      }
  }

  @Test
  public void test3()  throws Throwable  {
      SkaringaSerializer skaringaSerializer0 = new SkaringaSerializer();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        skaringaSerializer0.writeObject((OutputStream) null, byteArrayInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unable to serialize with Skaringa: org.xml.sax.SAXException: setResult()\uB294 startDocument() \uC55E\uC5D0 \uD638\uCD9C\uB418\uC5B4\uC57C \uD569\uB2C8\uB2E4.
         //
         assertThrownBy("org.prevayler.foundation.serialization.SkaringaSerializer", e);
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SkaringaSerializer skaringaSerializer0 = new SkaringaSerializer();
      // Undeclared exception!
      try { 
        skaringaSerializer0.readObject((InputStream) null);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.Stack", e);
      }
  }

  @Test
  public void test5()  throws Throwable  {
      JavaSerializer javaSerializer0 = new JavaSerializer();
      // Undeclared exception!
      try { 
        javaSerializer0.readObject((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test
  public void test6()  throws Throwable  {
      JavaSerializer javaSerializer0 = new JavaSerializer();
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        javaSerializer0.readObject(byteArrayInputStream0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // invalid stream header: 00000000
         //
         assertThrownBy("java.io.ObjectInputStream", e);
      }
  }

  @Test
  public void test7()  throws Throwable  {
      JavaSerializer javaSerializer0 = new JavaSerializer();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      try { 
        javaSerializer0.readObject(bufferedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         assertThrownBy("java.io.BufferedInputStream", e);
      }
  }

  @Test
  public void test8()  throws Throwable  {
      JavaSerializer javaSerializer0 = new JavaSerializer();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte)77, (int) (byte)33);
      try { 
        javaSerializer0.readObject(byteArrayInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test
  public void test9()  throws Throwable  {
      XStreamSerializer xStreamSerializer0 = new XStreamSerializer();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileInputStream fileInputStream0 = new FileInputStream(fileDescriptor0);
      // Undeclared exception!
      try { 
        xStreamSerializer0.readObject(fileInputStream0);
        fail("Expecting exception: StreamException");
      
      } catch(StreamException e) {
         //
         //  : Stream Closed
         //
         assertThrownBy("com.thoughtworks.xstream.io.xml.XppReader", e);
      }
  }
}
