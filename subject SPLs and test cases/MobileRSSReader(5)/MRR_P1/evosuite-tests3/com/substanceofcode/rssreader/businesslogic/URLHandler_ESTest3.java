/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 19:21:14 KST 2018
 */

package com.substanceofcode.rssreader.businesslogic;

import static org.evosuite.shaded.org.mockito.Mockito.doReturn;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.evosuite.shaded.org.mockito.Mockito.mock;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.substanceofcode.rssreader.businessentities.RssItunesFeed;
import com.substanceofcode.utils.CauseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class URLHandler_ESTest3 extends URLHandler_ESTest_scaffolding3 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      RssFeedParser rssFeedParser0 = new RssFeedParser(rssItunesFeed0);
      assertEquals(0L, rssFeedParser0.getLastMod());
      
      rssFeedParser0.setLastMod(1L);
      long long0 = rssFeedParser0.getLastMod();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", "", "");
      assertEquals(0L, opmlParser0.getLastMod());
      
      opmlParser0.setLastMod((-1L));
      long long0 = opmlParser0.getLastMod();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      lineByLineParser0.handleClose();
      assertEquals(0L, lineByLineParser0.getLastMod());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", "", "");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      opmlParser0.m_inputStream = (InputStream) pipedInputStream0;
      opmlParser0.handleClose();
      assertEquals(0L, opmlParser0.getLastMod());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "");
      RssFeedParser rssFeedParser0 = new RssFeedParser(rssItunesFeed0);
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 0);
      rssFeedParser0.m_inputStream = (InputStream) byteArrayInputStream0;
      try { 
        rssFeedParser0.parseRssFeed(false, false, 0);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Error while parsing RSS data: com.substanceofcode.utils.CauseException: Internal error while parsing : 
         //
         verifyException("com.substanceofcode.rssreader.businesslogic.RssFeedParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("https:", "", "");
      try { 
        lineByLineParser0.parseFeeds();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cz.cacek.ebook.util.ResourceProviderME", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RssFeedParser rssFeedParser0 = new RssFeedParser((RssItunesFeed) null);
      rssFeedParser0.handleOpen("jar://Y", "", "");
      assertEquals(0L, rssFeedParser0.getLastMod());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RssFeedParser rssFeedParser0 = new RssFeedParser((RssItunesFeed) null);
      rssFeedParser0.handleOpen("jar://", "", "");
      assertEquals(0L, rssFeedParser0.getLastMod());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RssFeedParser rssFeedParser0 = new RssFeedParser((RssItunesFeed) null);
      try { 
        rssFeedParser0.handleOpen("", "", "");
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while parsing : 
         //
         verifyException("com.substanceofcode.rssreader.businesslogic.URLHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      long long0 = lineByLineParser0.getLastMod();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RssFeedParser rssFeedParser0 = new RssFeedParser((RssItunesFeed) null);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      try { 
        rssFeedParser0.parseHTMLRedirect("", dataInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error HTML not supported with this version.
         //
         verifyException("com.substanceofcode.rssreader.businesslogic.URLHandler", e);
      }
  }
}
