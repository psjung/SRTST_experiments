/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 18:12:16 KST 2018
 */

package com.substanceofcode.rssreader.businesslogic;

import static org.junit.Assert.assertEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.fail;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.util.Date;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.substanceofcode.rssreader.businessentities.RssFeed;
import com.substanceofcode.rssreader.businessentities.RssItunesFeed;
import com.substanceofcode.utils.CauseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class URLHandler_ESTest5 extends URLHandler_ESTest_scaffolding5 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      RssFeedParser rssFeedParser0 = new RssFeedParser(rssItunesFeed0);
      assertEquals(0L, rssFeedParser0.getLastMod());
      
      rssFeedParser0.setLastMod((-1));
      long long0 = rssFeedParser0.getLastMod();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      lineByLineParser0.handleClose();
      assertEquals(0L, lineByLineParser0.getLastMod());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser((String) null, (String) null, (String) null);
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      opmlParser0.m_inputStream = (InputStream) pushbackInputStream0;
      opmlParser0.handleClose();
      assertEquals(0L, opmlParser0.getLastMod());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RssFeed rssFeed0 = new RssFeed((String) null, (String) null, (String) null, (String) null);
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed(rssFeed0);
      RssFeedParser rssFeedParser0 = new RssFeedParser(rssItunesFeed0);
      try { 
        rssFeedParser0.parseRssFeed(true, true, 0);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Error while parsing RSS data: com.substanceofcode.utils.CauseException: Internal error while parsing : null
         //
         verifyException("com.substanceofcode.rssreader.businesslogic.RssFeedParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      RssFeedParser rssFeedParser0 = new RssFeedParser(rssItunesFeed0);
      try { 
        rssFeedParser0.handleOpen("https:", "", (String) null);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while parsing : https:
         //
         verifyException("com.substanceofcode.rssreader.businesslogic.URLHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("file://", "", "");
      opmlParser0.run();
      assertEquals(0L, opmlParser0.getLastMod());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "");
      RssFeedParser rssFeedParser0 = new RssFeedParser(rssItunesFeed0);
      try { 
        rssFeedParser0.parseRssFeed(false, false, 0);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Error while parsing RSS data: com.substanceofcode.utils.CauseException: Internal error while parsing : 
         //
         verifyException("com.substanceofcode.rssreader.businesslogic.RssFeedParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Date date0 = new Date(0L);
      RssFeed rssFeed0 = new RssFeed("", (String) null, "", "", date0, "", date0, 0);
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed(rssFeed0);
      RssFeedParser rssFeedParser0 = new RssFeedParser(rssItunesFeed0);
      try { 
        rssFeedParser0.parseHTMLRedirect("", (InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error HTML not supported with this version.
         //
         verifyException("com.substanceofcode.rssreader.businesslogic.URLHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      long long0 = lineByLineParser0.getLastMod();
      assertEquals(0L, long0);
  }
}
