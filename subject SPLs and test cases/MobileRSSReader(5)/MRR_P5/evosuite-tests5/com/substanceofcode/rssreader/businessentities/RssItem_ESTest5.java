/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 17:51:41 KST 2018
 */

package com.substanceofcode.rssreader.businessentities;

import static org.junit.Assert.assertEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNotSame;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.Date;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.substanceofcode.utils.CauseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class RssItem_ESTest5 extends RssItem_ESTest_scaffolding5 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem("", "", "", date0, "", true);
      String string0 = rssItem0.toString();
      assertEquals("||Thu Jan 01 09:00:00 KST 1970||true|", string0);
      assertTrue(rssItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Date date0 = new Date(0);
      RssItem rssItem0 = new RssItem("", "", "", date0, "", true);
      RssItem rssItem1 = new RssItem("6", "", "", date0, "", true);
      boolean boolean0 = rssItem0.equals(rssItem1);
      assertEquals("", rssItem1.getEnclosure());
      assertTrue(rssItem1.isUnreadItem());
      assertEquals("", rssItem1.getLink());
      assertFalse(boolean0);
      assertEquals("", rssItem1.getDescription());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem("", "", "", date0, "", false);
      RssItem rssItem1 = new RssItem(rssItem0);
      RssItem rssItem2 = rssItem0.copyTo(rssItem1);
      assertNotSame(rssItem2, rssItem0);
      assertFalse(rssItem2.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      String[] stringArray0 = new String[8];
      try { 
        rssItem0.init(1, false, false, stringArray0);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while RssItem init 
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem((String) null, (String) null, (String) null, date0, "", true);
      String[] stringArray0 = new String[2];
      try { 
        rssItem0.init(1, true, true, stringArray0);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while RssItem init 
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Date date0 = new Date();
      RssItem rssItem0 = new RssItem("|", "", "", date0, "", true);
      String string0 = rssItem0.serialize();
      //  // Unstable assertion: assertEquals("AXx8MTY1MmQ1NTEwNjR8fDF8", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Date date0 = new Date();
      RssItem rssItem0 = new RssItem("", "", "", date0, "", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[2] = "1";
      try { 
        rssItem0.init(0, true, true, stringArray0);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while RssItem init 
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      try { 
        RssItem.deserialize((String) null);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while RssItem deserialize 
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Date date0 = new Date();
      RssItem rssItem0 = new RssItem("", "", "", date0, "", true);
      boolean boolean0 = rssItem0.isUnreadItem();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem((String) null, (String) null, (String) null, date0, "", true);
      String string0 = rssItem0.getTitle();
      assertTrue(rssItem0.isUnreadItem());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Date date0 = new Date();
      RssItem rssItem0 = new RssItem("7", "", "", date0, "", false);
      String string0 = rssItem0.getTitle();
      assertEquals("", rssItem0.getEnclosure());
      assertEquals("", rssItem0.getLink());
      assertEquals("7", string0);
      assertEquals("", rssItem0.getDescription());
      assertFalse(rssItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RssItem rssItem0 = new RssItem("", (String) null, "", (Date) null, "", true);
      String string0 = rssItem0.getLink();
      assertTrue(rssItem0.isUnreadItem());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      rssItem0.m_link = "c";
      rssItem0.getLink();
      assertEquals("c", rssItem0.getLink());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      rssItem0.m_enclosure = null;
      String string0 = rssItem0.getEnclosure();
      assertFalse(rssItem0.isUnreadItem());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Date date0 = new Date();
      RssItem rssItem0 = new RssItem("", "", "", date0, "2", true);
      String string0 = rssItem0.getEnclosure();
      assertEquals("", rssItem0.getDescription());
      assertEquals("", rssItem0.getLink());
      assertTrue(rssItem0.isUnreadItem());
      assertEquals("", rssItem0.getTitle());
      assertEquals("2", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Date date0 = new Date();
      RssItem rssItem0 = new RssItem("", "", (String) null, date0, "", true);
      String string0 = rssItem0.getDescription();
      assertNull(string0);
      assertTrue(rssItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssItem rssItem1 = new RssItem(rssItem0);
      rssItem1.m_desc = "L";
      rssItem1.getDescription();
      assertEquals("L", rssItem1.getDescription());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RssItem rssItem0 = new RssItem("", (String) null, "", (Date) null, "", true);
      rssItem0.getDate();
      assertTrue(rssItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RssItem rssItem0 = RssItem.deserialize("MHwwfDB8fDF8");
      assertEquals("0", rssItem0.getLink());
      assertEquals("0", rssItem0.getTitle());
      assertTrue(rssItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RssItem rssItem0 = new RssItem("", (String) null, "", (Date) null, "", true);
      RssItem rssItem1 = rssItem0.copyTo(rssItem0);
      assertTrue(rssItem1.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Date date0 = new Date();
      RssItem rssItem0 = new RssItem((String) null, (String) null, (String) null, date0, (String) null, true);
      // Undeclared exception!
      try { 
        rssItem0.unencodedSerialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      rssItem0.m_title = null;
      // Undeclared exception!
      try { 
        rssItem0.serialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Date date0 = new Date();
      RssItem rssItem0 = new RssItem("", "", (String) null, date0, "", true);
      // Undeclared exception!
      try { 
        rssItem0.equals(rssItem0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      // Undeclared exception!
      try { 
        rssItem0.copyTo((RssItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RssItem rssItem0 = null;
      try {
        rssItem0 = new RssItem((RssItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem("", "", "", date0, "", true);
      String string0 = rssItem0.unencodedSerialize();
      assertTrue(rssItem0.isUnreadItem());
      assertEquals("||0||1|", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      String string0 = rssItem0.unencodedSerialize();
      assertEquals("||||0|", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssItem rssItem1 = RssItem.unencodedDeserialize("|||||");
      rssItem1.equals(rssItem0);
      assertEquals("", rssItem1.getDescription());
      assertFalse(rssItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      rssItem0.setEnclosure("J");
      RssItem rssItem1 = new RssItem();
      boolean boolean0 = rssItem0.equals(rssItem1);
      assertEquals("J", rssItem0.getEnclosure());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssItem rssItem1 = new RssItem(rssItem0);
      Date date0 = new Date();
      rssItem1.m_date = date0;
      boolean boolean0 = rssItem0.equals(rssItem1);
      assertFalse(rssItem1.isUnreadItem());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem("", "", "", date0, "", true);
      boolean boolean0 = rssItem0.equals(rssItem0);
      assertTrue(boolean0);
      assertTrue(rssItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem("0", "0", "", date0, "", true);
      RssItem rssItem1 = new RssItem("0", "", "", date0, "", true);
      boolean boolean0 = rssItem1.equals(rssItem0);
      assertFalse(boolean0);
      assertEquals("", rssItem0.getEnclosure());
      assertEquals("", rssItem0.getDescription());
      assertTrue(rssItem1.isUnreadItem());
      assertEquals("0", rssItem1.getTitle());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      stringArray0[4] = "";
      try { 
        rssItem0.init(0, true, false, stringArray0);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while RssItem init 
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      try { 
        RssItem.unencodedDeserialize("||||");
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while RssItem unencodedDeserialize 
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem("", "", "", date0, "", false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[2] = "O";
      try { 
        rssItem0.init(0, true, true, stringArray0);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while RssItem init 
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[2] = "I";
      try { 
        rssItem0.init(0, false, true, stringArray0);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while RssItem init 
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      rssItem0.getTitle();
      assertFalse(rssItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssItem rssItem1 = new RssItem(rssItem0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      rssItem1.init(0, true, false, stringArray0);
      boolean boolean0 = rssItem1.equals(rssItem0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem("", "", "", date0, "", false);
      assertFalse(rssItem0.isUnreadItem());
      
      rssItem0.setUnreadItem(true);
      assertTrue(rssItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem("", "", "", date0, "", false);
      String string0 = rssItem0.toString();
      assertEquals("||Thu Jan 01 09:00:00 KST 1970||false|", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      rssItem0.getLink();
      assertFalse(rssItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem("", "", "", date0, "", false);
      boolean boolean0 = rssItem0.isUnreadItem();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem("", "", "", date0, "", true);
      rssItem0.getEnclosure();
      assertTrue(rssItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem("", "", "", date0, "", true);
      Date date1 = rssItem0.getDate();
      assertTrue(rssItem0.isUnreadItem());
      assertNotNull(date1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      try { 
        RssItem.deserialize("");
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while RssItem unencodedDeserialize 
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItem rssItem0 = new RssItem("", "", "", date0, "", false);
      rssItem0.getDescription();
      assertFalse(rssItem0.isUnreadItem());
  }
}
