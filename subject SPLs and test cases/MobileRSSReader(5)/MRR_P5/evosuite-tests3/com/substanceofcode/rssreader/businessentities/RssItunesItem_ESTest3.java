/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 19:06:04 KST 2018
 */

package com.substanceofcode.rssreader.businessentities;

import static org.junit.Assert.assertEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.Date;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.substanceofcode.utils.CauseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class RssItunesItem_ESTest3 extends RssItunesItem_ESTest_scaffolding3 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssItunesItem rssItunesItem0 = new RssItunesItem(rssItem0);
      rssItunesItem0.setItunes(true);
      assertEquals("unspecified", rssItunesItem0.getExplicit());
      assertFalse(rssItunesItem0.isItunes());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", true, false, "", "", "", (byte)0, "");
      rssItunesItem0.setItunes(true);
      assertFalse(rssItunesItem0.isItunes());
      assertEquals("unspecified", rssItunesItem0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RssItunesItem rssItunesItem0 = new RssItunesItem();
      RssItunesItem rssItunesItem1 = new RssItunesItem(rssItunesItem0);
      assertEquals("unspecified", rssItunesItem1.getExplicit());
      
      rssItunesItem1.m_explicit = (byte) (-2);
      boolean boolean0 = rssItunesItem0.equals(rssItunesItem1);
      assertEquals("", rssItunesItem1.getSummary());
      assertFalse(boolean0);
      assertEquals("", rssItunesItem1.getSubtitle());
      assertFalse(rssItunesItem1.isItunes());
      assertEquals("", rssItunesItem1.getAuthor());
      assertEquals("", rssItunesItem1.getDuration());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", true, true, "", "", "", (byte)0, "");
      RssItunesItem rssItunesItem1 = new RssItunesItem(rssItunesItem0);
      assertEquals("", rssItunesItem1.getSummary());
      
      rssItunesItem1.m_summary = "l";
      boolean boolean0 = rssItunesItem0.equals(rssItunesItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", true, false, "", "", "", (byte)0, "");
      RssItunesItem rssItunesItem1 = new RssItunesItem(rssItunesItem0);
      rssItunesItem0.setAuthor("0");
      boolean boolean0 = rssItunesItem0.equals(rssItunesItem1);
      assertEquals("0", rssItunesItem0.getAuthor());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", true, true, "", "", "", (byte)0, "");
      boolean boolean0 = rssItunesItem0.equals(rssItunesItem0);
      assertEquals("", rssItunesItem0.getAuthor());
      assertEquals("", rssItunesItem0.getSubtitle());
      assertTrue(rssItunesItem0.isItunes());
      assertEquals("no", rssItunesItem0.getExplicit());
      assertTrue(boolean0);
      assertEquals("", rssItunesItem0.getSummary());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", true, true, "", "", "", (byte)0, "");
      String string0 = rssItunesItem0.toString();
      assertEquals("true||||0||Thu Jan 01 09:00:00 KST 1970||true|", string0);
      assertTrue(rssItunesItem0.isItunes());
      assertEquals("", rssItunesItem0.getDuration());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", true);
      String string0 = rssItunesItem0.toString();
      assertEquals("false||||-1||Thu Jan 01 09:00:00 KST 1970||true|", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", true, true, "", "", "", (byte)0, "");
      String[] stringArray0 = new String[8];
      rssItunesItem0.init(true, stringArray0);
      assertTrue(rssItunesItem0.isItunes());
      assertEquals("", rssItunesItem0.getSummary());
      assertEquals("", rssItunesItem0.getSubtitle());
      assertEquals("no", rssItunesItem0.getExplicit());
      assertEquals("", rssItunesItem0.getAuthor());
      assertEquals("", rssItunesItem0.getDuration());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", false);
      rssItunesItem0.m_summary = "";
      String string0 = rssItunesItem0.unencodedSerialize();
      assertEquals("||||||||0||0|", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", false);
      rssItunesItem0.setAuthor("");
      String string0 = rssItunesItem0.unencodedSerialize();
      assertEquals("||||||||0||0|", string0);
      assertEquals("", rssItunesItem0.getAuthor());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      try { 
        RssItunesItem.unencodedDeserialize((String) null);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while RssItunesItem unencodedDeserialize 
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItunesItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RssItunesItem rssItunesItem0 = (RssItunesItem)RssItunesItem.unencodedDeserialize("||||||||3||1|");
      //  // Unstable assertion: assertEquals("", rssItunesItem0.getSummary());
      //  // Unstable assertion: assertEquals("", rssItunesItem0.getSubtitle());
      //  // Unstable assertion: assertTrue(rssItunesItem0.isUnreadItem());
      //  // Unstable assertion: assertTrue(rssItunesItem0.isItunes());
      //  // Unstable assertion: assertEquals("unspecified", rssItunesItem0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", (String) null, date0, (String) null, true, true, "", "", (String) null, (byte)0, "");
      String string0 = rssItunesItem0.getSummary();
      assertEquals("", rssItunesItem0.getSubtitle());
      assertEquals("", rssItunesItem0.getDuration());
      assertEquals("no", rssItunesItem0.getExplicit());
      assertEquals("", rssItunesItem0.getAuthor());
      assertTrue(rssItunesItem0.isItunes());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", false, false, "", "", "", (byte)0, "");
      rssItunesItem0.setSummary("0");
      rssItunesItem0.getSummary();
      assertEquals("0", rssItunesItem0.getSummary());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssItunesItem rssItunesItem0 = new RssItunesItem(rssItem0);
      rssItunesItem0.setSubtitle((String) null);
      String string0 = rssItunesItem0.getSubtitle();
      assertFalse(rssItunesItem0.isItunes());
      assertNull(string0);
      assertEquals("unspecified", rssItunesItem0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RssItunesItem rssItunesItem0 = new RssItunesItem();
      rssItunesItem0.setSubtitle("X");
      rssItunesItem0.getSubtitle();
      assertEquals("X", rssItunesItem0.getSubtitle());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssItunesItem rssItunesItem0 = new RssItunesItem(rssItem0);
      rssItunesItem0.setDuration((String) null);
      String string0 = rssItunesItem0.getDuration();
      assertNull(string0);
      assertEquals("unspecified", rssItunesItem0.getExplicit());
      assertFalse(rssItunesItem0.isItunes());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Date date0 = new Date();
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", true, true, "", "", "", (byte)0, "O");
      String string0 = rssItunesItem0.getDuration();
      assertTrue(rssItunesItem0.isItunes());
      assertEquals("no", rssItunesItem0.getExplicit());
      assertEquals("", rssItunesItem0.getAuthor());
      assertEquals("O", string0);
      assertEquals("", rssItunesItem0.getSummary());
      assertEquals("", rssItunesItem0.getSubtitle());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", false, false, "", "", "", (byte)0, "");
      rssItunesItem0.setAuthor((String) null);
      String string0 = rssItunesItem0.getAuthor();
      assertNull(string0);
      assertEquals("unspecified", rssItunesItem0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", true, true, "I", "", "", (byte)0, "");
      String string0 = rssItunesItem0.getAuthor();
      assertEquals("", rssItunesItem0.getSummary());
      assertEquals("", rssItunesItem0.getSubtitle());
      assertEquals("no", rssItunesItem0.getExplicit());
      assertEquals("I", string0);
      assertEquals("", rssItunesItem0.getDuration());
      assertTrue(rssItunesItem0.isItunes());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem((String) null, (String) null, (String) null, date0, "", true);
      // Undeclared exception!
      try { 
        rssItunesItem0.unencodedSerialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      try { 
        RssItunesItem.unencodedDeserialize("|||||");
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while RssItem init 
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Date date0 = new Date();
      RssItunesItem rssItunesItem0 = new RssItunesItem((String) null, (String) null, "", date0, "", true, true, "", "", "", (byte)0, "");
      // Undeclared exception!
      try { 
        rssItunesItem0.serialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Date date0 = new Date();
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", false, false, "", "", "", (byte)0, "");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[4] = "";
      try { 
        rssItunesItem0.init(false, stringArray0);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while RssItem init 
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", (Date) null, "", false);
      rssItunesItem0.setDuration((String) null);
      // Undeclared exception!
      try { 
        rssItunesItem0.equals(rssItunesItem0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      try { 
        RssItunesItem.deserialize("qfuKvTMPr12Rg");
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error while RssItunesItem deserialize 
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItunesItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RssItunesItem rssItunesItem0 = null;
      try {
        rssItunesItem0 = new RssItunesItem((RssItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RssItunesItem rssItunesItem0 = new RssItunesItem();
      RssItunesItem rssItunesItem1 = new RssItunesItem();
      rssItunesItem0.m_duration = "f";
      rssItunesItem0.equals(rssItunesItem1);
      assertEquals("unspecified", rssItunesItem1.getExplicit());
      assertFalse(rssItunesItem1.isItunes());
      assertFalse(rssItunesItem0.isItunes());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RssItunesItem rssItunesItem0 = new RssItunesItem();
      RssItunesItem rssItunesItem1 = new RssItunesItem(rssItunesItem0);
      rssItunesItem0.setExplicit(0);
      boolean boolean0 = rssItunesItem1.equals(rssItunesItem0);
      assertEquals("no", rssItunesItem0.getExplicit());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", true, true, "", "", "", (byte)1, "");
      String string0 = rssItunesItem0.getExplicit();
      assertEquals("", rssItunesItem0.getAuthor());
      assertEquals("", rssItunesItem0.getSubtitle());
      assertEquals("", rssItunesItem0.getSummary());
      assertTrue(rssItunesItem0.isItunes());
      assertEquals("clean", string0);
      assertEquals("", rssItunesItem0.getDuration());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssItunesItem rssItunesItem0 = new RssItunesItem(rssItem0);
      String string0 = rssItunesItem0.getExplicit();
      assertFalse(rssItunesItem0.isItunes());
      assertEquals("unspecified", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RssItunesItem rssItunesItem0 = new RssItunesItem();
      assertEquals("unspecified", rssItunesItem0.getExplicit());
      
      rssItunesItem0.setExplicit(0);
      rssItunesItem0.getExplicit();
      assertEquals("no", rssItunesItem0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssItunesItem rssItunesItem0 = new RssItunesItem(rssItem0);
      rssItunesItem0.setExplicit((-2));
      String string0 = rssItunesItem0.unencodedSerialize();
      assertEquals("||||-2||||||0|", string0);
      assertEquals("unspecified", rssItunesItem0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", false, false, "", "", "", (byte)0, "");
      String string0 = rssItunesItem0.getSubtitle();
      assertEquals("", string0);
      assertEquals("unspecified", rssItunesItem0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", false, false, "", "", "", (byte)0, "");
      String string0 = rssItunesItem0.getDuration();
      assertEquals("", string0);
      assertEquals("unspecified", rssItunesItem0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", false, false, "", "", "", (byte)0, "");
      rssItunesItem0.setSubtitle("");
      String string0 = rssItunesItem0.serialize();
      assertEquals("fHx8fHx8fHwwfHwwfA==", string0);
      assertEquals("", rssItunesItem0.getSubtitle());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RssItunesItem rssItunesItem0 = new RssItunesItem();
      boolean boolean0 = rssItunesItem0.isItunes();
      assertFalse(boolean0);
      assertEquals("unspecified", rssItunesItem0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", false, false, "", "", "", (byte)0, "");
      String string0 = rssItunesItem0.getAuthor();
      assertEquals("", string0);
      assertEquals("unspecified", rssItunesItem0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RssItunesItem rssItunesItem0 = new RssItunesItem();
      RssItunesItem rssItunesItem1 = new RssItunesItem("", "", "", rssItunesItem0.m_date, "", true);
      boolean boolean0 = rssItunesItem0.equals(rssItunesItem1);
      assertFalse(boolean0);
      assertFalse(rssItunesItem0.isItunes());
      assertEquals("unspecified", rssItunesItem1.getExplicit());
      assertEquals("unspecified", rssItunesItem0.getExplicit());
      assertFalse(rssItunesItem1.isItunes());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Date date0 = new Date();
      RssItunesItem rssItunesItem0 = new RssItunesItem((String) null, (String) null, "", date0, "", true, true, "", "", "", (byte)0, "");
      String string0 = rssItunesItem0.getSummary();
      assertNotNull(string0);
      assertEquals("", rssItunesItem0.getSubtitle());
      assertEquals("", rssItunesItem0.getDuration());
      assertEquals("no", rssItunesItem0.getExplicit());
      assertEquals("", rssItunesItem0.getAuthor());
      assertEquals("", string0);
      assertTrue(rssItunesItem0.isItunes());
  }
}
