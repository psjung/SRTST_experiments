/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 18:50:10 KST 2018
 */

package com.substanceofcode.rssreader.businessentities;

import static org.junit.Assert.assertEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.time.Clock;
import java.time.Instant;
import java.util.Date;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class CompatibilityRssItem3_ESTest3 extends CompatibilityRssItem3_ESTest_scaffolding3 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3((String) null);
      compatibilityRssItem3_0.m_desc = "";
      String string0 = compatibilityRssItem3_0.toString();
      assertEquals("||null||false|", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_0.setSubtitle("");
      String string0 = compatibilityRssItem3_0.toString();
      assertEquals("||null||false|", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.m_author = "";
      String string0 = compatibilityRssItem3_0.toString();
      assertEquals("||null||false|", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.m_unreadItem = true;
      String string0 = compatibilityRssItem3_0.toString();
      assertEquals("||null||true|", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.setEnclosure("");
      String string0 = compatibilityRssItem3_0.toString();
      assertEquals("||null||false|", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      compatibilityRssItem3_0.init(0, true, true, stringArray0);
      String string0 = compatibilityRssItem3_0.toString();
      assertEquals("|null|null||false|", string0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.m_unreadItem = true;
      CompatibilityRssItem3 compatibilityRssItem3_1 = CompatibilityRssItem3.deserialize3("ThuJan01090000KST1970true");
      compatibilityRssItem3_1.m_desc = "T";
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_1);
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", "", date0, "", false);
      compatibilityRssItem3_0.setEnclosure("");
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertEquals("", compatibilityRssItem3_0.getEnclosure());
      assertTrue(boolean0);
      assertEquals("", compatibilityRssItem3_0.getLink());
      assertFalse(compatibilityRssItem3_0.isUnreadItem());
      assertEquals("", compatibilityRssItem3_0.getDescription());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3();
      compatibilityRssItem3_0.setSubtitle("");
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      CompatibilityRssItem3 compatibilityRssItem3_1 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_0.m_link = "0";
      compatibilityRssItem3_1.m_unreadItem = true;
      boolean boolean0 = compatibilityRssItem3_1.equals((RssItem) compatibilityRssItem3_0);
      assertFalse(boolean0);
      assertEquals("", compatibilityRssItem3_1.getTitle());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("V");
      CompatibilityRssItem3 compatibilityRssItem3_1 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_1.m_unreadItem = true;
      boolean boolean0 = compatibilityRssItem3_1.equals((RssItem) compatibilityRssItem3_0);
      assertFalse(boolean0);
      assertEquals("V", compatibilityRssItem3_0.getTitle());
      assertEquals("", compatibilityRssItem3_0.getLink());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_0.m_itunes = true;
      CompatibilityRssItem3 compatibilityRssItem3_1 = CompatibilityRssItem3.unencodedDeserialize3("u");
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_1);
      assertEquals("", compatibilityRssItem3_1.getLink());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("O\n");
      assertEquals("", compatibilityRssItem3_0.getLink());
      assertEquals("O|", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[2] = "u";
      compatibilityRssItem3_0.init(0, false, true, stringArray0);
      assertFalse(compatibilityRssItem3_0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      CompatibilityRssItem3 compatibilityRssItem3_1 = new CompatibilityRssItem3(compatibilityRssItem3_0);
      String[] stringArray0 = new String[6];
      compatibilityRssItem3_1.m_itunes = true;
      assertEquals("", compatibilityRssItem3_1.getTitle());
      
      compatibilityRssItem3_1.init(0, true, true, stringArray0);
      assertEquals("", compatibilityRssItem3_1.getLink());
      assertEquals("", compatibilityRssItem3_1.getDescription());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.setSummary("");
      String string0 = compatibilityRssItem3_0.unencodedSerialize3();
      assertEquals("||||0|", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.setDuration("");
      String string0 = compatibilityRssItem3_0.serialize3();
      assertEquals("fHx8fDB8", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_0.setSubtitle("");
      String string0 = compatibilityRssItem3_0.unencodedSerialize3();
      assertEquals("||||0|", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.m_author = "";
      String string0 = compatibilityRssItem3_0.serialize3();
      assertEquals("fHx8fDB8", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3((String) null);
      compatibilityRssItem3_0.setEnclosure((String) null);
      String string0 = compatibilityRssItem3_0.unencodedSerialize3();
      assertNotNull(string0);
      assertEquals("|||null|0|", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "|";
      compatibilityRssItem3_0.init(0, true, true, stringArray0);
      compatibilityRssItem3_0.serialize3();
      assertEquals("|", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("||0");
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertEquals("", compatibilityRssItem3_0.getLink());
      assertEquals("", compatibilityRssItem3_0.getEnclosure());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", "", date0, "", true);
      boolean boolean0 = compatibilityRssItem3_0.isUnreadItem();
      //  // Unstable assertion: assertEquals("Sun Aug 12 18:49:32 KST 2018", date0.toString());
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3();
      compatibilityRssItem3_0.m_title = null;
      String string0 = compatibilityRssItem3_0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Clock clock0 = Clock.systemUTC();
      Instant instant0 = clock0.instant();
      Date date0 = Date.from(instant0);
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("0", "", "", date0, "", true);
      String string0 = compatibilityRssItem3_0.getTitle();
      assertEquals("", compatibilityRssItem3_0.getEnclosure());
      assertEquals("", compatibilityRssItem3_0.getDescription());
      assertEquals("0", string0);
      assertEquals("", compatibilityRssItem3_0.getLink());
      assertTrue(compatibilityRssItem3_0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.m_link = null;
      String string0 = compatibilityRssItem3_0.getLink();
      assertNull(string0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Date date0 = new Date(0L);
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "n", "", date0, "", true);
      String string0 = compatibilityRssItem3_0.getLink();
      assertEquals("", compatibilityRssItem3_0.getDescription());
      assertEquals("", compatibilityRssItem3_0.getEnclosure());
      assertTrue(compatibilityRssItem3_0.isUnreadItem());
      assertEquals("n", string0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", (String) null, date0, (String) null, true);
      String string0 = compatibilityRssItem3_0.getEnclosure();
      assertNull(string0);
      assertTrue(compatibilityRssItem3_0.isUnreadItem());
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertEquals("", compatibilityRssItem3_0.getLink());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.setEnclosure("r");
      compatibilityRssItem3_0.getEnclosure();
      assertEquals("r", compatibilityRssItem3_0.getEnclosure());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Instant instant0 = Instant.now();
      Date date0 = Date.from(instant0);
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", (String) null, date0, "", false);
      String string0 = compatibilityRssItem3_0.getDescription();
      assertFalse(compatibilityRssItem3_0.isUnreadItem());
      assertEquals("", compatibilityRssItem3_0.getEnclosure());
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertEquals("", compatibilityRssItem3_0.getLink());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3((String) null);
      compatibilityRssItem3_0.m_desc = "1";
      compatibilityRssItem3_0.getDescription();
      assertEquals("1", compatibilityRssItem3_0.getDescription());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      Date date0 = new Date();
      compatibilityRssItem3_0.m_date = date0;
      Date date1 = compatibilityRssItem3_0.getDate();
      //  // Unstable assertion: assertEquals("", compatibilityRssItem3_0.getTitle());
      //  // Unstable assertion: assertEquals("Sun Aug 12 18:49:30 KST 2018", date1.toString());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("fHx8fDB8");
      //  // Unstable assertion: assertEquals("", compatibilityRssItem3_0.getLink());
      //  // Unstable assertion: assertEquals("", compatibilityRssItem3_0.getTitle());
      //  // Unstable assertion: assertTrue(compatibilityRssItem3_0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3((String) null, "", (String) null, date0, (String) null, true);
      // Undeclared exception!
      try { 
        compatibilityRssItem3_0.unencodedSerialize3();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", (String) null, date0, (String) null, true);
      String[] stringArray0 = new String[9];
      compatibilityRssItem3_0.init(0, false, false, stringArray0);
      // Undeclared exception!
      try { 
        compatibilityRssItem3_0.serialize3();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3();
      // Undeclared exception!
      try { 
        compatibilityRssItem3_0.equals((RssItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3();
      // Undeclared exception!
      try { 
        compatibilityRssItem3_0.copyTo((CompatibilityRssItem3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = null;
      try {
        compatibilityRssItem3_0 = new CompatibilityRssItem3((RssItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = null;
      try {
        compatibilityRssItem3_0 = new CompatibilityRssItem3((CompatibilityRssItem3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      CompatibilityRssItem3 compatibilityRssItem3_1 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_1.m_unreadItem = true;
      compatibilityRssItem3_1.equals((RssItem) compatibilityRssItem3_0);
      assertEquals("", compatibilityRssItem3_1.getTitle());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3();
      CompatibilityRssItem3 compatibilityRssItem3_1 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_0.setEnclosure("I");
      boolean boolean0 = compatibilityRssItem3_1.equals((RssItem) compatibilityRssItem3_0);
      assertEquals("I", compatibilityRssItem3_0.getEnclosure());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      Date date0 = new Date();
      CompatibilityRssItem3 compatibilityRssItem3_1 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.m_date = date0;
      //  // Unstable assertion: assertEquals("Sun Aug 12 18:49:28 KST 2018", compatibilityRssItem3_0.m_date.toString());
      
      boolean boolean0 = compatibilityRssItem3_1.equals((RssItem) compatibilityRssItem3_0);
      //  // Unstable assertion: assertEquals("", compatibilityRssItem3_1.getTitle());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      CompatibilityRssItem3 compatibilityRssItem3_1 = CompatibilityRssItem3.deserialize3("");
      Instant instant0 = Instant.EPOCH;
      Date date0 = Date.from(instant0);
      compatibilityRssItem3_0.m_date = date0;
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_1);
      assertEquals("", compatibilityRssItem3_1.getTitle());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = "!lC!k$*$|s?W\\u|wYs";
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3(string0);
      CompatibilityRssItem3 compatibilityRssItem3_1 = CompatibilityRssItem3.unencodedDeserialize3("||||||");
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_1);
      assertEquals("|", compatibilityRssItem3_1.getDescription());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", (String) null, date0, (String) null, true);
      //  // Unstable assertion: assertEquals("", compatibilityRssItem3_0.getTitle());
      
      String[] stringArray0 = new String[9];
      stringArray0[3] = "T";
      compatibilityRssItem3_0.init(1, false, false, stringArray0);
      //  // Unstable assertion: assertEquals("Sun Aug 12 18:49:26 KST 2018", date0.toString());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[2] = "G";
      compatibilityRssItem3_0.init(0, true, true, stringArray0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("\n");
      assertEquals("|", compatibilityRssItem3_0.getTitle());
      assertEquals("", compatibilityRssItem3_0.getLink());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_0.setUnreadItem(true);
      compatibilityRssItem3_0.unencodedSerialize3();
      assertTrue(compatibilityRssItem3_0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      Date date0 = new Date();
      compatibilityRssItem3_0.m_date = date0;
      String string0 = compatibilityRssItem3_0.unencodedSerialize3();
      //  // Unstable assertion: assertEquals("||1652d8a5613||0|", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3();
      boolean boolean0 = compatibilityRssItem3_0.isUnreadItem();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Date date0 = new Date(0L);
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", "", date0, "", true);
      CompatibilityRssItem3 compatibilityRssItem3_1 = new CompatibilityRssItem3((RssItem) compatibilityRssItem3_0);
      assertEquals("", compatibilityRssItem3_1.getTitle());
      assertEquals("", compatibilityRssItem3_1.getLink());
      assertEquals("", compatibilityRssItem3_1.getDescription());
      assertTrue(compatibilityRssItem3_0.isUnreadItem());
      assertEquals("", compatibilityRssItem3_1.getEnclosure());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3();
      String string0 = compatibilityRssItem3_0.getLink();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3();
      String string0 = compatibilityRssItem3_0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3();
      String string0 = compatibilityRssItem3_0.getEnclosure();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Date date0 = new Date(0L);
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", "", date0, "", true);
      CompatibilityRssItem3 compatibilityRssItem3_1 = compatibilityRssItem3_0.copyTo(compatibilityRssItem3_0);
      assertEquals("", compatibilityRssItem3_1.getDescription());
      assertEquals("", compatibilityRssItem3_1.getLink());
      assertEquals("", compatibilityRssItem3_1.getEnclosure());
      assertTrue(compatibilityRssItem3_1.isUnreadItem());
      assertEquals("", compatibilityRssItem3_1.getTitle());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3();
      Date date0 = compatibilityRssItem3_0.getDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      String string0 = compatibilityRssItem3_0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3();
      CompatibilityRssItem3 compatibilityRssItem3_1 = new CompatibilityRssItem3(compatibilityRssItem3_0);
      compatibilityRssItem3_1.m_itunes = true;
      assertFalse(compatibilityRssItem3_1.isUnreadItem());
      
      CompatibilityRssItem3 compatibilityRssItem3_2 = compatibilityRssItem3_0.copyTo(compatibilityRssItem3_1);
      assertEquals("", compatibilityRssItem3_1.getLink());
      assertEquals("", compatibilityRssItem3_1.getDescription());
      assertTrue(compatibilityRssItem3_2.isItunes());
      assertEquals("", compatibilityRssItem3_1.getEnclosure());
      assertEquals("", compatibilityRssItem3_1.getTitle());
  }
}
