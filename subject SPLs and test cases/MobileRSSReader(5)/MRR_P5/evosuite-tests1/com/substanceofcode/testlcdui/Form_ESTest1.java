/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 15:54:08 KST 2018
 */

package com.substanceofcode.testlcdui;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import javax.microedition.lcdui.Command;
import javax.microedition.lcdui.DateField;
import javax.microedition.lcdui.Gauge;
import javax.microedition.lcdui.Image;
import javax.microedition.lcdui.ImageItem;
import javax.microedition.lcdui.Item;
import javax.microedition.lcdui.Spacer;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class Form_ESTest1 extends Form_ESTest_scaffolding1 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Item[] itemArray0 = new Item[2];
      Form form0 = new Form("E", itemArray0);
      String string0 = form0.getTitle();
      assertEquals("E", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Item[] itemArray0 = new Item[3];
      Form form0 = new Form("", itemArray0);
      String string0 = form0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Form form0 = new Form("", (Item[]) null);
      // Undeclared exception!
      try { 
        form0.insert(0, (Item) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.testlcdui.Form", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try { 
        form0.append((Item) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.testlcdui.Form", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Form form0 = new Form("");
      String string0 = form0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Form form0 = new Form("");
      Command command0 = new Command("", "", 0, 0);
      List list0 = new List("", 0);
      form0.outputCmdAct(command0, list0);
      assertNull(form0.getTitle());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try { 
        form0.outputCmdAct((Command) null, form0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.testlcdui.Form", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Item[] itemArray0 = new Item[3];
      Form form0 = new Form("", itemArray0);
      Command command0 = new Command("", 0, 0);
      TextBox textBox0 = new TextBox("", "", 0, 0);
      form0.outputCmdAct(command0, textBox0);
      assertEquals("", form0.getTitle());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Form form0 = new Form("");
      javax.microedition.lcdui.StringItem stringItem0 = new javax.microedition.lcdui.StringItem("", "");
      form0.set(0, stringItem0);
      assertNull(form0.getTitle());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Item[] itemArray0 = new Item[1];
      TextField textField0 = new TextField((String) null, "", 0, 0);
      Form form0 = new Form((String) null, itemArray0);
      form0.set(0, textField0);
      assertNull(form0.getTitle());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Item[] itemArray0 = new Item[3];
      Spacer spacer0 = new Spacer(0, 0);
      Form form0 = new Form("", itemArray0);
      form0.set(0, spacer0);
      assertEquals("", form0.getTitle());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Item[] itemArray0 = new Item[1];
      ImageItem imageItem0 = new ImageItem("", (Image) null, 0, (String) null, (byte)0);
      itemArray0[0] = (Item) imageItem0;
      Form form0 = new Form("", itemArray0);
      form0.insert(0, itemArray0[0]);
      assertEquals(1, itemArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Form form0 = new Form((String) null);
      DateField dateField0 = new DateField((String) null, 0);
      form0.insert(0, dateField0);
      assertNull(form0.getTitle());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Item[] itemArray0 = new Item[1];
      TextField textField0 = new TextField((String) null, "", 0, 0);
      itemArray0[0] = (Item) textField0;
      Form form0 = new Form((String) null, itemArray0);
      form0.insert(0, itemArray0[0]);
      assertEquals(1, itemArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Item[] itemArray0 = new Item[3];
      Form form0 = new Form("", itemArray0);
      StringItem stringItem0 = new StringItem("", "");
      form0.insert(0, stringItem0);
      assertEquals("", form0.getTitle());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Item[] itemArray0 = new Item[3];
      ImageItem imageItem0 = new ImageItem("", (Image) null, 0, "", 0);
      Form form0 = new Form("", itemArray0);
      int int0 = form0.append((Item) imageItem0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Item[] itemArray0 = new Item[3];
      Form form0 = new Form("", itemArray0);
      StringItem stringItem0 = new StringItem("", "");
      int int0 = form0.append((Item) stringItem0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Item[] itemArray0 = new Item[1];
      TextField textField0 = new TextField((String) null, "", 0, 0);
      itemArray0[0] = (Item) textField0;
      Form form0 = new Form((String) null, itemArray0);
      int int0 = form0.append(itemArray0[0]);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Item[] itemArray0 = new Item[1];
      Form form0 = new Form((String) null, itemArray0);
      Gauge gauge0 = new Gauge((String) null, true, 0, 0);
      int int0 = form0.append((Item) gauge0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Form form0 = new Form("");
      form0.delete(0);
      assertNull(form0.getTitle());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Form form0 = new Form("");
      TextBox textBox0 = new TextBox("", "", 0, 0);
      form0.setCommandListener(textBox0);
      assertNull(form0.getTitle());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Form form0 = new Form("");
      form0.deleteAll();
      assertNull(form0.getTitle());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Form form0 = new Form("");
      int int0 = form0.append((String) null);
      assertEquals(0, int0);
  }
}
