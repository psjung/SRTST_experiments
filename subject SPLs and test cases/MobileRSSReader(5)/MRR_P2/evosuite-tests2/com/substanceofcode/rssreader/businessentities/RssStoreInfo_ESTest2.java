/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 17:21:13 KST 2018
 */

package com.substanceofcode.rssreader.businessentities;

import static org.junit.Assert.assertEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class RssStoreInfo_ESTest2 extends RssStoreInfo_ESTest_scaffolding2 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, 0L, 0L);
      rssStoreInfo0.setJoinTime(1L);
      assertEquals(1L, rssStoreInfo0.getJoinTime());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, 0L, 0L);
      rssStoreInfo0.setSplitTime(1L);
      assertEquals(1L, rssStoreInfo0.getSplitTime());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "");
      assertEquals(0L, rssStoreInfo0.getSplitTime());
      assertEquals(0L, rssStoreInfo0.getJoinTime());
      assertEquals(0L, rssStoreInfo0.getEncodeTime());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", (String) null, 0L, 0L, 0L);
      String string0 = rssStoreInfo0.getStoreString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "2", 0L, 0L, 0L);
      String string0 = rssStoreInfo0.getStoreString();
      assertEquals("2", string0);
      assertEquals("", rssStoreInfo0.getName());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, 1L, 0L);
      long long0 = rssStoreInfo0.getSplitTime();
      assertEquals(1L, long0);
      assertEquals(0L, rssStoreInfo0.getJoinTime());
      assertEquals(0L, rssStoreInfo0.getEncodeTime());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, (-1L), 0L);
      long long0 = rssStoreInfo0.getSplitTime();
      assertEquals(0L, rssStoreInfo0.getJoinTime());
      assertEquals((-1L), long0);
      assertEquals(0L, rssStoreInfo0.getEncodeTime());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, 0L, 0L);
      rssStoreInfo0.setName((String) null);
      String string0 = rssStoreInfo0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("E", "", 0L, 0L, 0L);
      String string0 = rssStoreInfo0.getName();
      assertEquals("E", string0);
      assertNotNull(string0);
      assertEquals("", rssStoreInfo0.getStoreString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, 0L, 1L);
      long long0 = rssStoreInfo0.getJoinTime();
      assertEquals(1L, long0);
      assertEquals(0L, rssStoreInfo0.getEncodeTime());
      assertEquals(0L, rssStoreInfo0.getSplitTime());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, 0L, 0L);
      rssStoreInfo0.m_joinTime = (-1L);
      long long0 = rssStoreInfo0.getJoinTime();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, 0L, 0L);
      rssStoreInfo0.setEncodeTime(1L);
      long long0 = rssStoreInfo0.getEncodeTime();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", (-1L), 0L, 0L);
      long long0 = rssStoreInfo0.getEncodeTime();
      assertEquals((-1L), long0);
      assertEquals(0L, rssStoreInfo0.getSplitTime());
      assertEquals(0L, rssStoreInfo0.getJoinTime());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, 0L, 0L);
      rssStoreInfo0.setStoreString("");
      assertEquals(0L, rssStoreInfo0.getSplitTime());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, 0L, 0L);
      String string0 = rssStoreInfo0.getStoreString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, 0L, 0L);
      long long0 = rssStoreInfo0.getSplitTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, 0L, 0L);
      long long0 = rssStoreInfo0.getEncodeTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, 0L, 0L);
      long long0 = rssStoreInfo0.getJoinTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = new RssStoreInfo("", "", 0L, 0L, 0L);
      String string0 = rssStoreInfo0.getName();
      assertEquals("", string0);
  }
}
