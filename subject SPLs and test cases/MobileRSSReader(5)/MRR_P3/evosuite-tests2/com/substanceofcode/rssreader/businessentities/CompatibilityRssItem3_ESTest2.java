/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 17:01:24 KST 2018
 */

package com.substanceofcode.rssreader.businessentities;

import static org.junit.Assert.assertEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.time.Instant;
import java.util.Date;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class CompatibilityRssItem3_ESTest2 extends CompatibilityRssItem3_ESTest_scaffolding2 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_0.setUnreadItem(true);
      compatibilityRssItem3_0.toString();
      assertTrue(compatibilityRssItem3_0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.setDuration("");
      String string0 = compatibilityRssItem3_0.toString();
      assertEquals("||null||false|", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.setSubtitle("");
      String string0 = compatibilityRssItem3_0.toString();
      assertEquals("||null||false|", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_0.m_author = "";
      String string0 = compatibilityRssItem3_0.toString();
      assertEquals("||null||false|", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.m_link = null;
      String string0 = compatibilityRssItem3_0.toString();
      assertEquals("|null|null||false|", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_0.setSummary("");
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_0);
      assertTrue(boolean0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_0.setDuration("");
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_0);
      assertTrue(boolean0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_0.m_enclosure = "";
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_0);
      assertTrue(boolean0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.setSubtitle("");
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.m_link = "";
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_0);
      assertTrue(boolean0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.setAuthor("");
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      CompatibilityRssItem3 compatibilityRssItem3_1 = new CompatibilityRssItem3(compatibilityRssItem3_0);
      assertFalse(compatibilityRssItem3_1.isUnreadItem());
      
      compatibilityRssItem3_0.m_link = "G";
      compatibilityRssItem3_1.setUnreadItem(true);
      boolean boolean0 = compatibilityRssItem3_1.equals((RssItem) compatibilityRssItem3_0);
      assertTrue(compatibilityRssItem3_1.isUnreadItem());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("T");
      compatibilityRssItem3_0.setUnreadItem(true);
      Date date0 = new Date(0L);
      CompatibilityRssItem3 compatibilityRssItem3_1 = new CompatibilityRssItem3("", "", "", date0, "", true);
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_1);
      assertTrue(compatibilityRssItem3_0.isUnreadItem());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[2] = "e";
      compatibilityRssItem3_0.setUnreadItem(true);
      compatibilityRssItem3_0.init(0, false, true, stringArray0);
      assertTrue(compatibilityRssItem3_0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      String[] stringArray0 = new String[7];
      compatibilityRssItem3_0.init(1, false, false, stringArray0);
      assertEquals(500, RssItunesItem.MAX_SUMMARY);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      String[] stringArray0 = new String[8];
      compatibilityRssItem3_0.m_itunes = true;
      compatibilityRssItem3_0.init(0, true, false, stringArray0);
      assertEquals("", compatibilityRssItem3_0.getSummary());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "|";
      compatibilityRssItem3_0.init(0, false, true, stringArray0);
      compatibilityRssItem3_0.unencodedSerialize3();
      assertEquals("|", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3((String) null);
      assertEquals(6, RssItunesItem.ITITLE_OFFSET);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("XF89QVVdQTlHU1A6Q2ApbUl6fFxfPUFVXUE5R1NQOkNgKW1JenwtMjk1fG5vfDF8bm8=");
      assertTrue(compatibilityRssItem3_0.isUnreadItem());
      assertEquals("\\_=AU]A9GSP:C`)mIz", compatibilityRssItem3_0.getLink());
      assertEquals("\\_=AU]A9GSP:C`)mIz", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", "", (Date) null, "", true);
      String[] stringArray0 = new String[4];
      compatibilityRssItem3_0.init(0, true, true, stringArray0);
      assertEquals("", compatibilityRssItem3_0.getDescription());
      assertTrue(compatibilityRssItem3_0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      compatibilityRssItem3_0.init(0, true, true, stringArray0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", "", date0, "", true);
      boolean boolean0 = compatibilityRssItem3_0.isUnreadItem();
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertTrue(boolean0);
      assertEquals("", compatibilityRssItem3_0.getDescription());
      assertEquals("", compatibilityRssItem3_0.getLink());
      assertEquals("", compatibilityRssItem3_0.getEnclosure());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("e");
      String string0 = compatibilityRssItem3_0.getTitle();
      assertEquals("", compatibilityRssItem3_0.getLink());
      assertEquals("e", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.m_link = null;
      String string0 = compatibilityRssItem3_0.getLink();
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "M", "", (Date) null, "", false);
      String string0 = compatibilityRssItem3_0.getLink();
      assertFalse(compatibilityRssItem3_0.isUnreadItem());
      assertEquals("", compatibilityRssItem3_0.getEnclosure());
      assertEquals("", compatibilityRssItem3_0.getDescription());
      assertEquals("M", string0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", (String) null, "", date0, (String) null, true);
      String string0 = compatibilityRssItem3_0.getEnclosure();
      //  // Unstable assertion: assertTrue(compatibilityRssItem3_0.isUnreadItem());
      //  // Unstable assertion: assertEquals("", compatibilityRssItem3_0.getTitle());
      //  // Unstable assertion: assertNull(string0);
      //  // Unstable assertion: assertEquals("Sun Aug 12 17:00:48 KST 2018", date0.toString());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", "", (Date) null, "U", false);
      String string0 = compatibilityRssItem3_0.getEnclosure();
      assertEquals("U", string0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertEquals("", compatibilityRssItem3_0.getLink());
      assertEquals("", compatibilityRssItem3_0.getDescription());
      assertFalse(compatibilityRssItem3_0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", (String) null, date0, "", true);
      String string0 = compatibilityRssItem3_0.getDescription();
      assertEquals("", compatibilityRssItem3_0.getLink());
      assertEquals("", compatibilityRssItem3_0.getEnclosure());
      assertTrue(compatibilityRssItem3_0.isUnreadItem());
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Date date0 = new Date(0L);
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", "r", date0, "", false);
      String string0 = compatibilityRssItem3_0.getDescription();
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertEquals("", compatibilityRssItem3_0.getEnclosure());
      assertEquals("r", string0);
      assertFalse(compatibilityRssItem3_0.isUnreadItem());
      assertEquals("", compatibilityRssItem3_0.getLink());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3();
      Date date0 = new Date(0L);
      CompatibilityRssItem3 compatibilityRssItem3_1 = new CompatibilityRssItem3("", "", "", date0, "", false);
      CompatibilityRssItem3 compatibilityRssItem3_2 = compatibilityRssItem3_1.copyTo(compatibilityRssItem3_0);
      Date date1 = compatibilityRssItem3_0.getDate();
      assertFalse(compatibilityRssItem3_0.isUnreadItem());
      assertEquals("", compatibilityRssItem3_0.getLink());
      assertEquals("", compatibilityRssItem3_0.getEnclosure());
      assertEquals("", compatibilityRssItem3_0.getDescription());
      assertSame(compatibilityRssItem3_0, compatibilityRssItem3_2);
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertNotNull(date1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("fHx8fDB8");
      //  // Unstable assertion: assertEquals("", compatibilityRssItem3_0.getTitle());
      //  // Unstable assertion: assertTrue(compatibilityRssItem3_0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_0.m_itunes = true;
      CompatibilityRssItem3 compatibilityRssItem3_1 = compatibilityRssItem3_0.copyTo(compatibilityRssItem3_0);
      assertEquals("", compatibilityRssItem3_1.getLink());
      assertFalse(compatibilityRssItem3_1.isUnreadItem());
      assertEquals("", compatibilityRssItem3_1.getEnclosure());
      assertEquals("", compatibilityRssItem3_1.getTitle());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3((String) null, (String) null, "", date0, "", false);
      // Undeclared exception!
      try { 
        compatibilityRssItem3_0.serialize3();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      // Undeclared exception!
      try { 
        compatibilityRssItem3_0.equals((RssItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = null;
      try {
        compatibilityRssItem3_0 = new CompatibilityRssItem3((RssItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = null;
      try {
        compatibilityRssItem3_0 = new CompatibilityRssItem3((CompatibilityRssItem3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      CompatibilityRssItem3 compatibilityRssItem3_1 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_1.m_desc = "X";
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_1);
      assertFalse(boolean0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3();
      // Undeclared exception!
      try { 
        compatibilityRssItem3_0.copyTo((CompatibilityRssItem3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      CompatibilityRssItem3 compatibilityRssItem3_1 = new CompatibilityRssItem3(compatibilityRssItem3_0);
      compatibilityRssItem3_1.setUnreadItem(true);
      boolean boolean0 = compatibilityRssItem3_1.equals((RssItem) compatibilityRssItem3_0);
      assertTrue(compatibilityRssItem3_1.isUnreadItem());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      CompatibilityRssItem3 compatibilityRssItem3_1 = CompatibilityRssItem3.unencodedDeserialize3("");
      compatibilityRssItem3_0.copyTo(compatibilityRssItem3_1);
      compatibilityRssItem3_1.setEnclosure("j");
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_1);
      assertEquals("j", compatibilityRssItem3_1.getEnclosure());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      Instant instant0 = Instant.EPOCH;
      Date date0 = Date.from(instant0);
      RssItunesItem rssItunesItem0 = new RssItunesItem("", "", "", date0, "", false, false, "", "", "", (byte)0, "");
      compatibilityRssItem3_0.equals((RssItem) rssItunesItem0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      RssItem rssItem0 = new RssItem(compatibilityRssItem3_0);
      Date date0 = new Date();
      compatibilityRssItem3_0.m_date = date0;
      //  // Unstable assertion: assertEquals("Sun Aug 12 17:00:44 KST 2018", compatibilityRssItem3_0.m_date.toString());
      
      boolean boolean0 = compatibilityRssItem3_0.equals(rssItem0);
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      Date date0 = new Date(0L);
      compatibilityRssItem3_0.m_date = date0;
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_0);
      assertTrue(boolean0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("|\"");
      CompatibilityRssItem3 compatibilityRssItem3_1 = CompatibilityRssItem3.deserialize3("gfvIlrBiI");
      boolean boolean0 = compatibilityRssItem3_0.equals((RssItem) compatibilityRssItem3_1);
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("\n");
      assertEquals("", compatibilityRssItem3_0.getLink());
      assertEquals("|", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("||||");
      //  // Unstable assertion: assertTrue(compatibilityRssItem3_0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Date date0 = new Date(0L);
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", "", date0, "", true);
      String string0 = compatibilityRssItem3_0.unencodedSerialize3();
      assertTrue(compatibilityRssItem3_0.isUnreadItem());
      assertEquals("||0||1|", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = new CompatibilityRssItem3("", "", "", (Date) null, "", false);
      boolean boolean0 = compatibilityRssItem3_0.isUnreadItem();
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertFalse(boolean0);
      assertEquals("", compatibilityRssItem3_0.getDescription());
      assertEquals("", compatibilityRssItem3_0.getLink());
      assertEquals("", compatibilityRssItem3_0.getEnclosure());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      String string0 = compatibilityRssItem3_0.getLink();
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      String string0 = compatibilityRssItem3_0.serialize3();
      assertEquals("fHx8fDB8", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.unencodedDeserialize3("");
      String string0 = compatibilityRssItem3_0.getDescription();
      assertEquals("", compatibilityRssItem3_0.getTitle());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      String string0 = compatibilityRssItem3_0.getEnclosure();
      assertEquals("", string0);
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      compatibilityRssItem3_0.getDate();
      assertEquals("", compatibilityRssItem3_0.getTitle());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      CompatibilityRssItem3 compatibilityRssItem3_1 = new CompatibilityRssItem3(compatibilityRssItem3_0);
      compatibilityRssItem3_1.m_title = null;
      // Undeclared exception!
      try { 
        compatibilityRssItem3_1.unencodedSerialize3();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem3", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      String string0 = compatibilityRssItem3_0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CompatibilityRssItem3 compatibilityRssItem3_0 = CompatibilityRssItem3.deserialize3("");
      CompatibilityRssItem3 compatibilityRssItem3_1 = new CompatibilityRssItem3((RssItem) compatibilityRssItem3_0);
      assertEquals("", compatibilityRssItem3_1.getDescription());
      assertFalse(compatibilityRssItem3_1.isUnreadItem());
      assertEquals("", compatibilityRssItem3_1.getTitle());
  }
}
