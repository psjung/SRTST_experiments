/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 16:59:09 KST 2018
 */

package com.substanceofcode.rssreader.businessentities;

import static org.junit.Assert.assertEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.Date;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class CompatibilityRssItem2_ESTest2 extends CompatibilityRssItem2_ESTest_scaffolding2 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2("|", "", "");
      String string0 = compatibilityRssItem2_0.serialize();
      assertEquals("Cnx8fHwwfA==", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompatibilityRssItem2 compatibilityRssItem2_0 = CompatibilityRssItem2.deserialize2("");
      assertNull(compatibilityRssItem2_0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2((String) null, (String) null, "");
      // Undeclared exception!
      try { 
        compatibilityRssItem2_0.serialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem2", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2((String) null, (String) null, (String) null);
      // Undeclared exception!
      try { 
        compatibilityRssItem2_0.equals((RssItem) compatibilityRssItem2_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompatibilityRssItem2 compatibilityRssItem2_0 = null;
      try {
        compatibilityRssItem2_0 = new CompatibilityRssItem2((RssItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem2", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2();
      compatibilityRssItem2_0.m_unreadItem = true;
      CompatibilityRssItem2 compatibilityRssItem2_1 = new CompatibilityRssItem2();
      boolean boolean0 = compatibilityRssItem2_0.equals((RssItem) compatibilityRssItem2_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2("", "", "", date0, "", false);
      CompatibilityRssItem2 compatibilityRssItem2_1 = new CompatibilityRssItem2(compatibilityRssItem2_0);
      compatibilityRssItem2_1.m_enclosure = null;
      boolean boolean0 = compatibilityRssItem2_1.equals((RssItem) compatibilityRssItem2_0);
      assertFalse(compatibilityRssItem2_1.isUnreadItem());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2("", "", "", date0, "", false);
      Date date1 = new Date(0L);
      CompatibilityRssItem2 compatibilityRssItem2_1 = new CompatibilityRssItem2(compatibilityRssItem2_0);
      compatibilityRssItem2_1.m_date = date1;
      boolean boolean0 = compatibilityRssItem2_1.equals((RssItem) compatibilityRssItem2_0);
      assertFalse(boolean0);
      assertFalse(compatibilityRssItem2_1.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Date date0 = new Date(0L);
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2("", "", "", date0, "", false);
      CompatibilityRssItem2 compatibilityRssItem2_1 = new CompatibilityRssItem2();
      boolean boolean0 = compatibilityRssItem2_1.equals((RssItem) compatibilityRssItem2_0);
      assertFalse(boolean0);
      assertFalse(compatibilityRssItem2_0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2();
      boolean boolean0 = compatibilityRssItem2_0.equals((RssItem) compatibilityRssItem2_0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Date date0 = new Date(0L);
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2("", "", "", date0, "", false);
      CompatibilityRssItem2 compatibilityRssItem2_1 = new CompatibilityRssItem2();
      boolean boolean0 = compatibilityRssItem2_0.equals((RssItem) compatibilityRssItem2_1);
      assertFalse(boolean0);
      assertFalse(compatibilityRssItem2_0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2();
      CompatibilityRssItem2 compatibilityRssItem2_1 = CompatibilityRssItem2.deserialize2("fHx8fDB8");
      assertEquals("", compatibilityRssItem2_1.getDescription());
      assertNotNull(compatibilityRssItem2_1);
      
      compatibilityRssItem2_1.m_desc = "W";
      boolean boolean0 = compatibilityRssItem2_0.equals((RssItem) compatibilityRssItem2_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2("", "i", "", date0, "", false);
      RssItem rssItem0 = new RssItem();
      boolean boolean0 = compatibilityRssItem2_0.equals(rssItem0);
      assertEquals("", compatibilityRssItem2_0.getEnclosure());
      assertFalse(boolean0);
      assertEquals("i", compatibilityRssItem2_0.getLink());
      assertFalse(compatibilityRssItem2_0.isUnreadItem());
      assertEquals("", compatibilityRssItem2_0.getTitle());
      assertEquals("", compatibilityRssItem2_0.getDescription());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2();
      CompatibilityRssItem2 compatibilityRssItem2_1 = CompatibilityRssItem2.deserialize2("fHx8fDB8");
      assertNotNull(compatibilityRssItem2_1);
      assertEquals("", compatibilityRssItem2_1.getTitle());
      
      compatibilityRssItem2_1.m_title = "f";
      boolean boolean0 = compatibilityRssItem2_0.equals((RssItem) compatibilityRssItem2_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompatibilityRssItem2 compatibilityRssItem2_0 = CompatibilityRssItem2.deserialize2("fHx8fHwtMXx8MHx8MHw=");
      assertFalse(compatibilityRssItem2_0.isUnreadItem());
      assertEquals("||-1||0||0|", compatibilityRssItem2_0.getDescription());
      assertEquals("", compatibilityRssItem2_0.getTitle());
      assertEquals("", compatibilityRssItem2_0.getEnclosure());
      assertEquals("", compatibilityRssItem2_0.getLink());
      assertNotNull(compatibilityRssItem2_0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompatibilityRssItem2 compatibilityRssItem2_0 = CompatibilityRssItem2.deserialize2("fD19JSd9XGk/VSQteXNfXDIme298MTUzNDA2MDcyNjUzOHx8MHw=");
      assertEquals("", compatibilityRssItem2_0.getTitle());
      assertFalse(compatibilityRssItem2_0.isUnreadItem());
      assertEquals("", compatibilityRssItem2_0.getDescription());
      assertEquals("", compatibilityRssItem2_0.getEnclosure());
      assertNotNull(compatibilityRssItem2_0);
      assertEquals("=}%'}\\i?U$-ys_\\2&{o", compatibilityRssItem2_0.getLink());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2();
      compatibilityRssItem2_0.m_unreadItem = true;
      String string0 = compatibilityRssItem2_0.serialize();
      assertEquals("fHx8fDF8", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem2 compatibilityRssItem2_0 = new CompatibilityRssItem2("", "", "", date0, "", false);
      String string0 = compatibilityRssItem2_0.serialize();
      //  // Unstable assertion: assertEquals("fHwxNTM0MDYwNzMxMDI3fHwwfA==", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompatibilityRssItem2 compatibilityRssItem2_0 = CompatibilityRssItem2.deserialize2("fHx8fDF8");
      assertEquals("", compatibilityRssItem2_0.getDescription());
      assertEquals("", compatibilityRssItem2_0.getTitle());
      assertEquals("", compatibilityRssItem2_0.getLink());
      assertTrue(compatibilityRssItem2_0.isUnreadItem());
      assertNotNull(compatibilityRssItem2_0);
  }
}
