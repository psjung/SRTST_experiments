/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 14:58:19 KST 2018
 */

package com.substanceofcode.rssreader.businessentities;

import static org.junit.Assert.assertEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.Date;
import java.util.Vector;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import static org.evosuite.runtime.EvoAssertions.*;
import com.substanceofcode.rssreader.presentation.RssReaderMIDlet;
import com.substanceofcode.utils.CauseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class RssItunesFeed_ESTest1 extends RssItunesFeed_ESTest_scaffolding1 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed((String) null, "", "", (String) null);
      rssItunesFeed0.setExplicit((-2));
      String string0 = rssItunesFeed0.toString();
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
      assertNotNull(string0);
      assertEquals("false|||||||-2|null|||null|||-1||", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      try { 
        RssItunesFeed.deserialize(true, (String) null);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error during deserialize
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItunesFeed", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "", (Date) null, "", (Date) null, 0, true, "", (String) null, "", "", "", "", (byte)0);
      boolean boolean0 = rssItunesFeed0.isItunes();
      assertEquals("", rssItunesFeed0.getLanguage());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "", (Date) null, "", (Date) null, 0, true, (String) null, "", "", "", (String) null, "", (byte)0);
      String string0 = rssItunesFeed0.getTitle();
      assertEquals("no", rssItunesFeed0.getExplicit());
      assertNull(string0);
      assertTrue(rssItunesFeed0.isItunes());
      assertEquals("", rssItunesFeed0.getDescription());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      rssItunesFeed0.m_subtitle = "h";
      rssItunesFeed0.getSubtitle();
      assertEquals("h", rssItunesFeed0.getSubtitle());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Date date0 = new Date();
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "", date0, (String) null, date0, 0, true, "", "", "u", "", "", "", (byte)0);
      String string0 = rssItunesFeed0.getLanguage();
      assertEquals("", rssItunesFeed0.getAuthor());
      assertTrue(rssItunesFeed0.isItunes());
      assertEquals("no", rssItunesFeed0.getExplicit());
      assertEquals("", rssItunesFeed0.getSummary());
      assertEquals("", rssItunesFeed0.getTitle());
      assertEquals("u", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "", date0, "", date0, 0, false, "", "", (String) null, (String) null, "", (String) null, (byte)0);
      rssItunesFeed0.modifyItunes(false, "", "R", "", "", "", (String) null, (byte)0);
      rssItunesFeed0.getDescription();
      assertEquals("R", rssItunesFeed0.getDescription());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "", date0, "", date0, 0, false, "", "", "", "", "", "", (byte)0);
      int int0 = rssItunesFeed0.getCategory();
      assertEquals(0, int0);
      assertFalse(rssItunesFeed0.isItunes());
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Date date0 = new Date(0L);
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "", date0, "", date0, 1, false, "", "", (String) null, (String) null, "", (String) null, (byte)0);
      int int0 = rssItunesFeed0.getCategory();
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
      assertFalse(rssItunesFeed0.isItunes());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      rssItunesFeed0.setAuthor((String) null);
      String string0 = rssItunesFeed0.getAuthor();
      assertFalse(rssItunesFeed0.isItunes());
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "");
      rssItunesFeed0.setAuthor("c");
      rssItunesFeed0.getAuthor();
      assertEquals("c", rssItunesFeed0.getAuthor());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      Vector<String> vector0 = new Vector<String>();
      vector0.add("");
      rssItunesFeed0.setItems(vector0);
      // Undeclared exception!
      try { 
        rssItunesFeed0.toString();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        RssItunesFeed.getStoreStringInfo(true, false, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.utils.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        RssItunesFeed.getStoreStringInfo(true, true, "", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItunesFeed", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed((String) null, "", "", "");
      // Undeclared exception!
      try { 
        rssItunesFeed0.getStoreString(true, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssFeed", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        RssItunesFeed.getShortItems((RssReaderMIDlet) null, stringArray0[2]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.utils.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "");
      // Undeclared exception!
      try { 
        rssItunesFeed0.equals((RssItunesFeed) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssFeed", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      rssItunesFeed0.m_items = null;
      RssItunesFeed rssItunesFeed1 = new RssItunesFeed("", "", "", "");
      // Undeclared exception!
      try { 
        rssItunesFeed0.copyTo(rssItunesFeed1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssFeed", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = null;
      try {
        rssItunesFeed0 = new RssItunesFeed((RssFeed) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssFeed", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RssFeed rssFeed0 = new RssFeed(true, true, "");
      Vector<Integer> vector0 = new Vector<Integer>();
      rssFeed0.m_items = vector0;
      vector0.add((Integer) 0);
      RssItunesFeed rssItunesFeed0 = null;
      try {
        rssItunesFeed0 = new RssItunesFeed(rssFeed0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      rssItunesFeed0.modifyItunes(true, "", "", "", "", "", "", (byte)1);
      rssItunesFeed0.getExplicit();
      assertTrue(rssItunesFeed0.isItunes());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
      
      rssItunesFeed0.setExplicit(0);
      rssItunesFeed0.getExplicit();
      assertEquals("no", rssItunesFeed0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
      
      rssItunesFeed0.setExplicit(0);
      rssItunesFeed0.toString();
      assertEquals("no", rssItunesFeed0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      RssItunesFeed rssItunesFeed1 = new RssItunesFeed();
      rssItunesFeed1.modifyItunes(true, "", "", "", "", "", "", (byte)0);
      rssItunesFeed1.equals(rssItunesFeed0);
      assertTrue(rssItunesFeed1.isItunes());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      RssItunesFeed rssItunesFeed1 = new RssItunesFeed("", "", "K", "");
      boolean boolean0 = rssItunesFeed0.equals(rssItunesFeed1);
      assertFalse(rssItunesFeed0.isItunes());
      assertEquals("unspecified", rssItunesFeed1.getExplicit());
      assertFalse(rssItunesFeed1.isItunes());
      assertFalse(boolean0);
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      boolean boolean0 = rssItunesFeed0.equals(rssItunesFeed0);
      assertTrue(boolean0);
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
      assertFalse(rssItunesFeed0.isItunes());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      rssItunesFeed0.setDescription("unequal feed.m_summary,this=");
      RssFeed.STR_TWO = "";
      RssItunesItem.IUNREAD_ITEM = (-1);
      rssItunesFeed0.setSummary("unequal feed.m_summary,this=");
      rssItunesFeed0.isItunes();
      RssItunesFeed.getShortItems((RssReaderMIDlet) null, "EgV'ETUfnG");
      rssItunesFeed0.getSummary();
      rssItunesFeed0.getSubtitle();
      rssItunesFeed0.getExplicit();
      rssItunesFeed0.setTitle("Error m_name != new m_name=");
      rssItunesFeed0.getAuthor();
      rssItunesFeed0.getTitle();
      rssItunesFeed0.setDescription("ro,&T&-`0g`yi!");
      rssItunesFeed0.getExplicit();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "EgV'ETUfnG";
      stringArray0[1] = "unspecified";
      stringArray0[2] = "ro,&T&-`0g`yi!";
      stringArray0[3] = "";
      stringArray0[4] = "Error m_name != new m_name=";
      stringArray0[5] = "FormHandler";
      try { 
        rssItunesFeed0.init(false, false, stringArray0);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error during initialize of RssItunesFeed
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItunesFeed", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RssStoreInfo rssStoreInfo0 = RssItunesFeed.getStoreStringInfo(false, false, "||||||||", false);
      //  // Unstable assertion: assertEquals(0L, rssStoreInfo0.getSplitTime());
      //  // Unstable assertion: assertEquals("||||||||", rssStoreInfo0.getStoreString());
      //  // Unstable assertion: assertEquals("", rssStoreInfo0.getName());
      //  // Unstable assertion: assertEquals(0L, rssStoreInfo0.getEncodeTime());
      //  // Unstable assertion: assertEquals(0L, rssStoreInfo0.getJoinTime());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      String string0 = rssItunesFeed0.getStoreString(false, false, true);
      assertFalse(rssItunesFeed0.isItunes());
      assertEquals("||||||||||||||||", string0);
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "?";
      try { 
        rssItunesFeed0.init(true, true, stringArray0);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error during initialize of RssItunesFeed
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssItunesFeed", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      try { 
        rssItunesFeed0.init(false, false, stringArray0);
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error during initialize of RssFeed
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssFeed", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      try { 
        RssItunesFeed.deserialize(false, "nVg3Cyg]IU");
        fail("Expecting exception: CauseException");
      
      } catch(CauseException e) {
         //
         // Internal error during initialize of RssFeed
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssFeed", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "");
      assertFalse(rssItunesFeed0.isItunes());
      
      rssItunesFeed0.m_itunes = true;
      RssItunesFeed rssItunesFeed1 = new RssItunesFeed(rssItunesFeed0);
      assertEquals("", rssItunesFeed1.getSubtitle());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      RssItunesFeed rssItunesFeed1 = new RssItunesFeed(rssItunesFeed0);
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
      assertFalse(rssItunesFeed1.isItunes());
      assertEquals("unspecified", rssItunesFeed1.getExplicit());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RssFeed rssFeed0 = new RssFeed("", "", "", "");
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed(rssFeed0);
      assertFalse(rssItunesFeed0.isItunes());
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      String string0 = rssItunesFeed0.getTitle();
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
      assertFalse(rssItunesFeed0.isItunes());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "");
      rssItunesFeed0.setLanguage((String) null);
      assertFalse(rssItunesFeed0.isItunes());
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      String string0 = rssItunesFeed0.getLanguage();
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
      assertEquals("", string0);
      assertFalse(rssItunesFeed0.isItunes());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      rssItunesFeed0.setCategory(0);
      assertEquals(0, rssItunesFeed0.getCategory());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      String string0 = rssItunesFeed0.getSummary();
      assertEquals("", string0);
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
      assertFalse(rssItunesFeed0.isItunes());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      assertFalse(rssItunesFeed0.isItunes());
      
      rssItunesFeed0.modifyItunes(true, "", "", "", "", "", "", (byte)0);
      String string0 = rssItunesFeed0.getStoreString(true, false, true);
      assertEquals("1|||||||0|||||||||", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "");
      assertFalse(rssItunesFeed0.isItunes());
      
      rssItunesFeed0.setItunes(true);
      assertTrue(rssItunesFeed0.isItunes());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      rssItunesFeed0.copyTo(rssItunesFeed0);
      assertEquals("", rssItunesFeed0.getSummary());
      assertEquals("", rssItunesFeed0.getDescription());
      assertFalse(rssItunesFeed0.isItunes());
      assertEquals("", rssItunesFeed0.getLanguage());
      assertEquals("", rssItunesFeed0.getTitle());
      assertEquals("", rssItunesFeed0.getAuthor());
      assertEquals("", rssItunesFeed0.getSubtitle());
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      rssItunesFeed0.setSubtitle("");
      assertEquals("", rssItunesFeed0.getSubtitle());
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
      assertFalse(rssItunesFeed0.isItunes());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      int int0 = rssItunesFeed0.getCategory();
      assertEquals((-1), int0);
      assertFalse(rssItunesFeed0.isItunes());
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed("", "", "", "");
      String string0 = rssItunesFeed0.getDescription();
      assertEquals("unspecified", rssItunesFeed0.getExplicit());
      assertEquals("", string0);
      assertFalse(rssItunesFeed0.isItunes());
  }
}
