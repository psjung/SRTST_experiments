/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 16:11:28 KST 2018
 */

package com.substanceofcode.rssreader.businessentities;

import static org.junit.Assert.assertEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.time.Instant;
import java.util.Date;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class RssShortItem_ESTest4 extends RssShortItem_ESTest_scaffolding4 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Date date0 = new Date();
      RssItem rssItem0 = new RssItem((String) null, (String) null, "", date0, "", true);
      RssShortItem rssShortItem0 = new RssShortItem(rssItem0, 0);
      rssShortItem0.getTitle();
      assertTrue(rssShortItem0.isUnreadItem());
      assertEquals(0, rssShortItem0.getIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Date date0 = new Date();
      RssShortItem rssShortItem0 = new RssShortItem("L", date0, true, 0);
      rssShortItem0.getTitle();
      assertTrue(rssShortItem0.isUnreadItem());
      assertEquals(0, rssShortItem0.getIndex());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Date date0 = new Date(0L);
      RssShortItem rssShortItem0 = new RssShortItem((String) null, date0, true, 1);
      int int0 = rssShortItem0.getIndex();
      assertEquals(1, int0);
      assertTrue(rssShortItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssShortItem rssShortItem0 = new RssShortItem(rssItem0, 0);
      assertEquals(0, rssShortItem0.getIndex());
      
      rssShortItem0.setIndex((-1));
      int int0 = rssShortItem0.getIndex();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RssShortItem rssShortItem0 = new RssShortItem("", (Date) null, false, 0);
      rssShortItem0.getDate();
      assertEquals(0, rssShortItem0.getIndex());
      assertFalse(rssShortItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssShortItem rssShortItem0 = new RssShortItem(rssItem0, 0);
      rssShortItem0.setTitle((String) null);
      // Undeclared exception!
      try { 
        rssShortItem0.equals(rssShortItem0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RssShortItem rssShortItem0 = null;
      try {
        rssShortItem0 = new RssShortItem((RssItem) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.RssShortItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssShortItem rssShortItem0 = new RssShortItem(rssItem0, 0);
      RssShortItem rssShortItem1 = new RssShortItem(rssItem0, 0);
      rssShortItem1.setIndex(1);
      boolean boolean0 = rssShortItem1.equals(rssShortItem0);
      assertEquals(1, rssShortItem1.getIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Date date0 = new Date();
      RssShortItem rssShortItem0 = new RssShortItem("b|iRn xwT", date0, true, 0);
      rssShortItem0.setUnreadItem(false);
      RssItem rssItem0 = new RssItem("b|iRn xwT", "", "", date0, "", true);
      RssShortItem rssShortItem1 = new RssShortItem(rssItem0, 0);
      boolean boolean0 = rssShortItem0.equals(rssShortItem1);
      //  // Unstable assertion: assertEquals("Sun Aug 12 16:11:13 KST 2018", date0.toString());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Date date0 = new Date();
      RssShortItem rssShortItem0 = new RssShortItem("b|iRn xwT", date0, true, 0);
      Date date1 = new Date(0L);
      RssShortItem rssShortItem1 = new RssShortItem("b|iRn xwT", date1, true, 0);
      boolean boolean0 = rssShortItem0.equals(rssShortItem1);
      assertTrue(rssShortItem1.isUnreadItem());
      assertFalse(boolean0);
      assertEquals(0, rssShortItem1.getIndex());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Date date0 = new Date();
      RssShortItem rssShortItem0 = new RssShortItem((String) null, date0, false, 0);
      rssShortItem0.setTitle("");
      RssItem rssItem0 = new RssItem();
      RssShortItem rssShortItem1 = new RssShortItem(rssItem0, 0);
      boolean boolean0 = rssShortItem1.equals(rssShortItem0);
      assertFalse(rssShortItem1.isUnreadItem());
      assertFalse(boolean0);
      assertEquals(0, rssShortItem1.getIndex());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssShortItem rssShortItem0 = new RssShortItem(rssItem0, 0);
      boolean boolean0 = rssShortItem0.equals(rssShortItem0);
      assertFalse(rssShortItem0.isUnreadItem());
      assertEquals(0, rssShortItem0.getIndex());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Instant instant0 = Instant.ofEpochMilli(0L);
      Date date0 = Date.from(instant0);
      RssShortItem rssShortItem0 = new RssShortItem((String) null, date0, false, 0);
      rssShortItem0.setTitle("");
      RssItem rssItem0 = new RssItem();
      RssShortItem rssShortItem1 = new RssShortItem(rssItem0, 0);
      boolean boolean0 = rssShortItem0.equals(rssShortItem1);
      assertFalse(boolean0);
      assertFalse(rssShortItem1.isUnreadItem());
      assertEquals(0, rssShortItem1.getIndex());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Date date0 = new Date();
      RssShortItem rssShortItem0 = new RssShortItem("", date0, true, 0);
      RssShortItem rssShortItem1 = new RssShortItem("", date0, true, 0);
      rssShortItem1.setTitle("b");
      boolean boolean0 = rssShortItem0.equals(rssShortItem1);
      assertEquals(0, rssShortItem1.getIndex());
      assertTrue(rssShortItem1.isUnreadItem());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Date date0 = new Date();
      RssShortItem rssShortItem0 = new RssShortItem("", date0, true, 0);
      rssShortItem0.getDate();
      assertEquals(0, rssShortItem0.getIndex());
      assertTrue(rssShortItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Instant instant0 = Instant.ofEpochMilli(0L);
      Date date0 = Date.from(instant0);
      RssShortItem rssShortItem0 = new RssShortItem((String) null, date0, false, 0);
      rssShortItem0.setDate(date0);
      assertEquals(0, rssShortItem0.getIndex());
      assertFalse(rssShortItem0.isUnreadItem());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Date date0 = new Date();
      RssShortItem rssShortItem0 = new RssShortItem("", date0, true, 0);
      rssShortItem0.getTitle();
      assertTrue(rssShortItem0.isUnreadItem());
      assertEquals(0, rssShortItem0.getIndex());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Date date0 = new Date();
      RssShortItem rssShortItem0 = new RssShortItem("", date0, true, 0);
      boolean boolean0 = rssShortItem0.isUnreadItem();
      //  // Unstable assertion: assertEquals("Sun Aug 12 16:11:12 KST 2018", date0.toString());
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Date date0 = new Date();
      RssShortItem rssShortItem0 = new RssShortItem("", date0, true, 0);
      String string0 = rssShortItem0.toString();
      //  // Unstable assertion: assertTrue(rssShortItem0.isUnreadItem());
      //  // Unstable assertion: assertEquals("|Sun Aug 12 16:11:12 KST 2018|true|0", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RssItem rssItem0 = new RssItem();
      RssShortItem rssShortItem0 = new RssShortItem(rssItem0, 0);
      int int0 = rssShortItem0.getIndex();
      assertFalse(rssShortItem0.isUnreadItem());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Date date0 = new Date();
      RssShortItem rssShortItem0 = new RssShortItem("", date0, true, 0);
      assertTrue(rssShortItem0.isUnreadItem());
      
      rssShortItem0.setUnreadItem(false);
      boolean boolean0 = rssShortItem0.isUnreadItem();
      assertFalse(boolean0);
  }
}
