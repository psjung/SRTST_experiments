/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 07 23:06:49 KST 2017
 */

package org.prevayler.demos.scalability.prevayler;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.time.temporal.ChronoField;
import java.util.Date;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class AllRecordsReplacement_ESTest1 extends AllRecordsReplacement_ESTest_scaffolding1 {

  @Test
  public void test0()  throws Throwable  {
      AllRecordsReplacement allRecordsReplacement0 = new AllRecordsReplacement(3256);
      Date date0 = new Date();
      // Undeclared exception!
      try { 
        allRecordsReplacement0.executeOn((Object) null, date0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.prevayler.demos.scalability.prevayler.AllRecordsReplacement", e);
      }
  }

  @Test
  public void test1()  throws Throwable  {
      AllRecordsReplacement allRecordsReplacement0 = new AllRecordsReplacement((-82));
      ChronoField chronoField0 = ChronoField.MICRO_OF_SECOND;
      Date date0 = new Date();
      // Undeclared exception!
      try { 
        allRecordsReplacement0.executeOn(chronoField0, date0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.time.temporal.ChronoField cannot be cast to org.prevayler.demos.scalability.prevayler.ScalabilitySystem
         //
         assertThrownBy("org.prevayler.demos.scalability.prevayler.AllRecordsReplacement", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      AllRecordsReplacement allRecordsReplacement0 = new AllRecordsReplacement(0);
      QuerySystem querySystem0 = new QuerySystem();
      Date date0 = new Date(1159L);
      allRecordsReplacement0.executeOn(querySystem0, date0);
      assertEquals("Thu Jan 01 09:00:01 KST 1970", date0.toString());
  }
}
