/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 06 23:09:40 KST 2017
 */

package org.prevayler.implementation.replication;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.IOException;
import java.util.Date;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.prevayler.Clock;
import org.prevayler.foundation.network.OldNetwork;
import org.prevayler.foundation.network.OldNetworkImpl;
import org.prevayler.implementation.clock.BrokenClock;
import org.prevayler.implementation.journal.Journal;
import org.prevayler.implementation.journal.TransientJournal;
import org.prevayler.implementation.publishing.CentralPublisher;
import org.prevayler.implementation.publishing.TransactionPublisher;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class ServerListener_ESTest5 extends ServerListener_ESTest_scaffolding5 {

  @Test
  public void test0()  throws Throwable  {
      BrokenClock brokenClock0 = new BrokenClock();
      TransientJournal transientJournal0 = new TransientJournal();
      CentralPublisher centralPublisher0 = new CentralPublisher((Clock) brokenClock0, (Journal) transientJournal0);
      ServerListener serverListener0 = null;
      try {
        serverListener0 = new ServerListener((TransactionPublisher) centralPublisher0, (OldNetwork) null, 1211);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.prevayler.implementation.replication.ServerListener", e);
      }
  }

  @Test
  public void test1()  throws Throwable  {
      OldNetworkImpl oldNetworkImpl0 = new OldNetworkImpl();
      ServerListener serverListener0 = null;
      try {
        serverListener0 = new ServerListener((TransactionPublisher) null, (OldNetwork) oldNetworkImpl0, (-2422));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Port value out of range: -2422
         //
         assertThrownBy("org.evosuite.runtime.mock.java.net.MockServerSocket", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Date date0 = new Date(0L);
      BrokenClock brokenClock0 = new BrokenClock(date0);
      CentralPublisher centralPublisher0 = new CentralPublisher((Clock) brokenClock0, (Journal) null);
      OldNetworkImpl oldNetworkImpl0 = new OldNetworkImpl();
      ServerListener serverListener0 = new ServerListener((TransactionPublisher) centralPublisher0, (OldNetwork) oldNetworkImpl0, 0);
      serverListener0.run();
      assertTrue(serverListener0.isDaemon());
  }

  @Test
  public void test3()  throws Throwable  {
      BrokenClock brokenClock0 = new BrokenClock();
      CentralPublisher centralPublisher0 = new CentralPublisher((Clock) brokenClock0, (Journal) null);
      OldNetworkImpl oldNetworkImpl0 = new OldNetworkImpl();
      ServerListener serverListener0 = new ServerListener((TransactionPublisher) centralPublisher0, (OldNetwork) oldNetworkImpl0, 5);
      ServerListener serverListener1 = null;
      try {
        serverListener1 = new ServerListener((TransactionPublisher) centralPublisher0, (OldNetwork) oldNetworkImpl0, 5);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Failed to open TCP port
         //
         assertThrownBy("org.evosuite.runtime.mock.java.net.EvoSuiteSocket", e);
      }
  }
}
