/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 07 12:35:35 KST 2017
 */

package org.prevayler.implementation.replication;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.fail;

import java.util.Date;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.prevayler.Clock;
import org.prevayler.foundation.network.ObjectSocket;
import org.prevayler.implementation.Capsule;
import org.prevayler.implementation.TransactionTimestamp;
import org.prevayler.implementation.clock.BrokenClock;
import org.prevayler.implementation.clock.MachineClock;
import org.prevayler.implementation.journal.Journal;
import org.prevayler.implementation.journal.TransientJournal;
import org.prevayler.implementation.publishing.CentralPublisher;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class ServerConnection_ESTest4 extends ServerConnection_ESTest_scaffolding4 {

  @Test
  public void test0()  throws Throwable  {
      MachineClock machineClock0 = new MachineClock();
      CentralPublisher centralPublisher0 = new CentralPublisher((Clock) machineClock0, (Journal) null);
      ServerConnection serverConnection0 = new ServerConnection(centralPublisher0, (ObjectSocket) null);
      // Undeclared exception!
      try { 
        serverConnection0.publishRemoteTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.prevayler.implementation.replication.ServerConnection", e);
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Date date0 = new Date();
      BrokenClock brokenClock0 = new BrokenClock();
      TransientJournal transientJournal0 = new TransientJournal();
      CentralPublisher centralPublisher0 = new CentralPublisher((Clock) brokenClock0, (Journal) transientJournal0);
      ServerConnection serverConnection0 = new ServerConnection(centralPublisher0, (ObjectSocket) null);
      TransactionTimestamp transactionTimestamp0 = new TransactionTimestamp((Capsule) null, 18L, date0);
      // Undeclared exception!
      try { 
        serverConnection0.receive(transactionTimestamp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.prevayler.implementation.replication.ServerConnection", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      TransientJournal transientJournal0 = new TransientJournal();
      BrokenClock brokenClock0 = new BrokenClock();
      CentralPublisher centralPublisher0 = new CentralPublisher((Clock) brokenClock0, (Journal) transientJournal0);
      ServerConnection serverConnection0 = new ServerConnection(centralPublisher0, (ObjectSocket) null);
      // Undeclared exception!
      try { 
        serverConnection0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.prevayler.implementation.replication.ServerConnection", e);
      }
  }
}
