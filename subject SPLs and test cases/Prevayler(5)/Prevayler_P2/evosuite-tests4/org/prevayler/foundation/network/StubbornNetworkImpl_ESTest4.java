/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 07 11:09:00 KST 2017
 */

package org.prevayler.foundation.network;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.fail;

import java.io.IOException;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class StubbornNetworkImpl_ESTest4 extends StubbornNetworkImpl_ESTest_scaffolding4 {

  @Test
  public void test1()  throws Throwable  {
      StubbornNetworkImpl stubbornNetworkImpl0 = new StubbornNetworkImpl();
      StubbornServerReceiverImpl stubbornServerReceiverImpl0 = (StubbornServerReceiverImpl)stubbornNetworkImpl0.newReceiver((Service) null, (ObjectSocket) null);
      StubbornServerReceiverImpl stubbornServerReceiverImpl1 = (StubbornServerReceiverImpl)stubbornNetworkImpl0.newReceiver((Service) null, (ObjectSocket) null);
      assertFalse(stubbornServerReceiverImpl1.equals((Object)stubbornServerReceiverImpl0));
  }

  @Test
  public void test2()  throws Throwable  {
      StubbornNetworkImpl stubbornNetworkImpl0 = new StubbornNetworkImpl();
      // Undeclared exception!
      try { 
        stubbornNetworkImpl0.newInstance("Prevayler Network Client Receiver", (-2102));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-2102
         //
         assertThrownBy("java.net.InetSocketAddress", e);
      }
  }

  @Test
  public void test3()  throws Throwable  {
      StubbornNetworkImpl stubbornNetworkImpl0 = new StubbornNetworkImpl();
      StubbornServerReceiverImpl stubbornServerReceiverImpl0 = (StubbornServerReceiverImpl)stubbornNetworkImpl0.newReceiver((Service) null, (ObjectSocket) null);
      StubbornClientReceiverImpl stubbornClientReceiverImpl0 = (StubbornClientReceiverImpl)stubbornNetworkImpl0.newReceiver("wTW", 2104, (ObjectReceiver) stubbornServerReceiverImpl0);
      assertFalse(stubbornClientReceiverImpl0.isInterrupted());
  }
}
