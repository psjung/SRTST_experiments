/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 07 20:21:11 KST 2017
 */

package org.prevayler.foundation.monitor;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.io.PrintStream;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class SimpleMonitor_ESTest2 extends SimpleMonitor_ESTest_scaffolding2 {

  @Test
  public void test0()  throws Throwable  {
      SimpleMonitor simpleMonitor0 = new SimpleMonitor();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        simpleMonitor0.error(class0, "", (Exception) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.prevayler.foundation.monitor.SimpleMonitor", e);
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SimpleMonitor simpleMonitor0 = new SimpleMonitor((PrintStream) null);
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        simpleMonitor0.info(class0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.prevayler.foundation.monitor.SimpleMonitor", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SimpleMonitor simpleMonitor0 = new SimpleMonitor();
      Class<Object> class0 = Object.class;
      Exception exception0 = new Exception("^zbgNg9h.+b");
      simpleMonitor0.error(class0, "4&X8fR4-", exception0);
      assertEquals("^zbgNg9h.+b", exception0.getMessage());
  }

  @Test
  public void test3()  throws Throwable  {
      SimpleMonitor simpleMonitor0 = new SimpleMonitor();
      Class<Object> class0 = Object.class;
      simpleMonitor0.info(class0, "m| D8R2F");
  }
}
