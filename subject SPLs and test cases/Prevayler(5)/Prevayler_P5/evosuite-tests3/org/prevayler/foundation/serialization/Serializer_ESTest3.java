/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 07 17:37:08 KST 2017
 */

package org.prevayler.foundation.serialization;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.fail;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.StreamCorruptedException;
import java.io.UnsupportedEncodingException;
import java.util.EmptyStackException;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.thoughtworks.xstream.io.StreamException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Serializer_ESTest3 extends Serializer_ESTest_scaffolding3 {

  @Test
  public void test0()  throws Throwable  {
      XStreamSerializer xStreamSerializer0 = new XStreamSerializer("j.cQ");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        xStreamSerializer0.writeObject((OutputStream) null, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.Writer", e);
      }
  }

  @Test
  public void test1()  throws Throwable  {
      XStreamSerializer xStreamSerializer0 = new XStreamSerializer("java.util.LinkedHashSet");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1517);
      Object object0 = new Object();
      try { 
        xStreamSerializer0.writeObject(byteArrayOutputStream0, object0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // java.util.LinkedHashSet
         //
         assertThrownBy("sun.nio.cs.StreamEncoder", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      SkaringaSerializer skaringaSerializer0 = new SkaringaSerializer();
      // Undeclared exception!
      try { 
        skaringaSerializer0.readObject((InputStream) null);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.Stack", e);
      }
  }

  @Test
  public void test3()  throws Throwable  {
      XStreamSerializer xStreamSerializer0 = new XStreamSerializer("O");
      // Undeclared exception!
      try { 
        xStreamSerializer0.readObject((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.Reader", e);
      }
  }

  @Test
  public void test4()  throws Throwable  {
      XStreamSerializer xStreamSerializer0 = new XStreamSerializer("");
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-311), (-470));
      try { 
        xStreamSerializer0.readObject(byteArrayInputStream0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // 
         //
         assertThrownBy("sun.nio.cs.StreamDecoder", e);
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JavaSerializer javaSerializer0 = new JavaSerializer(classLoader0);
      ByteArrayInputStream byteArrayInputStream0 = (ByteArrayInputStream)ClassLoader.getSystemResourceAsStream("");
      try { 
        javaSerializer0.readObject(byteArrayInputStream0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // invalid stream header: 6F72670A
         //
         assertThrownBy("java.io.ObjectInputStream", e);
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SkaringaSerializer skaringaSerializer0 = new SkaringaSerializer();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1226);
      try { 
        skaringaSerializer0.readObject(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unable to deserialize with Skaringa: java.io.IOException: Pipe not connected
         //
         assertThrownBy("org.prevayler.foundation.serialization.SkaringaSerializer", e);
      }
  }

  @Test
  public void test7()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JavaSerializer javaSerializer0 = new JavaSerializer(classLoader0);
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte)0, (int) (byte)0);
      try { 
        javaSerializer0.readObject(byteArrayInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test
  public void test8()  throws Throwable  {
      XStreamSerializer xStreamSerializer0 = new XStreamSerializer();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte)91, (int) (byte)91);
      // Undeclared exception!
      try { 
        xStreamSerializer0.readObject(byteArrayInputStream0);
        fail("Expecting exception: StreamException");
      
      } catch(StreamException e) {
         //
         //  : input contained no data
         //
         assertThrownBy("com.thoughtworks.xstream.io.xml.XppReader", e);
      }
  }
}
