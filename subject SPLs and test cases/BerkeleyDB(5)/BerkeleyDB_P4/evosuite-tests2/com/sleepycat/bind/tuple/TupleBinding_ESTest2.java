/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 23:02:58 KST 2017
 */

package com.sleepycat.bind.tuple;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sleepycat.bind.tuple.BooleanBinding;
import com.sleepycat.bind.tuple.ByteBinding;
import com.sleepycat.bind.tuple.CharacterBinding;
import com.sleepycat.bind.tuple.DoubleBinding;
import com.sleepycat.bind.tuple.FloatBinding;
import com.sleepycat.bind.tuple.IntegerBinding;
import com.sleepycat.bind.tuple.LongBinding;
import com.sleepycat.bind.tuple.StringBinding;
import com.sleepycat.bind.tuple.TupleBase;
import com.sleepycat.bind.tuple.TupleBinding;
import com.sleepycat.bind.tuple.TupleInput;
import com.sleepycat.bind.tuple.TupleOutput;
import com.sleepycat.je.DatabaseEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class TupleBinding_ESTest2 extends TupleBinding_ESTest_scaffolding2 {

  @Test
  public void test00()  throws Throwable  {
      Class<CharacterBinding> class0 = CharacterBinding.class;
      TupleBinding tupleBinding0 = TupleBinding.getPrimitiveBinding(class0);
      assertNull(tupleBinding0);
  }

  @Test
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      IntegerBinding integerBinding0 = new IntegerBinding();
      BooleanBinding booleanBinding0 = new BooleanBinding();
      TupleOutput tupleOutput0 = booleanBinding0.getTupleOutput(databaseEntry0);
      Integer integer0 = new Integer((int) (byte) (-9));
      integerBinding0.objectToEntry((Object) integer0, tupleOutput0);
      assertEquals(4, tupleOutput0.getBufferLength());
  }

  @Test
  public void test02()  throws Throwable  {
      BooleanBinding booleanBinding0 = new BooleanBinding();
      byte[] byteArray0 = new byte[9];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      Boolean boolean0 = (Boolean)booleanBinding0.entryToObject(tupleInput0);
      assertFalse(boolean0);
  }

  @Test
  public void test03()  throws Throwable  {
      LongBinding longBinding0 = new LongBinding();
      Integer integer0 = new Integer(56);
      // Undeclared exception!
      try { 
        longBinding0.objectToEntry((Object) integer0, (DatabaseEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleBase", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      IntegerBinding integerBinding0 = new IntegerBinding();
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      // Undeclared exception!
      try { 
        integerBinding0.objectToEntry((Object) integerBinding0, databaseEntry0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.bind.tuple.IntegerBinding cannot be cast to java.lang.Number
         //
         assertThrownBy("com.sleepycat.bind.tuple.IntegerBinding", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      DoubleBinding doubleBinding0 = new DoubleBinding();
      IntegerBinding integerBinding0 = new IntegerBinding();
      FloatBinding floatBinding0 = new FloatBinding();
      TupleOutput tupleOutput0 = floatBinding0.getTupleOutput(integerBinding0);
      // Undeclared exception!
      try { 
        doubleBinding0.objectToEntry((Object) integerBinding0, tupleOutput0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.bind.tuple.IntegerBinding cannot be cast to java.lang.Number
         //
         assertThrownBy("com.sleepycat.bind.tuple.DoubleBinding", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      StringBinding stringBinding0 = new StringBinding();
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      // Undeclared exception!
      try { 
        stringBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      CharacterBinding characterBinding0 = new CharacterBinding();
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      // Undeclared exception!
      try { 
        characterBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      StringBinding stringBinding0 = new StringBinding();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-14);
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)0, (int) (byte)121);
      // Undeclared exception!
      try { 
        stringBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      StringBinding stringBinding0 = new StringBinding();
      byte[] byteArray0 = new byte[4];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, 1992, (int) (byte)121);
      // Undeclared exception!
      try { 
        stringBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1992
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      ByteBinding byteBinding0 = new ByteBinding();
      byte[] byteArray0 = new byte[2];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      TupleInput tupleInput0 = TupleBase.entryToInput(databaseEntry0);
      tupleInput0.readChar();
      // Undeclared exception!
      try { 
        byteBinding0.entryToObject(tupleInput0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      BooleanBinding booleanBinding0 = new BooleanBinding();
      byte[] byteArray0 = new byte[5];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)80, (int) (byte)80);
      tupleInput0.skip((-1496L));
      // Undeclared exception!
      try { 
        booleanBinding0.entryToObject(tupleInput0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1416
         //
         assertThrownBy("com.sleepycat.util.FastInputStream", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Class<Byte> class0 = Byte.class;
      ByteBinding byteBinding0 = (ByteBinding)TupleBinding.getPrimitiveBinding(class0);
      assertEquals(0, byteBinding0.getTupleBufferSize());
  }

  @Test
  public void test13()  throws Throwable  {
      IntegerBinding integerBinding0 = new IntegerBinding();
      byte[] byteArray0 = new byte[2];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (-199), 16);
      integerBinding0.objectToEntry((Object) byteArray0[1], databaseEntry0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
  }

  @Test
  public void test14()  throws Throwable  {
      StringBinding stringBinding0 = new StringBinding();
      byte[] byteArray0 = new byte[4];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)0, (int) (byte)121);
      String string0 = (String)stringBinding0.entryToObject(databaseEntry0);
      assertEquals("", string0);
  }
}
