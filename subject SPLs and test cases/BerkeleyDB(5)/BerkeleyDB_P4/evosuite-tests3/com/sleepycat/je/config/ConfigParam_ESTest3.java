/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 03:28:49 KST 2017
 */

package com.sleepycat.je.config;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class ConfigParam_ESTest3 extends ConfigParam_ESTest_scaffolding3 {

  @Test
  public void test00()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("w1#'(x", ">^Okwyp+ROIS", true, ">^Okwyp+ROIS");
      assertEquals("w1#'(x", configParam0.getName());
      
      configParam0.name = null;
      String string0 = configParam0.toString();
      assertEquals(">^Okwyp+ROIS", configParam0.getDefault());
      assertTrue(configParam0.isMutable());
      assertEquals(">^Okwyp+ROIS", configParam0.getDescription());
      assertNull(string0);
  }

  @Test
  public void test01()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("5_o", "5_o", true, "+(LAUSkp8");
      boolean boolean0 = configParam0.isMutable();
      assertTrue(boolean0);
      assertEquals("5_o", configParam0.getDefault());
      assertEquals("+(LAUSkp8", configParam0.getDescription());
      assertEquals("5_o", configParam0.getName());
  }

  @Test
  public void test02()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("je.cleaner.bytesInterval", "je.cleaner.bytesInterval", true, "=]5 lt");
      assertEquals("je.cleaner.bytesInterval", configParam0.getName());
      
      configParam0.name = null;
      configParam0.getName();
      assertEquals("je.cleaner.bytesInterval", configParam0.getDefault());
      assertTrue(configParam0.isMutable());
      assertEquals("=]5 lt", configParam0.getDescription());
  }

  @Test
  public void test03()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("je.env.runEvictor", "je.env.runEvictor", false, (String) null);
      String string0 = configParam0.getDescription();
      assertEquals("je.env.runEvictor", configParam0.getName());
      assertNull(string0);
      assertFalse(configParam0.isMutable());
      assertEquals("je.env.runEvictor", configParam0.getDefault());
  }

  @Test
  public void test04()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("gmfB'8.3i^_i>Vx&", "*", false, "gmfB'8.3i^_i>Vx&");
      String string0 = configParam0.getDefault();
      assertEquals("*", string0);
      assertEquals("gmfB'8.3i^_i>Vx&", configParam0.getName());
      assertEquals("gmfB'8.3i^_i>Vx&", configParam0.getDescription());
      assertFalse(configParam0.isMutable());
  }

  @Test
  public void test05()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("je.txn.timeout", "", true, "");
      configParam0.validate();
      assertEquals("", configParam0.getDefault());
      assertEquals("", configParam0.getDescription());
      assertEquals("je.txn.timeout", configParam0.getName());
      assertTrue(configParam0.isMutable());
  }

  @Test
  public void test06()  throws Throwable  {
      ConfigParam configParam0 = null;
      try {
        configParam0 = new ConfigParam((String) null, (String) null, false, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         //  A configuration parameter name can't be null or 0 length
         //
         assertThrownBy("com.sleepycat.je.config.ConfigParam", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("je.cleaner.bytesInterval", "je.cleaner.bytesInterval", true, "=]5 lt");
      String string0 = configParam0.getName();
      assertNotNull(string0);
      assertEquals("=]5 lt", configParam0.getDescription());
      assertTrue(configParam0.isMutable());
      assertEquals("je.cleaner.bytesInterval", configParam0.getDefault());
      assertEquals("je.cleaner.bytesInterval", string0);
  }

  @Test
  public void test08()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("LVwR%x?6LC}[=", "LVwR%x?6LC}[=", true, "je.env.recoveryForceCheckpoint");
      configParam0.validateValue("LVwR%x?6LC}[=");
      assertEquals("LVwR%x?6LC}[=", configParam0.getDefault());
      assertEquals("je.env.recoveryForceCheckpoint", configParam0.getDescription());
      assertEquals("LVwR%x?6LC}[=", configParam0.getName());
      assertTrue(configParam0.isMutable());
  }

  @Test
  public void test09()  throws Throwable  {
      ConfigParam configParam0 = null;
      try {
        configParam0 = new ConfigParam("", "Z[", true, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         //  A configuration parameter name can't be null or 0 length
         //
         assertThrownBy("com.sleepycat.je.config.ConfigParam", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("je.cleaner.bytesInterval", "je.cleaner.bytesInterval", true, "=]5 lt");
      configParam0.name = null;
      try { 
        configParam0.validate();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         //  A configuration parameter name can't be null or 0 length
         //
         assertThrownBy("com.sleepycat.je.config.ConfigParam", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("je.cleaner.bytesInterval", "je.cleaner.bytesInterval", true, "=]5 lt");
      String string0 = configParam0.getDescription();
      assertEquals("je.cleaner.bytesInterval", configParam0.getDefault());
      assertTrue(configParam0.isMutable());
      assertEquals("je.cleaner.bytesInterval", configParam0.getName());
      assertEquals("=]5 lt", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("_;$\"^\"c", (String) null, true, "S5lC");
      String string0 = configParam0.getDefault();
      assertTrue(configParam0.isMutable());
      assertNull(string0);
      assertEquals("_;$\"^\"c", configParam0.getName());
      assertEquals("S5lC", configParam0.getDescription());
  }

  @Test
  public void test13()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("je.env.runEvictor", "je.env.runEvictor", false, (String) null);
      boolean boolean0 = configParam0.isMutable();
      assertEquals("je.env.runEvictor", configParam0.getDefault());
      assertFalse(boolean0);
      assertEquals("je.env.runEvictor", configParam0.getName());
  }

  @Test
  public void test14()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("je.cleaner.bytesInterval", "je.cleaner.bytesInterval", true, "=]5 lt");
      configParam0.getExtraDescription();
      assertEquals("je.cleaner.bytesInterval", configParam0.getDefault());
      assertEquals("=]5 lt", configParam0.getDescription());
      assertTrue(configParam0.isMutable());
      assertEquals("je.cleaner.bytesInterval", configParam0.getName());
  }

  @Test
  public void test15()  throws Throwable  {
      ConfigParam configParam0 = new ConfigParam("w1#'(x", ">^Okwyp+ROIS", true, ">^Okwyp+ROIS");
      String string0 = configParam0.toString();
      assertEquals(">^Okwyp+ROIS", configParam0.getDefault());
      assertEquals(">^Okwyp+ROIS", configParam0.getDescription());
      assertEquals("w1#'(x", configParam0.getName());
      assertNotNull(string0);
      assertEquals("w1#'(x", string0);
      assertTrue(configParam0.isMutable());
  }
}
