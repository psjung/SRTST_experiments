/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 08:41:30 KST 2017
 */

package com.sleepycat.bind.serial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sleepycat.bind.serial.SerialBase;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class SerialBase_ESTest3 extends SerialBase_ESTest_scaffolding3 {

  @Test
  public void test0()  throws Throwable  {
      SerialBase serialBase0 = new SerialBase();
      assertEquals(0, serialBase0.getSerialBufferSize());
      
      serialBase0.setSerialBufferSize(1);
      int int0 = serialBase0.getSerialBufferSize();
      assertEquals(1, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      SerialBase serialBase0 = new SerialBase();
      serialBase0.setSerialBufferSize((-1));
      int int0 = serialBase0.getSerialBufferSize();
      assertEquals((-1), int0);
  }

  @Test
  public void test2()  throws Throwable  {
      SerialBase serialBase0 = new SerialBase();
      serialBase0.setSerialBufferSize(4585);
      serialBase0.getSerialOutput(serialBase0);
      assertEquals(4585, serialBase0.getSerialBufferSize());
  }

  @Test
  public void test3()  throws Throwable  {
      SerialBase serialBase0 = new SerialBase();
      int int0 = serialBase0.getSerialBufferSize();
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      SerialBase serialBase0 = new SerialBase();
      serialBase0.getSerialOutput(serialBase0);
      assertEquals(0, serialBase0.getSerialBufferSize());
  }

  @Test
  public void test5()  throws Throwable  {
      SerialBase serialBase0 = new SerialBase();
      serialBase0.setSerialBufferSize((-1));
      // Undeclared exception!
      try { 
        serialBase0.getSerialOutput(serialBase0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.FastOutputStream", e);
      }
  }
}
