/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 18:55:02 KST 2017
 */

package com.sleepycat.je;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class SequenceConfig_ESTest1 extends SequenceConfig_ESTest_scaffolding1 {

  @Test
  public void test00()  throws Throwable  {
      SequenceConfig sequenceConfig0 = new SequenceConfig();
      sequenceConfig0.setWrap(true);
      boolean boolean0 = sequenceConfig0.getWrap();
      assertTrue(boolean0);
  }

  @Test
  public void test01()  throws Throwable  {
      SequenceConfig sequenceConfig0 = new SequenceConfig();
      long long0 = sequenceConfig0.getRangeMin();
      assertEquals(9223372036854775807L, sequenceConfig0.getRangeMax());
      assertEquals(0L, sequenceConfig0.getInitialValue());
      assertEquals(0, sequenceConfig0.getCacheSize());
      assertEquals((-9223372036854775808L), long0);
  }

  @Test
  public void test02()  throws Throwable  {
      SequenceConfig sequenceConfig0 = new SequenceConfig();
      sequenceConfig0.setExclusiveCreate(true);
      boolean boolean0 = sequenceConfig0.getExclusiveCreate();
      assertTrue(boolean0);
  }

  @Test
  public void test03()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      sequenceConfig0.setRange(1L, 1920L);
      assertEquals(1920L, sequenceConfig0.getRangeMax());
      assertEquals(1L, sequenceConfig0.getRangeMin());
  }

  @Test
  public void test04()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      sequenceConfig0.setAllowCreate(true);
      assertTrue(sequenceConfig0.getAllowCreate());
  }

  @Test
  public void test05()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      sequenceConfig0.setCacheSize(0);
      assertEquals(0, sequenceConfig0.getCacheSize());
  }

  @Test
  public void test06()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      boolean boolean0 = sequenceConfig0.getAllowCreate();
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test07()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      long long0 = sequenceConfig0.getInitialValue();
      //  // Unstable assertion: assertEquals((-1L), long0);
  }

  @Test
  public void test08()  throws Throwable  {
      SequenceConfig sequenceConfig0 = new SequenceConfig();
      sequenceConfig0.getExclusiveCreate();
      assertEquals((-9223372036854775808L), sequenceConfig0.getRangeMin());
      assertEquals(0, sequenceConfig0.getCacheSize());
      assertEquals(0L, sequenceConfig0.getInitialValue());
      assertEquals(9223372036854775807L, sequenceConfig0.getRangeMax());
  }

  @Test
  public void test09()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      sequenceConfig0.setDecrement(false);
      assertFalse(sequenceConfig0.getDecrement());
  }

  @Test
  public void test10()  throws Throwable  {
      SequenceConfig sequenceConfig0 = new SequenceConfig();
      sequenceConfig0.getWrap();
      assertEquals(9223372036854775807L, sequenceConfig0.getRangeMax());
      assertEquals(0L, sequenceConfig0.getInitialValue());
      assertEquals(0, sequenceConfig0.getCacheSize());
      assertEquals((-9223372036854775808L), sequenceConfig0.getRangeMin());
  }

  @Test
  public void test11()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      long long0 = sequenceConfig0.getRangeMax();
      assertEquals(1920L, long0);
  }

  @Test
  public void test12()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      long long0 = sequenceConfig0.getRangeMin();
      assertEquals(1L, long0);
  }

  @Test
  public void test13()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      boolean boolean0 = sequenceConfig0.getDecrement();
      assertFalse(boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      sequenceConfig0.getAutoCommitNoSync();
      //  // Unstable assertion: assertEquals(9223372036854775807L, sequenceConfig0.getRangeMax());
      
      sequenceConfig0.setRange(1L, 1920L);
      sequenceConfig0.getAllowCreate();
      sequenceConfig0.setAutoCommitNoSync(false);
      sequenceConfig0.setAutoCommitNoSync(false);
      sequenceConfig0.setExclusiveCreate(false);
      long long0 = sequenceConfig0.getRangeMax();
      //  // Unstable assertion: assertEquals(1920L, long0);
  }

  @Test
  public void test15()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      int int0 = sequenceConfig0.getCacheSize();
      assertEquals(0, int0);
  }

  @Test
  public void test16()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      sequenceConfig0.setInitialValue(1L);
      assertEquals(1L, sequenceConfig0.getInitialValue());
  }
}
