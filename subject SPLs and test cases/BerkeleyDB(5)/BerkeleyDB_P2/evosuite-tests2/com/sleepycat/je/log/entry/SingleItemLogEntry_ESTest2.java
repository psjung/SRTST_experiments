/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 01:19:09 KST 2017
 */

package com.sleepycat.je.log.entry;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotSame;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import java.io.StringWriter;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.log.FileHeader;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.log.LogReadable;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.MapLN;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class SingleItemLogEntry_ESTest2 extends SingleItemLogEntry_ESTest_scaffolding2 {

  @Test
  public void test00()  throws Throwable  {
      Class<String> class0 = String.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      IN iN0 = new IN();
      bINDeltaLogEntry0.item = (LogReadable) iN0;
      IN iN1 = (IN)bINDeltaLogEntry0.getMainItem();
      assertEquals(0, iN1.getNEntries());
  }

  @Test
  public void test01()  throws Throwable  {
      Class<String> class0 = String.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      IN iN0 = new IN();
      bINDeltaLogEntry0.item = (LogReadable) iN0;
      boolean boolean0 = bINDeltaLogEntry0.isTransactional();
      assertFalse(boolean0);
  }

  @Test
  public void test02()  throws Throwable  {
      Class<String> class0 = String.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      IN iN0 = new IN();
      bINDeltaLogEntry0.item = (LogReadable) iN0;
      long long0 = bINDeltaLogEntry0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test03()  throws Throwable  {
      Class<DeletedDupLNLogEntry> class0 = DeletedDupLNLogEntry.class;
      SingleItemLogEntry singleItemLogEntry0 = new SingleItemLogEntry(class0);
      // Undeclared exception!
      try { 
        singleItemLogEntry0.dumpEntry((StringBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.entry.SingleItemLogEntry", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      Class<FileHeader> class0 = FileHeader.class;
      SingleItemLogEntry singleItemLogEntry0 = new SingleItemLogEntry(class0);
      StringWriter stringWriter0 = new StringWriter(0);
      MapLN mapLN0 = new MapLN();
      singleItemLogEntry0.item = (LogReadable) mapLN0;
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringBuffer stringBuffer1 = singleItemLogEntry0.dumpEntry(stringBuffer0, false);
      assertEquals(142, stringBuffer1.capacity());
  }

  @Test
  public void test05()  throws Throwable  {
      SingleItemLogEntry singleItemLogEntry0 = new SingleItemLogEntry((Class) null);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("xV:F[85Mb|wU)aa");
      // Undeclared exception!
      try { 
        singleItemLogEntry0.readEntry(byteBuffer0, (-1), (byte) (-76), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.entry.SingleItemLogEntry", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      Class<Object> class0 = Object.class;
      SingleItemLogEntry singleItemLogEntry0 = new SingleItemLogEntry(class0);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("xV:F[85Mb|wU)aa");
      // Undeclared exception!
      try { 
        singleItemLogEntry0.readEntry(byteBuffer0, (-27), (byte) (-76), true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to com.sleepycat.je.log.LogReadable
         //
         assertThrownBy("com.sleepycat.je.log.entry.SingleItemLogEntry", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      Class<FileHeader> class0 = FileHeader.class;
      SingleItemLogEntry singleItemLogEntry0 = new SingleItemLogEntry(class0);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode(" is not a mutable BDBJE environment configuration");
      try { 
        singleItemLogEntry0.readEntry(byteBuffer0, (-3917), (byte) (-30), true);
        fail("Expecting exception: LogException");
      
      } catch(LogException e) {
         //
         // Expected log version 3 or earlier but found 541411906 -- this version is not supported.
         //
         assertThrownBy("com.sleepycat.je.log.FileHeader", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      Class<SingleItemLogEntry> class0 = SingleItemLogEntry.class;
      SingleItemLogEntry singleItemLogEntry0 = new SingleItemLogEntry(class0);
      try { 
        singleItemLogEntry0.readEntry((ByteBuffer) null, 1334, (byte) (-98), false);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // java.lang.InstantiationException: com.sleepycat.je.log.entry.SingleItemLogEntry
         //
         assertThrownBy("com.sleepycat.je.log.entry.SingleItemLogEntry", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      Class<String> class0 = String.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      // Undeclared exception!
      try { 
        bINDeltaLogEntry0.getNewInstance();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.sleepycat.je.log.entry.LogEntry
         //
         assertThrownBy("com.sleepycat.je.log.entry.SingleItemLogEntry", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Class<SingleItemLogEntry> class0 = SingleItemLogEntry.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      try { 
        bINDeltaLogEntry0.getNewInstance();
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // java.lang.InstantiationException: com.sleepycat.je.log.entry.SingleItemLogEntry
         //
         assertThrownBy("com.sleepycat.je.log.entry.SingleItemLogEntry", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Class<INLogEntry> class0 = INLogEntry.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      // Undeclared exception!
      try { 
        bINDeltaLogEntry0.isTransactional();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.entry.SingleItemLogEntry", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Class<LNLogEntry> class0 = LNLogEntry.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      Object object0 = bINDeltaLogEntry0.getMainItem();
      assertNull(object0);
  }

  @Test
  public void test13()  throws Throwable  {
      Class<String> class0 = String.class;
      SingleItemLogEntry singleItemLogEntry0 = new SingleItemLogEntry(class0);
      // Undeclared exception!
      try { 
        singleItemLogEntry0.getTransactionId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.entry.SingleItemLogEntry", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry((Class) null);
      // Undeclared exception!
      try { 
        bINDeltaLogEntry0.getNewInstance();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.entry.SingleItemLogEntry", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Class<FileHeader> class0 = FileHeader.class;
      SingleItemLogEntry singleItemLogEntry0 = new SingleItemLogEntry(class0);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("uCm3DuJ%}&amz");
      // Undeclared exception!
      try { 
        singleItemLogEntry0.readEntry(byteBuffer0, 0, (byte)40, true);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test16()  throws Throwable  {
      Class<FileHeader> class0 = FileHeader.class;
      SingleItemLogEntry singleItemLogEntry0 = new SingleItemLogEntry(class0);
      SingleItemLogEntry singleItemLogEntry1 = (SingleItemLogEntry)singleItemLogEntry0.clone();
      assertNotSame(singleItemLogEntry0, singleItemLogEntry1);
  }
}
