/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 04:10:28 KST 2017
 */

package com.sleepycat.je;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sleepycat.je.CheckpointConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class CheckpointConfig_ESTest3 extends CheckpointConfig_ESTest_scaffolding3 {

  @Test
  public void test0()  throws Throwable  {
      CheckpointConfig checkpointConfig0 = new CheckpointConfig();
      checkpointConfig0.setMinutes(3362);
      int int0 = checkpointConfig0.getMinutes();
      assertEquals(3362, int0);
  }

  @Test
  public void test1()  throws Throwable  {
      CheckpointConfig checkpointConfig0 = new CheckpointConfig();
      assertFalse(checkpointConfig0.getMinimizeRecoveryTime());
      
      checkpointConfig0.setMinimizeRecoveryTime(true);
      boolean boolean0 = checkpointConfig0.getMinimizeRecoveryTime();
      assertTrue(boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      CheckpointConfig checkpointConfig0 = new CheckpointConfig();
      assertFalse(checkpointConfig0.getForce());
      
      checkpointConfig0.setForce(true);
      boolean boolean0 = checkpointConfig0.getForce();
      assertTrue(boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      CheckpointConfig checkpointConfig0 = new CheckpointConfig();
      int int0 = checkpointConfig0.getMinutes();
      assertEquals(0, int0);
      assertFalse(checkpointConfig0.getForce());
      assertFalse(checkpointConfig0.getMinimizeRecoveryTime());
  }

  @Test
  public void test4()  throws Throwable  {
      CheckpointConfig checkpointConfig0 = new CheckpointConfig();
      checkpointConfig0.setMinutes((-502));
      int int0 = checkpointConfig0.getMinutes();
      assertEquals((-502), int0);
  }

  @Test
  public void test5()  throws Throwable  {
      CheckpointConfig checkpointConfig0 = new CheckpointConfig();
      boolean boolean0 = checkpointConfig0.getMinimizeRecoveryTime();
      assertFalse(boolean0);
      assertFalse(checkpointConfig0.getForce());
      assertEquals(0, checkpointConfig0.getMinutes());
  }

  @Test
  public void test6()  throws Throwable  {
      CheckpointConfig checkpointConfig0 = CheckpointConfig.DEFAULT;
      boolean boolean0 = checkpointConfig0.getForce();
      assertFalse(boolean0);
  }
}
