/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 10:42:35 KST 2017
 */

package com.sleepycat.je.txn;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class LockInfo_ESTest3 extends LockInfo_ESTest_scaffolding3 {

  @Test
  public void test0()  throws Throwable  {
      Txn txn0 = new Txn();
      LockType lockType0 = LockType.READ;
      LockInfo lockInfo0 = new LockInfo((Locker) txn0, lockType0);
      Txn txn1 = (Txn)lockInfo0.getLocker();
      assertFalse(txn1.isHandleLockTransferrable());
  }

  @Test
  public void test1()  throws Throwable  {
      Txn txn0 = new Txn();
      LockType lockType0 = LockType.RANGE_WRITE;
      LockInfo lockInfo0 = new LockInfo((Locker) txn0, lockType0);
      LockType lockType1 = lockInfo0.getLockType();
      assertEquals("RANGE_WRITE", lockType1.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      Txn txn0 = new Txn();
      LockType lockType0 = LockType.READ;
      LockInfo lockInfo0 = new LockInfo((Locker) txn0, lockType0);
      LockType lockType1 = lockInfo0.getLockType();
      assertSame(lockType0, lockType1);
  }

  @Test
  public void test3()  throws Throwable  {
      Txn txn0 = new Txn();
      LockType lockType0 = LockType.READ;
      LockInfo lockInfo0 = new LockInfo((Locker) txn0, lockType0);
      String string0 = lockInfo0.toString();
      //  // Unstable assertion: assertEquals("<LockInfo locker=\"0__Txn\" type=\"READ\"/> lock taken at: com.sleepycat.je.txn.LockInfo$StackTraceAtLockTime\r\n\tat com.sleepycat.je.txn.LockInfo.&lt;init&gt;(LockInfo.java:53)\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:422)\r\n\tat org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:241)\r\n\tat org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)\r\n\tat org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:196)\r\n\tat org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:306)\r\n\tat org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:212)\r\n\tat org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n", string0);
  }

  @Test
  public void test4()  throws Throwable  {
      Txn txn0 = new Txn();
      LockInfo lockInfo0 = new LockInfo((Locker) txn0, (LockType) null);
      LockInfo lockInfo1 = (LockInfo)lockInfo0.clone();
      String string0 = lockInfo1.toString();
      assertEquals("<LockInfo locker=\"0__Txn\" type=\"null\"/>", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo((Locker) null, (LockType) null);
      Locker locker0 = lockInfo0.getLocker();
      assertNull(locker0);
  }

  @Test
  public void test6()  throws Throwable  {
      boolean boolean0 = LockInfo.getDeadlockStackTrace();
      assertTrue(boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo((Locker) null, (LockType) null);
      lockInfo0.setLockType((LockType) null);
      lockInfo0.setLocker((Locker) null);
      lockInfo0.clone();
      lockInfo0.clone();
      LockInfo.setDeadlockStackTrace(true);
      LockInfo.getDeadlockStackTrace();
      lockInfo0.clone();
      LockInfo lockInfo1 = new LockInfo((Locker) null, (LockType) null);
      lockInfo1.clone();
      lockInfo1.getLockType();
      lockInfo1.setLocker((Locker) null);
      String string0 = lockInfo1.toString();
      //  // Unstable assertion: assertEquals("<LockInfo locker=\"null\" type=\"null\"/> lock taken at: com.sleepycat.je.txn.LockInfo$StackTraceAtLockTime\r\n\tat com.sleepycat.je.txn.LockInfo.&lt;init&gt;(LockInfo.java:53)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:422)\r\n\tat org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:241)\r\n\tat org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)\r\n\tat org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:196)\r\n\tat org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:306)\r\n\tat org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:212)\r\n\tat org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n", string0);
      
      lockInfo0.getLocker();
      lockInfo1.setLocker((Locker) null);
      LockInfo.setDeadlockStackTrace(true);
      lockInfo1.setLockType((LockType) null);
      //  // Unstable assertion: assertTrue(lockInfo1.getDeadlockStackTrace());
  }

  @Test
  public void test8()  throws Throwable  {
      Txn txn0 = new Txn();
      LockType lockType0 = LockType.READ;
      LockInfo lockInfo0 = new LockInfo((Locker) txn0, lockType0);
      lockInfo0.dump();
      //  // Unstable assertion: assertFalse(lockInfo0.getDeadlockStackTrace());
  }
}
