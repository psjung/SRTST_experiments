/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 13:06:01 KST 2017
 */

package com.sleepycat.bind.serial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sleepycat.bind.serial.ClassCatalog;
import com.sleepycat.bind.serial.SerialInput;
import java.io.ByteArrayInputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.StreamCorruptedException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class SerialInput_ESTest4 extends SerialInput_ESTest_scaffolding4 {

  @Test
  public void test00()  throws Throwable  {
      InputStream inputStream0 = null;
      ClassCatalog classCatalog0 = null;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SerialInput serialInput0 = null;
      try {
        serialInput0 = new SerialInput((InputStream) null, (ClassCatalog) null, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test
  public void test01()  throws Throwable  {
      ClassCatalog classCatalog0 = null;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getResourceAsStream("");
      SerialInput serialInput0 = null;
      try {
        serialInput0 = new SerialInput((InputStream) null, (ClassCatalog) null, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test
  public void test02()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SerialInput serialInput0 = null;
      try {
        serialInput0 = new SerialInput((InputStream) null, (ClassCatalog) null, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SerialInput serialInput0 = null;
      try {
        serialInput0 = new SerialInput((InputStream) byteArrayInputStream0, (ClassCatalog) null, classLoader0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // invalid stream header: 00000000
         //
         assertThrownBy("java.io.ObjectInputStream", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SerialInput serialInput0 = null;
      try {
        serialInput0 = new SerialInput((InputStream) pushbackInputStream0, (ClassCatalog) null, classLoader0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         assertThrownBy("java.io.PushbackInputStream", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1061), 0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SerialInput serialInput0 = null;
      try {
        serialInput0 = new SerialInput((InputStream) byteArrayInputStream0, (ClassCatalog) null, classLoader0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      SerialInput serialInput0 = null;
      try {
        serialInput0 = new SerialInput((InputStream) null, (ClassCatalog) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SerialInput serialInput0 = null;
      try {
        serialInput0 = new SerialInput((InputStream) pipedInputStream0, (ClassCatalog) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         assertThrownBy("java.io.PipedInputStream", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte)0, (int) (byte)0);
      SerialInput serialInput0 = null;
      try {
        serialInput0 = new SerialInput((InputStream) byteArrayInputStream0, (ClassCatalog) null);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      ByteArrayInputStream byteArrayInputStream0 = (ByteArrayInputStream)ClassLoader.getSystemResourceAsStream("");
      SerialInput serialInput0 = null;
      try {
        serialInput0 = new SerialInput((InputStream) byteArrayInputStream0, (ClassCatalog) null);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // invalid stream header: 636F6D0A
         //
         assertThrownBy("java.io.ObjectInputStream", e);
      }
  }
}
