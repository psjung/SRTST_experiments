/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 11:09:35 KST 2017
 */

package com.sleepycat.je.log.entry;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.tree.FileSummaryLN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.txn.Txn;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class LogEntry_ESTest5 extends LogEntry_ESTest_scaffolding5 {

  @Test
  public void test0()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_IN;
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      byte[] byteArray0 = new byte[2];
      Txn txn0 = new Txn();
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, (LN) fileSummaryLN0, (DatabaseId) null, byteArray0, 0L, false, txn0);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode(".q{Ct>zvN^Mcbne");
      lNLogEntry0.readEntry(byteBuffer0, (byte)0, (byte)78, false);
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=16 cap=32]", byteBuffer0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      INLogEntry iNLogEntry0 = new INLogEntry(class0);
      long long0 = iNLogEntry0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test2()  throws Throwable  {
      Class<Object> class0 = Object.class;
      LNLogEntry lNLogEntry0 = new LNLogEntry((Class) class0, false);
      boolean boolean0 = lNLogEntry0.isTransactional();
      assertFalse(boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      Class<String> class0 = String.class;
      SingleItemLogEntry singleItemLogEntry0 = new SingleItemLogEntry(class0);
      Object object0 = singleItemLogEntry0.getMainItem();
      assertNull(object0);
  }

  @Test
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      INLogEntry iNLogEntry0 = new INLogEntry(class0);
      INLogEntry iNLogEntry1 = (INLogEntry)iNLogEntry0.clone();
      assertFalse(iNLogEntry1.countAsObsoleteWhenLogged());
  }

  @Test
  public void test5()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_DIN;
      INLogEntry iNLogEntry0 = (INLogEntry)logEntryType0.getSharedLogEntry();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("'o*i45m<24$~2`AOe");
      // Undeclared exception!
      try { 
        iNLogEntry0.readEntry(byteBuffer0, 18, (byte)0, false);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test6()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_IN;
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      byte[] byteArray0 = new byte[2];
      Txn txn0 = new Txn();
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, (LN) fileSummaryLN0, (DatabaseId) null, byteArray0, 0L, false, txn0);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode(".|q{Ct>zvN^6Mcbne");
      // Undeclared exception!
      try { 
        lNLogEntry0.readEntry(byteBuffer0, (byte) (-74), (byte)89, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Class<Object> class0 = Object.class;
      SingleItemLogEntry singleItemLogEntry0 = new SingleItemLogEntry(class0);
      // Undeclared exception!
      try { 
        singleItemLogEntry0.getTransactionId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.entry.SingleItemLogEntry", e);
      }
  }

  @Test
  public void test8()  throws Throwable  {
      DeletedDupLNLogEntry deletedDupLNLogEntry0 = new DeletedDupLNLogEntry(true);
      // Undeclared exception!
      try { 
        deletedDupLNLogEntry0.dumpEntry((StringBuffer) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.entry.LNLogEntry", e);
      }
  }
}
