/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 11:38:25 KST 2017
 */

package com.sleepycat.je.tree;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.File;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.LinkedList;
import java.util.Properties;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.DbConfigManager;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.dbi.MemoryBudget;
import com.sleepycat.je.latch.LatchException;
import com.sleepycat.je.latch.LatchNotHeldException;
import com.sleepycat.je.log.LogManager;

import de.ovgu.cide.jakutil.ReturnBoolean;
import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class IN_ESTest5 extends IN_ESTest_scaffolding5 {

  @Test
  public void test000()  throws Throwable  {
      IN.isStatePendingDeleted((byte) (-84));
  }

  @Test
  public void test001()  throws Throwable  {
      IN.isStateKnownDeleted((byte)0);
  }

  @Test
  public void test002()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.hook608(true);
      bIN0.isLatchOwner();
  }

  @Test
  public void test003()  throws Throwable  {
      IN iN0 = new IN();
      iN0.getLogSize();
  }

  @Test
  public void test004()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.entryZeroKeyComparesLow();
  }

  @Test
  public void test005()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.canBeAncestor(true);
  }

  @Test
  public void test007()  throws Throwable  {
      IN iN0 = new IN();
      IN.IN_validateSubtreeBeforeDelete iN_IN_validateSubtreeBeforeDelete0 = new IN.IN_validateSubtreeBeforeDelete(iN0, 0);
      // Undeclared exception!
      try { 
        iN_IN_validateSubtreeBeforeDelete0.hook628();
        fail("Expecting exception: ReturnBoolean");
      
      } catch(ReturnBoolean e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_validateSubtreeBeforeDelete", e);
      }
  }

  @Test
  public void test008()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.isSoughtNode(1000000L, true);
  }

  @Test
  public void test009()  throws Throwable  {
      IN iN0 = new IN();
      IN.IN_splitInternal iN_IN_splitInternal0 = new IN.IN_splitInternal(iN0, iN0, (-11), (-11), (-11));
      ByteBuffer byteBuffer0 = null;
      // Undeclared exception!
      try { 
        iN_IN_splitInternal0.hook617();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_traceSplit", e);
      }
  }

  @Test
  public void test010()  throws Throwable  {
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[0];
      String string0 = "";
      DatabaseId databaseId0 = new DatabaseId(dIN0.ACCUMULATED_LIMIT);
      File file0 = null;
      Properties properties0 = null;
      EnvironmentConfig environmentConfig0 = null;
      try {
        environmentConfig0 = new EnvironmentConfig(properties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test011()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)0;
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      IN iN0 = null;
      try {
        iN0 = new IN(databaseImpl0, byteArray0, (-11), (int) (byte) (-63));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test012()  throws Throwable  {
      BIN bIN0 = new BIN();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        bIN0.getLsn(1054);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4217
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test013()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        dBIN0.updateEntry((-1727), (long) (byte) (-36), (long) (byte) (-99), 0L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -6908
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test014()  throws Throwable  {
      BIN bIN0 = new BIN();
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        bIN0.split((IN) null, 16777215, 16777215);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.BIN", e);
      }
  }

  @Test
  public void test016()  throws Throwable  {
      IN iN0 = new IN();
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-11));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         assertThrownBy("java.io.StringWriter", e);
      }
  }

  @Test
  public void test019()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.shortClassName();
  }

  @Test
  public void test020()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.setLastFullLsn(127L);
  }

  @Test
  public void test021()  throws Throwable  {
      IN iN0 = new IN();
      IN.IN_splitInternal iN_IN_splitInternal0 = new IN.IN_splitInternal(iN0, iN0, (-11), (-11), (-11));
      LogManager logManager0 = null;
      try {  
      logManager0 = iN_IN_splitInternal0.logManager;
      } catch(NullPointerException e) {}
  }

  @Test
  public void test023()  throws Throwable  {
      IN iN0 = new IN();
      iN0.hook618((EnvironmentImpl) null);
  }

  @Test
  public void test024()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.hasNonLNChildren();
  }

  @Test
  public void test025()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.getMainTreeKey();
  }

  @Test
  public void test026()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.getLogSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test027()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.beginTag();
  }

  @Test
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      IN.IN_verify iN_IN_verify0 = new IN.IN_verify((IN) null, byteArray0);
      // Undeclared exception!
      try { 
        iN_IN_verify0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_verify", e);
      }
  }

  @Test
  public void test029()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode(" due to exception: ");
      CharBuffer charBuffer0 = mS949_0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = mS949_0.encode(charBuffer0);
      // Undeclared exception!
      try { 
        dBIN0.writeToLog(byteBuffer1);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test030()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.initEntryLsn(4);
  }

  @Test
  public void test031()  throws Throwable  {
      IN iN0 = new IN();
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        iN0.createNewInstance(byteArray0, (byte)20, (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test033()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test035()  throws Throwable  {
      IN iN0 = new IN();
      byte[] byteArray0 = new byte[4];
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        iN0.splitSpecial(dBIN0, (-11), 749, byteArray0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test036()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.splitInternal((IN) null, 0, 0, (byte) (-109));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.DBIN", e);
      }
  }

  @Test
  public void test037()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.setLsnElement((-2104), (-842L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -8416
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test038()  throws Throwable  {
      IN iN0 = new IN();
      iN0.latchNoWait();
      try { 
        iN0.latchNoWait();
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // IN0 already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test039()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.isEntryPendingDeleted(3439);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3439
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test040()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.isDirty((-549));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -549
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test041()  throws Throwable  {
      IN iN0 = new IN();
      ChildReference childReference0 = new ChildReference();
      try { 
        iN0.insertEntry1(childReference0);
        fail("Expecting exception: InconsistentNodeException");
      
      } catch(InconsistentNodeException e) {
         //
         // Node 0 should have been split before calling insertEntry
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_insertEntry1", e);
      }
  }

  @Test
  public void test043()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        dBIN0.init((DatabaseImpl) null, byteArray0, (-2182), 2048);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test044()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      try { 
        dBIN0.hook627();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test045()  throws Throwable  {
      IN iN0 = new IN();
      try { 
        iN0.hook626();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // IN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test046()  throws Throwable  {
      DIN dIN0 = new DIN();
      IN.IN_deleteEntry iN_IN_deleteEntry0 = new IN.IN_deleteEntry(dIN0, (-11), false);
      try { 
        dIN0.hook625(iN_IN_deleteEntry0._this);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test047()  throws Throwable  {
      IN iN0 = new IN();
      try { 
        iN0.hook624();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // IN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test048()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.hook619(false);
        fail("Expecting exception: ReturnBoolean");
      
      } catch(ReturnBoolean e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test049()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.getMigrate(700);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 700
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test050()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.getKeyComparator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.DIN", e);
      }
  }

  @Test
  public void test052()  throws Throwable  {
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        dIN0.findEntry(byteArray0, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.DIN", e);
      }
  }

  @Test
  public void test053()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.fetchTarget(1172);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1172
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test054()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.dumpString(1120, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1120
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test055()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.dumpLog((StringBuffer) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test056()  throws Throwable  {
      IN iN0 = new IN();
      SearchResult searchResult0 = new SearchResult();
      // Undeclared exception!
      try { 
        iN0.descendOnParentSearch(searchResult0, true, true, (-1), (Node) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test057()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      NameLN nameLN0 = new NameLN();
      // Undeclared exception!
      try { 
        dBIN0.compareTo(nameLN0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.tree.NameLN cannot be cast to com.sleepycat.je.tree.IN
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test059()  throws Throwable  {
      IN iN0 = new IN();
      iN0.latch(false);
  }

  @Test
  public void test060()  throws Throwable  {
      DIN dIN0 = new DIN();
      DatabaseId databaseId0 = new DatabaseId((-11));
      byte[] byteArray0 = new byte[2];
      BINReference bINReference0 = new BINReference((-11), databaseId0, byteArray0);
      dIN0.compress(bINReference0, true);
  }

  @Test
  public void test061()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.setDirty(true);
  }

  @Test
  public void test062()  throws Throwable  {
      IN iN0 = new IN();
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      iN0.setDatabase(databaseImpl0);
  }

  @Test
  public void test063()  throws Throwable  {
      IN iN0 = new IN();
      iN0.releaseLatchIfOwner();
  }

  @Test
  public void test064()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.isLatchOwner();
  }

  @Test
  public void test065()  throws Throwable  {
      IN iN0 = new IN();
      iN0.endTag();
  }

  @Test
  public void test066()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.setGeneration();
  }

  @Test
  public void test067()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.setLsn((byte) (-54), (byte)10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -216
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test068()  throws Throwable  {
      IN iN0 = new IN();
      iN0.getLevel();
  }

  @Test
  public void test069()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      try { 
        dBIN0.releaseLatch();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test070()  throws Throwable  {
      IN iN0 = new IN();
      iN0.getNEntries();
  }

  @Test
  public void test071()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.latch();
  }

  @Test
  public void test072()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.getDatabase();
  }

  @Test
  public void test073()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[9];
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, (long) (-11));
      // Undeclared exception!
      try { 
        dBIN0.insertEntry1(childReference0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.BIN", e);
      }
  }

  @Test
  public void test077()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.hook638((Node) null);
  }

  @Test
  public void test079()  throws Throwable  {
      DIN dIN0 = new DIN();
      MapLN mapLN0 = new MapLN((DatabaseImpl) null);
      dIN0.updateDupCountLN(mapLN0);
  }

  @Test
  public void test081()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.latchNoWait(true);
      IN.IN_isValidForDelete iN_IN_isValidForDelete0 = new IN.IN_isValidForDelete(dIN0);
      // Undeclared exception!
      try { 
        iN_IN_isValidForDelete0.hook634();
        fail("Expecting exception: ReturnBoolean");
      
      } catch(ReturnBoolean e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_isValidForDelete", e);
      }
  }

  @Test
  public void test082()  throws Throwable  {
      BIN bIN0 = new BIN();
      byte[] byteArray0 = new byte[5];
      IN.IN_verify iN_IN_verify0 = new IN.IN_verify(bIN0, byteArray0);
      iN_IN_verify0.hook632();
      iN_IN_verify0.execute();
  }

  @Test
  public void test083()  throws Throwable  {
      IN iN0 = new IN();
      IN.IN_splitInternal iN_IN_splitInternal0 = new IN.IN_splitInternal(iN0, iN0, (-11), (-11), (-11));
      iN_IN_splitInternal0.high = 6;
      // Undeclared exception!
      try { 
        iN_IN_splitInternal0.hook630();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_splitInternal", e);
      }
  }

  @Test
  public void test084()  throws Throwable  {
      IN iN0 = new IN();
      iN0.latchNoWait(false);
      iN0.validateSubtreeBeforeDelete(2147418113);
  }

  @Test
  public void test085()  throws Throwable  {
      DIN dIN0 = new DIN();
      IN.IN_validateSubtreeBeforeDelete iN_IN_validateSubtreeBeforeDelete0 = new IN.IN_validateSubtreeBeforeDelete(dIN0, (-11));
      // Undeclared exception!
      try { 
        iN_IN_validateSubtreeBeforeDelete0.execute();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -11
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test086()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.dumpString(56, false);
  }

  @Test
  public void test087()  throws Throwable  {
      IN iN0 = new IN();
      iN0.dumpKeys();
  }

  @Test
  public void test089()  throws Throwable  {
      DIN dIN0 = new DIN();
      IN.IN_deleteEntry iN_IN_deleteEntry0 = new IN.IN_deleteEntry(dIN0, (-11), false);
      byte[] byteArray0 = new byte[4];
      iN_IN_deleteEntry0._this.deleteEntry(byteArray0, false);
  }

  @Test
  public void test090()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.isKeyInBounds((byte[]) null);
  }

  @Test
  public void test091()  throws Throwable  {
      IN.makeFetchErrorMsg(" node: ", (IN) null, 127L, (byte) (-121));
  }

  @Test
  public void test092()  throws Throwable  {
      DIN dIN0 = new DIN();
      try { 
        dIN0.getDupCountLN();
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // fetchTarget of null lsn IN=0 state=0 NULL_LSN without KnownDeleted
         //
         assertThrownBy("com.sleepycat.je.tree.ChildReference", e);
      }
  }

  @Test
  public void test093()  throws Throwable  {
      DIN dIN0 = new DIN();
      IN.makeFetchErrorMsg("e>~uB9}bYmi#6A^Sv#", dIN0, (-11), (byte)0);
  }

  @Test
  public void test094()  throws Throwable  {
      IN.isStatePendingDeleted((byte) (-3));
  }

  @Test
  public void test095()  throws Throwable  {
      IN.isStateKnownDeleted((byte)77);
  }

  @Test
  public void test096()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try { 
        bIN0.setMigrate(982, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 982
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test097()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try { 
        bIN0.setMigrate((-11), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -11
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test098()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.isSoughtNode((-11), false);
  }

  @Test
  public void test100()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test103()  throws Throwable  {
      IN iN0 = new IN();
      byte[] byteArray0 = new byte[9];
      ChildReference childReference0 = new ChildReference((Node) iN0, byteArray0, (long) (byte)0, (byte)46);
      IN.IN_insertEntry1 iN_IN_insertEntry1_0 = new IN.IN_insertEntry1(iN0, childReference0);
      iN_IN_insertEntry1_0.hook646();
  }

  @Test
  public void test105()  throws Throwable  {
      DIN dIN0 = new DIN();
      IN.IN_updateEntry2 iN_IN_updateEntry2_0 = new IN.IN_updateEntry2(dIN0, (-11), dIN0, (-11));
      // Undeclared exception!
      try { 
        iN_IN_updateEntry2_0.execute();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -11
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test108()  throws Throwable  {
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[8];
      IN.IN_updateEntryCompareKey iN_IN_updateEntryCompareKey0 = new IN.IN_updateEntryCompareKey(dIN0, 2146529210, dIN0, 1543L, byteArray0);
      // Undeclared exception!
      try { 
        iN_IN_updateEntryCompareKey0.execute();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2146529210
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      IN.IN_setEntry iN_IN_setEntry0 = new IN.IN_setEntry((IN) null, (-2012), (Node) null, byteArray0, (-2519L), (byte)0);
      iN_IN_setEntry0.hook641();
  }

  @Test
  public void test111()  throws Throwable  {
      IN.IN_splitInternal iN_IN_splitInternal0 = new IN.IN_splitInternal((IN) null, (IN) null, (-879), (-879), (-879));
      // Undeclared exception!
      try { 
        iN_IN_splitInternal0.hook631();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_splitInternal", e);
      }
  }

  @Test
  public void test114()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try { 
        bIN0.readFromLog((ByteBuffer) null, (byte) (-120));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test115()  throws Throwable  {
      IN iN0 = new IN();
      IN.IN_splitInternal iN_IN_splitInternal0 = new IN.IN_splitInternal(iN0, iN0, (-11), (-11), (-11));
      iN_IN_splitInternal0.newSibling = iN0;
      try { 
        iN_IN_splitInternal0.hook630();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // IN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test119()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.validateSubtreeBeforeDelete((-3801));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3801
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test123()  throws Throwable  {
      IN iN0 = new IN();
      try { 
        iN0.getDupKey();
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // IN.getDupKey() called
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test125()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      try { 
        dBIN0.hook621();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test126()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.updateEntry(2792, (long) (-1454), (byte)16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11168
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test127()  throws Throwable  {
      IN iN0 = new IN();
      iN0.getLogType();
      assertFalse(iN0.getDirty());
      assertEquals((-1L), iN0.getLastFullVersion());
      assertEquals("IN", iN0.shortClassName());
      assertEquals(0L, iN0.getGeneration());
      assertEquals(0, iN0.getLevel());
      assertTrue(iN0.needsSplitting());
      assertFalse(iN0.isDbRoot());
  }

  @Test
  public void test128()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.updateEntry((-2118850531), (Node) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2118850531
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test129()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.getState(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test130()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.setPendingDeleted(16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test131()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.hook625((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test132()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.postFetchInit((DatabaseImpl) null, (-11));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test134()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      MapLN mapLN0 = new MapLN();
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        dBIN0.updateEntry((-497), (Node) mapLN0, (-247L), byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -497
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test135()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.setGeneration((long) (byte)1);
      assertEquals(1L, dBIN0.getGeneration());
  }

  @Test
  public void test136()  throws Throwable  {
      DIN dIN0 = new DIN();
      assertFalse(dIN0.getDirty());
      
      byte[] byteArray0 = new byte[17];
      dIN0.setIdentifierKey(byteArray0);
      assertTrue(dIN0.getDirty());
  }

  @Test
  public void test137()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.setTarget(32, dBIN0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test138()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.hook608(true);
      dBIN0.hook627();
      //  // Unstable assertion: assertEquals(260L, dBIN0.getGeneration());
  }

  @Test
  public void test140()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.updateEntry(0, (long) 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test141()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        dIN0.clearKnownDeleted(1397);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1397
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test146()  throws Throwable  {
      DIN dIN0 = new DIN();
      try { 
        dIN0.hook622();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test147()  throws Throwable  {
      DIN dIN0 = new DIN();
      boolean boolean0 = dIN0.isValidForDelete();
      //  // Unstable assertion: assertEquals(172L, dIN0.getGeneration());
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test
  public void test150()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try { 
        bIN0.getDatabaseId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test154()  throws Throwable  {
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[2];
      ChildReference childReference0 = new ChildReference((Node) dIN0, byteArray0, 7821268686312487534L, (byte)15);
      try { 
        dIN0.insertEntry(childReference0);
        fail("Expecting exception: InconsistentNodeException");
      
      } catch(InconsistentNodeException e) {
         //
         // Node 0 should have been split before calling insertEntry
         //
         assertThrownBy("com.sleepycat.je.tree.IN$IN_insertEntry1", e);
      }
  }

  @Test
  public void test155()  throws Throwable  {
      IN iN0 = new IN();
      int int0 = iN0.compareTo(iN0);
      assertFalse(iN0.getDirty());
      assertEquals(0L, iN0.getGeneration());
      assertEquals((-1L), iN0.getLastFullVersion());
      assertEquals(0, iN0.getLevel());
      assertTrue(iN0.needsSplitting());
      assertEquals(0, int0);
      assertFalse(iN0.isDbRoot());
  }

  @Test
  public void test156()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        dBIN0.initEntryLsn((-1454));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test157()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try { 
        bIN0.log((LogManager) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.BIN", e);
      }
  }

  @Test
  public void test158()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.getTarget((-1784));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1784
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test159()  throws Throwable  {
      IN iN0 = new IN();
      iN0.getDupTreeKey();
      assertEquals(0, iN0.getLevel());
      assertFalse(iN0.isRoot());
      assertEquals(0L, iN0.getGeneration());
      assertEquals((-1L), iN0.getLastFullVersion());
      assertTrue(iN0.needsSplitting());
  }

  @Test
  public void test160()  throws Throwable  {
      DIN dIN0 = new DIN();
      try { 
        dIN0.hook620();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test161()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.accumulateStats((TreeWalkerStatsAccumulator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test162()  throws Throwable  {
      IN iN0 = new IN();
      iN0.latchNoWait();
      iN0.hook624();
      //  // Unstable assertion: assertEquals(85L, iN0.getGeneration());
  }

  @Test
  public void test163()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.canBeAncestor(true);
      assertFalse(dIN0.getDirty());
      assertTrue(dIN0.needsSplitting());
      assertEquals(0L, dIN0.getGeneration());
      assertEquals((-1L), dIN0.getLastFullVersion());
      assertEquals(0, dIN0.getLevel());
  }

  @Test
  public void test166()  throws Throwable  {
      BIN bIN0 = new BIN();
      byte[] byteArray0 = new byte[8];
      ChildReference childReference0 = new ChildReference((Node) bIN0, byteArray0, 3956L, (byte)0);
      // Undeclared exception!
      try { 
        bIN0.insertEntry(childReference0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.BIN", e);
      }
  }

  @Test
  public void test167()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.deleteEntry((-5), false);
      assertTrue(dBIN0.needsSplitting());
      assertEquals(0L, dBIN0.getGeneration());
      assertEquals((-1L), dBIN0.getLastFullVersion());
      assertEquals(0, dBIN0.getLevel());
  }

  @Test
  public void test168()  throws Throwable  {
      IN iN0 = new IN();
      iN0.setIsRoot(true);
      assertTrue(iN0.getDirty());
      assertTrue(iN0.isRoot());
  }

  @Test
  public void test170()  throws Throwable  {
      IN iN0 = new IN();
      byte[] byteArray0 = new byte[9];
      iN0.selectKey(byteArray0, byteArray0);
      assertEquals(0, iN0.getLevel());
      assertEquals("IN", iN0.shortClassName());
      assertEquals((-1L), iN0.getLastFullVersion());
      assertTrue(iN0.needsSplitting());
  }

  @Test
  public void test171()  throws Throwable  {
      DIN dIN0 = new DIN();
      try { 
        dIN0.hook623();
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test172()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.setKnownDeleted((-3));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test174()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      IN.dumpDeletedState(stringBuffer0, (byte)0);
      assertEquals(56, stringBuffer0.length());
      assertEquals("<knownDeleted val=\"false\"/><pendingDeleted val=\"false\"/>", stringWriter0.toString());
  }

  @Test
  public void test175()  throws Throwable  {
      DIN dIN0 = new DIN();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      dIN0.dumpLog(stringBuffer0, true);
      assertEquals("<din><node>0</node><key v=\"\"/><isRoot val=\"false\"/><level val=\"0\"/><entries numEntries=\"0\" length=\"0\" baseFileNumber=\"-1\"></entries><key v=\"<null>\"/><ref knownDeleted=\"false\" pendingDeleted=\"false\"><key v=\"\"/><DbLsn val=\"0xffffffff/0xffffffff\"/></ref></din>", stringBuffer0.toString());
      assertEquals("<din><node>0</node><key v=\"\"/><isRoot val=\"false\"/><level val=\"0\"/><entries numEntries=\"0\" length=\"0\" baseFileNumber=\"-1\"></entries><key v=\"<null>\"/><ref knownDeleted=\"false\" pendingDeleted=\"false\"><key v=\"\"/><DbLsn val=\"0xffffffff/0xffffffff\"/></ref></din>", stringWriter0.toString());
  }

  @Test
  public void test176()  throws Throwable  {
      IN iN0 = new IN();
      // Undeclared exception!
      try { 
        iN0.clearPendingDeleted(1968526677);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1968526677
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test179()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.flushProvisionalObsolete((LogManager) null);
      assertEquals(0, dBIN0.getLevel());
      assertFalse(dBIN0.getDirty());
      assertEquals((-1L), dBIN0.getLastFullVersion());
      assertEquals(0L, dBIN0.getGeneration());
      assertTrue(dBIN0.needsSplitting());
  }
}
