/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 11:51:01 KST 2017
 */

package com.sleepycat.je.tree;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.cleaner.UtilizationTracker;
import com.sleepycat.je.dbi.CursorImpl;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.latch.LatchException;
import com.sleepycat.je.latch.LatchNotHeldException;
import com.sleepycat.je.txn.LockGrantType;
import com.sleepycat.je.txn.LockResult;
import com.sleepycat.je.txn.WriteLockInfo;
import com.sleepycat.je.utilint.TestHook;

import de.ovgu.cide.jakutil.ReturnObject;
import de.ovgu.cide.jakutil.ReturnVoid;
import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Tree_ESTest5 extends Tree_ESTest_scaffolding5 {

  @Test
  public void test000()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[3];
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, dIN0, byteArray0);
      try { 
        tree_Tree_forceSplit0.execute();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test001()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[0];
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, (IN) null, byteArray0);
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.hook727();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test002()  throws Throwable  {
      Tree tree0 = new Tree();
      BIN bIN0 = null;
      // Undeclared exception!
      try { 
        tree0.hook670((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test004()  throws Throwable  {
      Tree tree0 = new Tree();
      ArrayList<Tree> arrayList0 = new ArrayList<Tree>();
      tree0.hook697(arrayList0);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test005()  throws Throwable  {
      IN iN0 = null;
      byte[] byteArray0 = new byte[9];
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.deleteDup(byteArray0, byteArray0, (UtilizationTracker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test010()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook729();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test011()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook728();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test013()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook702();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test014()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      Level level0 = Level.FINE;
      LN lN0 = new LN();
      DupCountLN dupCountLN0 = new DupCountLN(0);
      DIN dIN0 = new DIN();
      Tree.Tree_traceMutate tree_Tree_traceMutate0 = new Tree.Tree_traceMutate(tree0, level0, dBIN0, lN0, lN0, (-1L), dupCountLN0, 0L, dIN0, 0, dBIN0, (byte)0);
      // Undeclared exception!
      try { 
        tree_Tree_traceMutate0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_traceMutate", e);
      }
  }

  @Test
  public void test015()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      dBIN0.latch();
      try { 
        tree0.hook739(dBIN0, dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test016()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook682((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test017()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test018()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[1];
      Tree tree0 = new Tree();
      dBIN0.latch();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add((String) null);
      // Undeclared exception!
      try { 
        tree0.searchDeletableSubTree(dBIN0, byteArray0, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test019()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.rebuildINList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test020()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook750((BIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test021()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook747((DBIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test022()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook747(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test023()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook744((DIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test024()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook742((DBIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test025()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook740((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test026()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook739((IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test027()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook738(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test028()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook737((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test029()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook737(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test030()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook736((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test031()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook735((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test032()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[2];
      DBIN dBIN0 = new DBIN();
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, dBIN0, byteArray0);
      tree_Tree_forceSplit0.origParent = (IN) dBIN0;
      try { 
        tree0.hook734(tree_Tree_forceSplit0.origParent);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test034()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook710((DIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test035()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook705((DIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test036()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook701(true, (IN) null);
        fail("Expecting exception: ReturnObject");
      
      } catch(ReturnObject e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test038()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        tree0.hook698((IN) null, byteArray0, 1178L, true, 1, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test039()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook697((ArrayList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test042()  throws Throwable  {
      Tree tree0 = new Tree();
      try { 
        tree0.hook693((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test043()  throws Throwable  {
      Tree tree0 = new Tree();
      try { 
        tree0.hook692((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test044()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook692(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test046()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook689((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test047()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      DIN dIN0 = new DIN();
      dIN0.latchNoWait();
      try { 
        tree0.hook689(dIN0);
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // DIN0 already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test049()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        tree0.hook686(false, false, byteArray0, (IN) null, (IN) null, (IN) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getParentNode passed null
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test050()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook681((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test053()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook679((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test054()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook679(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test056()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook676((ArrayList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test057()  throws Throwable  {
      Tree tree0 = new Tree();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      arrayList0.add(object0);
      // Undeclared exception!
      try { 
        tree0.hook676(arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to com.sleepycat.je.tree.Tree$SplitInfo
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test058()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        tree0.hook674(byteArray0, byteArray0, (IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test059()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook674((byte[]) null, (byte[]) null, dIN0, (IN) null);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      DIN dIN0 = new DIN();
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      dIN0.latchNoWait(true);
      Tree tree0 = databaseImpl0.getTree();
      ArrayList<DatabaseException> arrayList0 = new ArrayList<DatabaseException>();
      // Undeclared exception!
      try { 
        tree0.hook672(byteArray0, (UtilizationTracker) null, dIN0, arrayList0, dIN0, true);
        fail("Expecting exception: ReturnVoid");
      
      } catch(ReturnVoid e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test062()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      String string0 = tree0.dumpString(0);
      //  // Unstable assertion: assertEquals(280L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertEquals("<tree>\n</tree>", string0);
  }

  @Test
  public void test063()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[1];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.LEFT;
      BINBoundary bINBoundary0 = new BINBoundary();
      tree0.search(byteArray0, tree_SearchType0, (-530L), bINBoundary0, false);
      //  // Unstable assertion: assertEquals(268L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test064()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      SearchResult searchResult0 = tree0.getParentINForChildIN(2707L, true, true, byteArray0, byteArray0, true, true, 1010, (List) arrayList0, true);
      assertTrue(searchResult0.keepSearching);
  }

  @Test
  public void test065()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getParentINForChildIN((IN) null, false, true, (int) (byte)91, (List) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getParentNode passed null
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test067()  throws Throwable  {
      Tree tree0 = new Tree();
      long long0 = tree0.getRootLsn();
      assertEquals((-1L), long0);
  }

  @Test
  public void test068()  throws Throwable  {
      Tree tree0 = new Tree();
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        tree0.setDatabase(databaseImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test069()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.getRootIN(false);
      //  // Unstable assertion: assertEquals(254L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test070()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[20];
      IN iN0 = tree0.searchSplitsAllowed(byteArray0, (-871L), false);
      assertNull(iN0);
  }

  @Test
  public void test071()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[1];
      Tree tree0 = new Tree();
      dBIN0.latch();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("");
      // Undeclared exception!
      try { 
        tree0.searchDeletableSubTree(dBIN0, byteArray0, arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.sleepycat.je.tree.Tree$SplitInfo
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test072()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        tree0.hook754(dBIN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test074()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook733();
       //  fail("Expecting exception: AssertionError");
       // Unstable assertion
      } catch(AssertionError e) {
         //
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@62d70788[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@675321ab[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1aa05f81[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@271f3612[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6fe67594[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7dce5ebf[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6f47bac3[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2548e2f6[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@543f691d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@57605b66[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1eedd81[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6af165e3[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4fe3ae39[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7f22d049[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7762b7b1[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@61451786[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7f2edcde[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@27beb6ea[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@23e91883[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@676106cb[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2ee1c8[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6bbd99b5[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@29255c29[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@36d27cda[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@44a30ecb[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7fd3c2f3[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7f72e9d8[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1bf8cdf9[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@154896c5[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6b9c2f1a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@57e7820d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2966c8ce[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3e93bdd8[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6516d9fc[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@77a932f9[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1c4d16ec[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@47fb5cf[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@298831f8[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3f196f4e[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@74c6952d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@62e128c1[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@11458215[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@915d16b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6ade0844[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@74961ee6[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@51a8327c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4e1b4983[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3b21284d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3f56499d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5f0a049a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@101b4b6b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@bee6481[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@518b925d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2dc5e987[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@35135252[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6fab30d7[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5d36b432[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1f81eea9[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6374521c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@42fe17e4[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@57245d3e[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@cfaa5a7[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@67cfe8a9[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7b4fb4a4[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@76c22972[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1abdd1e5[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4592cd1[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@58c31d71[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@771d65c2[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1d1960cb[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1fd3ac3f[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6ee67052[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6cf770d4[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1f7e667[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3d972106[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3f041b30[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@35880263[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@167a8e77[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@632064b5[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@299d3f25[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@559a2b75[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@19f814a1[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1bdcdc4e[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@76966809[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@77a4d227[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@268bf45d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5079e8f4[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@497bd064[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@69e9c86b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@27a98a0f[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@43b35498[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1bf9a24d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3acbc01c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@38057da8[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@509a811b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6502fcb9[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@71722ba1[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@60806760[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7bec1ca4[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@56de0c94[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@41c7613e[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@250a66db[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5159aa8e[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6473ca64[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6611bac9[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@68987311[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@44c85cb7[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@b751a10[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1fcd5d4[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@79843568[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@641e4442[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@732471b4[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@d56629a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@32b47b8d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@cb287f8[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@31bd9137[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5470a1e6[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6fe56be3[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3aa6cf1d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@204fde80[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6b58630a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@77be02c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5dbf9b59[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@19a8969c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@ea08503[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@36eeb4c6[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5ee3a4b6[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@78665d87[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@65cd0262[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4fd5b326[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6b575489[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@27bc3692[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2771d54c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@67538d90[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@58fda409[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4e82fb8c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5df29df5[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@19e6c63a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@fa207ff[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@51f062fe[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7fef041d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@511e3c90[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@d8dd0b5[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@72c10b7b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@30727921[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@296a6cf0[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2ff4abb[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3c453cac[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@ceb115b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2576da6b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7871daea[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3b351f9f[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@421d083a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1697ac2a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@815a678[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@739f4d2a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@78b0f895[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3d5b99fe[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1d160b02[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@26beb18d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2c29b5d7[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7df510e2[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@45524baf[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@42def297[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@577a3b8[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3e450d14[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6340e8ae[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2ee13b3f[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7c12e07c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4677af49[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4386701b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5c0c378b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4f149c3e[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6bd3e906[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@12ccf075[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2b8b0bfa[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4c203be6[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@69598260[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1ec577e0[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4774c731[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@10e9436d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@335b1d4a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@27399aed[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@51f2774[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7079e036[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@30b40255[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@48dc213e[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3d957015[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@69f400f1[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1a4ff88c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@515f4d8d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@18ad34b9[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3ceedd00[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5f53528[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2321746f[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@10691998[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1d0e5e58[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@56b489ed[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@173af9cb[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@28e53661[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1f6c3b16[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@31bbfce1[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4a5e3786[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@45454ab5[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1e007d1d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5c72f995[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@30ae5b7c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6cd52840[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4fe57511[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5f832fc0[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1077b99[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@361a1f34[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4f6e9fed[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5c601fa8[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4586177d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1cb16d13[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@21bdd2c0[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5e3200f0[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3664f1c0[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@18da3b97[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2b788c8f[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@8b62e9f[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4d5cf5e9[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@23b1c168[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4128f909[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3f732fd[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3362a7a3[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6646b064[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1a6699fe[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@48259118[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@55def82e[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@45c27119[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@77b7574c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@517d3268[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@789c6798[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@64f9cdee[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6939818b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@a883995[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@22b46b46[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@517d5df2[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@cd8c84b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@18e44d87[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7e17b583[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6525a144[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@25ad70ec[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@96111e0[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3048c75a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7b3c8076[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@20174c17[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1c37a19a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@60dd2be0[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@19024130[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7cf7d0d6[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@792c2917[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5615d2ba[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@43346280[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@16322122[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7efb01e3[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@71a48661[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@729e7b41[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@323d5b8a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@367375ff[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@55969209[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@16e15241[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@266883b7[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2748b54e[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@16be59f6[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7d17917[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@27431a1f[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@26722731[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3dbbc03d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@68599879[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@22d9a2ca[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7c6a1f9b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@67be368c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@53f6f690[Locked by thread TEST_EXECUTION_THREAD_1]
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test078()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        tree0.hook698(dIN0, byteArray0, 0, false, 5, dIN0);
        fail("Expecting exception: ReturnObject");
      
      } catch(ReturnObject e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test080()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook694((IN) null, dBIN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test081()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[7];
      DBIN dBIN0 = new DBIN();
      dBIN0.isSoughtNode((byte) (-24), false);
      // Undeclared exception!
      try { 
        tree0.hook686(true, false, byteArray0, dBIN0, dBIN0, dBIN0);
        fail("Expecting exception: ReturnObject");
      
      } catch(ReturnObject e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test083()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        tree0.hook686(true, false, byteArray0, (IN) null, (IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test084()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook684(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Tree tree0 = new Tree();
      DupCountLN dupCountLN0 = new DupCountLN();
      // Undeclared exception!
      try { 
        tree0.hook683((TreeLocation) null, byteArray0, byteArray0, dupCountLN0, false, false, false, false, false, false, dupCountLN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test088()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook675(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test090()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[1];
      tree0.delete(byteArray0, (UtilizationTracker) null);
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test091()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[0];
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, (IN) null, byteArray0);
      tree_Tree_forceSplit0.child = (IN) dIN0;
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.hook727();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test092()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[2];
      DBIN dBIN0 = new DBIN();
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, dBIN0, byteArray0);
      tree_Tree_forceSplit0.success = true;
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.hook727();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test094()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[1];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, 3137L, false);
      tree_Tree_searchSplitsAllowed0.hook716();
  }

  @Test
  public void test095()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.validateINList((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test096()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        tree0.validateINList(dIN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test097()  throws Throwable  {
      Tree tree0 = new Tree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("phu$^sovQ;P%}G");
      CharBuffer charBuffer0 = mS949_0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = mS949_0.encode(charBuffer0);
      tree0.readFromLog(byteBuffer1, (byte) (-111));
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test098()  throws Throwable  {
      Tree tree0 = new Tree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("");
      // Undeclared exception!
      try { 
        tree0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test099()  throws Throwable  {
      Tree tree0 = new Tree();
      int int0 = tree0.getLogSize();
      assertEquals(1, int0);
  }

  @Test
  public void test100()  throws Throwable  {
      Tree tree0 = new Tree();
      LN lN0 = new LN((byte[]) null);
      LockGrantType lockGrantType0 = LockGrantType.WAIT_NEW;
      LockResult lockResult0 = new LockResult(lockGrantType0, (WriteLockInfo) null);
      // Undeclared exception!
      try { 
        tree0.insert(lN0, (byte[]) null, false, (CursorImpl) null, lockResult0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test101()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[3];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.RIGHT;
      BINBoundary bINBoundary0 = new BINBoundary();
      // Undeclared exception!
      try { 
        tree0.searchSubTree(dBIN0, byteArray0, tree_SearchType0, (byte) (-80), bINBoundary0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // searchSubTree passed key and left/right search
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test102()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[0];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.RIGHT;
      BINBoundary bINBoundary0 = new BINBoundary();
      IN iN0 = tree0.searchSubTree((IN) null, byteArray0, tree_SearchType0, 0, bINBoundary0, true);
      assertNull(iN0);
  }

  @Test
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      NameLN nameLN0 = new NameLN();
      boolean boolean0 = tree0.getParentBINForChildLN(treeLocation0, byteArray0, byteArray0, nameLN0, false, false, false, false);
      assertFalse(boolean0);
  }

  @Test
  public void test105()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.getParentINForChildIN((IN) null, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getParentNode passed null
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test106()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getLastNode((DIN) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getLastNode passed null root
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test107()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getFirstNode((DIN) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getFirstNode passed null root
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test109()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[0];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, 4294967295L, false);
      tree_Tree_searchSplitsAllowed0.hook719();
  }

  @Test
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      Tree tree0 = new Tree();
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, 452L, true);
      // Undeclared exception!
      try { 
        tree_Tree_searchSplitsAllowed0.hook718();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_searchSplitsAllowed", e);
      }
  }

  @Test
  public void test111()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[2];
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, dBIN0, byteArray0);
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.hook725();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test112()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[3];
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, dIN0, byteArray0);
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.hook724();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test113()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[9];
      LN lN0 = new LN(byteArray0);
      // Undeclared exception!
      try { 
        tree0.insert(lN0, byteArray0, true, (CursorImpl) null, (LockResult) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test115()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.validateDelete((-1862));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test116()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook731((TreeLocation) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test117()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook705(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test118()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook740(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test119()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook661();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.recovery.RecoveryManager$RecoveryManager_traceRootDeletion", e);
      }
  }

  @Test
  public void test120()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setSearchHook((TestHook) null);
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test121()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook691((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test122()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[7];
      ChildReference childReference0 = tree0.makeRootChildReference((Node) null, byteArray0, (byte)37);
      assertEquals(37L, childReference0.getLsn());
  }

  @Test
  public void test123()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook748();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test124()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook734((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test125()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getPrevBin((BIN) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test126()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      dIN0.latchNoWait(true);
      // Undeclared exception!
      try { 
        tree0.getLastNode(dIN0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.tree.DIN cannot be cast to com.sleepycat.je.tree.DBIN
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test127()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[1];
      TreeLocation treeLocation0 = new TreeLocation();
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        tree0.hook685(treeLocation0, byteArray0, dIN0, (LN) null, true, true, false, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test128()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook693(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test129()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      DBIN dBIN0 = new DBIN();
      tree0.hook750(dBIN0);
      //  // Unstable assertion: assertEquals(188L, dBIN0.getGeneration());
      //  // Unstable assertion: assertEquals(165L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test130()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[9];
      ChildReference childReference0 = new ChildReference((Node) null, byteArray0, (-1L));
      tree0.setRoot(childReference0, true);
      assertFalse(childReference0.isKnownDeleted());
  }

  @Test
  public void test131()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook712((BIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test132()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook751();
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test133()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook665((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test134()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook662((IN) null, 0, 0L, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_traceSplitRoot", e);
      }
  }

  @Test
  public void test135()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      dIN0.latchNoWait(true);
      // Undeclared exception!
      try { 
        tree0.getFirstNode(dIN0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.tree.DIN cannot be cast to com.sleepycat.je.tree.DBIN
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test136()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      dBIN0.latch();
      tree0.hook741(dBIN0);
      //  // Unstable assertion: assertEquals(150L, dBIN0.getGeneration());
  }

  @Test
  public void test137()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      tree0.hook709(dBIN0);
      try { 
        tree0.hook750(dBIN0);
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // DBIN0 already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test138()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = null;
      try {
        tree0 = new Tree(databaseImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test139()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook752();
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test140()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook743((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test141()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      Tree tree0 = new Tree();
      tree0.hook694(dBIN0, (IN) null);
      assertFalse(dBIN0.isRoot());
  }

  @Test
  public void test142()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook700((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test143()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getNextBin((BIN) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test144()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[2];
      DBIN dBIN0 = new DBIN();
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, dBIN0, byteArray0);
      tree_Tree_forceSplit0.origParent = (IN) dBIN0;
      tree_Tree_forceSplit0.hook723();
      tree0.getParentINForChildIN((IN) dBIN0, false, true);
      //  // Unstable assertion: assertEquals(89L, dBIN0.getGeneration());
  }

  @Test
  public void test145()  throws Throwable  {
      Tree tree0 = new Tree();
      long long0 = tree0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test146()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.dump();
      //  // Unstable assertion: assertEquals(108L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test147()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[1];
      Tree tree0 = new Tree();
      dBIN0.latch();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      tree0.searchDeletableSubTree(dBIN0, byteArray0, arrayList0);
      //  // Unstable assertion: assertEquals(68L, dBIN0.getGeneration());
  }

  @Test
  public void test148()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        tree0.hook663(dIN0, dIN0, (byte)115, (byte)115);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_traceSplitRoot", e);
      }
  }

  @Test
  public void test149()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      dBIN0.latch();
      tree0.hook680(dBIN0);
      //  // Unstable assertion: assertEquals(61L, dBIN0.getGeneration());
  }

  @Test
  public void test150()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setCkptHook((TestHook) null);
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test151()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.withRootLatchedShared((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test152()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook715(818);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test153()  throws Throwable  {
      Tree tree0 = new Tree();
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, (byte[]) null, 0, true);
      tree_Tree_searchSplitsAllowed0.hook721();
      tree0.hook673();
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test154()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      Tree tree0 = new Tree();
      dBIN0.latch();
      tree0.hook747(dBIN0);
      //  // Unstable assertion: assertEquals(57L, dBIN0.getGeneration());
  }

  @Test
  public void test155()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook749();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test156()  throws Throwable  {
      Tree tree0 = new Tree();
      boolean boolean0 = tree0.logEntryIsTransactional();
      assertFalse(boolean0);
  }

  @Test
  public void test157()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook745((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test158()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook707(dIN0);
      //  // Unstable assertion: assertEquals(53L, dIN0.getGeneration());
  }

  @Test
  public void test159()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      Tree tree0 = new Tree();
      dBIN0.latch();
      tree0.hook690(dBIN0);
      //  // Unstable assertion: assertEquals(46L, dBIN0.getGeneration());
  }

  @Test
  public void test160()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setTreeStatsAccumulator((TreeWalkerStatsAccumulator) null);
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test161()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.withRootLatchedExclusive((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test162()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook736(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test163()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[9];
      TreeLocation treeLocation0 = new TreeLocation();
      DupCountLN dupCountLN0 = new DupCountLN();
      tree0.hook683(treeLocation0, (byte[]) null, byteArray0, dupCountLN0, false, false, false, true, false, false, (Node) null);
      assertFalse(dupCountLN0.isDeleted());
  }

  @Test
  public void test164()  throws Throwable  {
      Tree tree0 = new Tree();
      IN iN0 = tree0.getFirstNode();
      assertNull(iN0);
  }

  @Test
  public void test165()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook710(dIN0);
      //  // Unstable assertion: assertEquals(42L, dIN0.getGeneration());
  }

  @Test
  public void test166()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook744(dIN0);
      //  // Unstable assertion: assertEquals(38L, dIN0.getGeneration());
  }

  @Test
  public void test167()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook746((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test168()  throws Throwable  {
      Tree tree0 = new Tree();
      DatabaseImpl databaseImpl0 = tree0.getDatabase();
      assertNull(databaseImpl0);
  }

  @Test
  public void test169()  throws Throwable  {
      Tree tree0 = new Tree();
      ArrayList<LN> arrayList0 = new ArrayList<LN>();
      tree0.hook676(arrayList0);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test171()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeStats treeStats0 = tree0.getTreeStats();
      assertEquals(0, treeStats0.nRootSplits);
  }

  @Test
  public void test173()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setWaitHook((TestHook) null);
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test174()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook671((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test175()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      dBIN0.latch();
      tree0.hook699(dBIN0);
      //  // Unstable assertion: assertEquals(8L, dBIN0.getGeneration());
  }

  @Test
  public void test176()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.hook684((BIN) null);
      //  // Unstable assertion: assertEquals(92L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test177()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.getLastNode();
      //  // Unstable assertion: assertEquals(75L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test178()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook742(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test179()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      Tree tree0 = new Tree();
      tree0.hook681(dBIN0);
      assertTrue(dBIN0.marshallOutsideWriteLatch());
  }

  @Test
  public void test180()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      TreeLocation treeLocation0 = new TreeLocation();
      DupCountLN dupCountLN0 = new DupCountLN();
      boolean boolean0 = tree0.getParentBINForChildLN(treeLocation0, (byte[]) null, (byte[]) null, dupCountLN0, true, true, true, true);
      //  // Unstable assertion: assertEquals(24L, dupCountLN0.getLastId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test181()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook738((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test182()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      dBIN0.latch();
      tree0.hook692(dBIN0);
      //  // Unstable assertion: assertEquals(4L, dBIN0.getGeneration());
  }

  @Test
  public void test183()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[7];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, (byte)18, true);
      // Undeclared exception!
      try { 
        tree_Tree_searchSplitsAllowed0.hook720();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test184()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook753();
      assertFalse(tree0.logEntryIsTransactional());
  }

  
}
