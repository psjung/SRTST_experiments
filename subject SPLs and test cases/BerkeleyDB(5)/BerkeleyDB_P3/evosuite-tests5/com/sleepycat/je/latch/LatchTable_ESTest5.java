/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 03:18:58 KST 2017
 */

package com.sleepycat.je.latch;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sleepycat.je.latch.LatchTable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class LatchTable_ESTest5 extends LatchTable_ESTest_scaffolding5 {

  @Test
  public void test00()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("C<n+]mD[");
      boolean boolean0 = latchTable0.noteLatch(latchTable0);
      assertTrue(boolean0);
      
      boolean boolean1 = latchTable0.unNoteLatch(latchTable0, "C<n+]mD[");
      assertTrue(boolean1 == boolean0);
  }

  @Test
  public void test01()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.addLast((Object) null);
      linkedList0.add((Object) latchTable0);
      String string0 = latchTable0.toString("", (Object) latchTable0, (List) linkedList0, 0);
      assertNotNull(string0);
  }

  @Test
  public void test02()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("koJ@Wdr%t]");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = latchTable0.toString("koJ@Wdr%t]", (Object) "koJ@Wdr%t]", (List) linkedList0, 2859);
      assertEquals("<LATCH [name: koJ@Wdr%t]] [owner: koJ@Wdr%t]]>", string0);
  }

  @Test
  public void test04()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        latchTable0.toString("()", (Object) "", (List) linkedList0, (-3128));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -3128, Size: 0
         //
         assertThrownBy("java.util.LinkedList", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable((String) null);
      // Undeclared exception!
      try { 
        latchTable0.getNameString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.StringBuffer", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable(">=?@BRk57Fa7U8");
      String string0 = latchTable0.toString("", (Object) ">=?@BRk57Fa7U8", (List) null, 0);
      assertEquals("<LATCH [name: ] [owner: >=?@BRk57Fa7U8]>", string0);
  }

  @Test
  public void test07()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("eZq~E!WY.f|C_`");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = latchTable0.toString((String) null, (Object) null, (List) linkedList0, 0);
      assertEquals("<LATCH [owner: null]>", string0);
  }

  @Test
  public void test08()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable(">=?@BRk57Fa7U8");
      String string0 = latchTable0.getNameString("");
      assertEquals(">=?@BRk57Fa7U8()", string0);
  }

  @Test
  public void test09()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("");
      String string0 = latchTable0.getNameString((String) null);
      assertEquals("", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("C<n+]mD[");
      boolean boolean0 = latchTable0.noteLatch("C<n+]mD[");
      assertTrue(boolean0);
      
      String string0 = latchTable0.latchesHeldToString();
      assertEquals("C<n+]mD[\n", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable(">=?@BRk57Fa7U8");
      String string0 = latchTable0.latchesHeldToString();
      assertEquals("", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("");
      latchTable0.noteLatch(latchTable0);
      int int0 = latchTable0.countLatchesHeld();
      assertEquals(1, int0);
  }

  @Test
  public void test13()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable(">=?@BRk57Fa7U8");
      int int0 = latchTable0.countLatchesHeld();
      assertEquals(0, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("eZq~E!WY.f|C_`");
      boolean boolean0 = latchTable0.unNoteLatch("KdVcE#!;~mj3", "eZq~E!WY.f|C_`");
      assertFalse(boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("C<n+]mD[");
      latchTable0.noteLatch("C<n+]mD[");
      boolean boolean0 = latchTable0.noteLatch(latchTable0);
      assertTrue(boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("eZq~E!WY.f|C_`");
      latchTable0.clearNotes();
  }
}
