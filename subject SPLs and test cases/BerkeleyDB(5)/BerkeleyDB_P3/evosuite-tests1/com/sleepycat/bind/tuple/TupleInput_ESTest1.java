/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 18:21:12 KST 2017
 */

package com.sleepycat.bind.tuple;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class TupleInput_ESTest1 extends TupleInput_ESTest_scaffolding1 {

  @Test
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)0, (int) (byte)121);
      int int0 = tupleInput0.readUnsignedShort();
      assertEquals(0, int0);
  }

  @Test
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeDouble((byte) (-35));
      tupleOutput1.writeLong((byte) (-64));
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      tupleInput0.read();
      long long0 = tupleInput0.readLong();
      assertEquals((-4503599627370495873L), long0);
      
      short short0 = tupleInput0.readShort();
      assertEquals((short)32767, short0);
  }

  @Test
  public void test02()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeInt((-2118));
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      float float0 = tupleInput0.readFloat();
      assertEquals(Float.NaN, float0, 0.01F);
  }

  @Test
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeChar((byte)0);
      TupleOutput tupleOutput2 = tupleOutput1.writeDouble(1.0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput2);
      char char0 = tupleInput0.readChar();
      assertEquals('\u0000', char0);
      
      int int0 = tupleInput0.readUnsignedByte();
      assertEquals(63, int0);
      
      float float0 = tupleInput0.readFloat();
      assertEquals((-1.58456325E29F), float0, 0.01F);
  }

  @Test
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-37);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      double double0 = tupleInput0.readDouble();
      assertEquals((-2.218135755296652E130), double0, 0.01D);
  }

  @Test
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeUnsignedByte((-1));
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      byte byte0 = tupleInput0.readByte();
      assertEquals((byte)127, byte0);
  }

  @Test
  public void test06()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeChars("Va.&TQ@H4,Jf.w");
      char[] charArray0 = new char[6];
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      tupleInput0.readBytes(charArray0);
      assertEquals(6, tupleInput0.getBufferOffset());
  }

  @Test
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeDouble((byte)0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      try { 
        tupleInput0.readChars((int) (byte)40);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeDouble((byte) (-35));
      TupleOutput tupleOutput2 = tupleOutput1.writeLong((byte) (-64));
      TupleInput tupleInput0 = new TupleInput(tupleOutput2);
      tupleInput0.read();
      tupleInput0.readUnsignedByte();
      long long0 = tupleInput0.readLong();
      assertEquals(32767L, long0);
  }

  @Test
  public void test09()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      tupleOutput0.writeFloat((-2975.6F));
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      int int0 = tupleInput0.readInt();
      assertEquals(1161427354, int0);
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeDouble((byte) (-35));
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      tupleInput0.read();
      int int0 = tupleInput0.readUnsignedByte();
      assertEquals(65, int0);
      
      short short0 = tupleInput0.readShort();
      assertEquals((short)0, short0);
  }

  @Test
  public void test11()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeInt(1429);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      byte byte0 = tupleInput0.readByte();
      assertEquals((byte)0, byte0);
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-125);
      byteArray0[0] = (byte) (-1);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      tupleOutput0.writeFloat((-2785.9468F));
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.readString();
      assertEquals(1, tupleInput0.available());
  }

  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      tupleOutput0.writeDouble((byte) (-35));
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      char char0 = tupleInput0.readChar();
      assertEquals('\uC041', char0);
  }

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.readString(0);
      assertEquals(0, tupleInput0.available());
  }

  @Test
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (-837), 148);
      try { 
        tupleInput0.readUnsignedShort();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte) (-48), 527);
      try { 
        tupleInput0.readUnsignedInt();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.skip((byte) (-48));
      try { 
        tupleInput0.readUnsignedByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-50);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      char[] charArray0 = new char[7];
      try { 
        tupleInput0.readString(charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 32768, (int) (byte) (-2));
      char[] charArray0 = new char[7];
      try { 
        tupleInput0.readString(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32768
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      // Undeclared exception!
      try { 
        tupleInput0.readString((-3621));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test23()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeString("d9_&2nFtg");
      TupleOutput tupleOutput2 = tupleOutput1.writeUnsignedShort((-1));
      TupleInput tupleInput0 = new TupleInput(tupleOutput2);
      tupleInput0.readLong();
      try { 
        tupleInput0.readString(4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte) (-61), (int) (byte)0);
      try { 
        tupleInput0.readShort();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (-1234), 48);
      try { 
        tupleInput0.readLong();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte) (-24), (int) (byte)127);
      try { 
        tupleInput0.readInt();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (-837), 148);
      try { 
        tupleInput0.readFloat();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)0, (int) (byte)121);
      try { 
        tupleInput0.readDouble();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 32, 32);
      tupleInput0.skip((byte) (-101));
      char[] charArray0 = new char[1];
      try { 
        tupleInput0.readChars(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test30()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      // Undeclared exception!
      try { 
        tupleInput0.readChars(2133447807);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  @Test
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      // Undeclared exception!
      try { 
        tupleInput0.readChars((-2868));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.skip((-403L));
      try { 
        tupleInput0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test33()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      // Undeclared exception!
      try { 
        tupleInput0.readBytes((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte) (-118), (int) (byte)31);
      char[] charArray0 = new char[4];
      try { 
        tupleInput0.readBytes(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test35()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      // Undeclared exception!
      try { 
        tupleInput0.readBytes((int) (short) (-32768));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte) (-13), (int) (byte)0);
      try { 
        tupleInput0.readBoolean();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test37()  throws Throwable  {
      TupleInput tupleInput0 = null;
      try {
        tupleInput0 = new TupleInput((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.FastInputStream", e);
      }
  }

  @Test
  public void test38()  throws Throwable  {
      TupleInput tupleInput0 = null;
      try {
        tupleInput0 = new TupleInput((TupleOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readUnsignedInt();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test40()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeInt((-1221));
      char[] charArray0 = new char[20];
      TupleOutput tupleOutput2 = tupleOutput1.writeBytes(charArray0);
      tupleOutput0.writeBytes(charArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput2);
      tupleInput0.readDouble();
      tupleInput0.readBoolean();
      tupleInput0.readUnsignedInt();
      tupleInput0.readInt();
      tupleInput0.readFloat();
      tupleInput0.readShort();
      tupleInput0.readBytes(charArray0);
      try { 
        tupleInput0.readUnsignedShort();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test41()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      tupleOutput0.writeChars("Va.&TQ@H4,Jf.w");
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      int int0 = tupleInput0.readUnsignedShort();
      assertEquals(86, int0);
  }

  @Test
  public void test42()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeByte((-2746));
      char[] charArray0 = new char[4];
      tupleOutput0.writeBytes(charArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      tupleInput0.read();
      tupleInput0.readByte();
      tupleInput0.readBoolean();
      tupleInput0.readShort();
      try { 
        tupleInput0.readUnsignedByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      char[] charArray0 = new char[1];
      tupleInput0.readString(charArray0);
      try { 
        tupleInput0.readString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeDouble((byte)0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      char[] charArray0 = new char[1];
      tupleInput0.readChars(charArray0);
      assertEquals(2, tupleInput0.getBufferOffset());
  }

  @Test
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 32, 32);
      char[] charArray0 = new char[1];
      try { 
        tupleInput0.readChars(charArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test47()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      char[] charArray0 = new char[20];
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readBytes(charArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 0, 0);
      String string0 = tupleInput0.readChars(0);
      assertEquals("", string0);
  }

  @Test
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readBytes(1429);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test50()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeChars("Va.&TQ@H4,Jf.w");
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      tupleInput0.readBytes(6);
      assertEquals(6, tupleInput0.getBufferOffset());
  }

  @Test
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte) (-70), 4315);
      try { 
        tupleInput0.readBytes((int) (byte)117);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test52()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeInt((-1221));
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      long long0 = tupleInput0.readUnsignedInt();
      assertEquals(2147482427L, long0);
  }

  @Test
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.readShort();
      tupleInput0.readByte();
      try { 
        tupleInput0.readByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeChar((byte)0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      int int0 = tupleInput0.readUnsignedByte();
      assertEquals(0, int0);
  }

  @Test
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)81;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      boolean boolean0 = tupleInput0.readBoolean();
      assertTrue(boolean0);
  }

  @Test
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.readDouble();
      try { 
        tupleInput0.readBoolean();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)76;
      byteArray0[0] = (byte) (-1);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.readString();
      assertEquals(2, tupleInput0.available());
  }

  @Test
  public void test59()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readShort();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test60()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readFloat();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test61()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readInt();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)11, (int) (byte)95);
      try { 
        tupleInput0.readChars(8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readLong();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte) (-70), 4315);
      try { 
        tupleInput0.readByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test65()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readDouble();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readString((int) (byte)101);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }
}
