/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 16:00:18 KST 2017
 */

package com.sleepycat.je.tree;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotSame;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.cleaner.FileSummary;
import com.sleepycat.je.cleaner.TrackedFileSummary;
import com.sleepycat.je.dbi.DatabaseImpl;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class FileSummaryLN_ESTest4 extends FileSummaryLN_ESTest_scaffolding4 {

  @Test
  public void test00()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      FileSummary fileSummary0 = fileSummaryLN0.getBaseSummary();
      fileSummary0.totalSize = 1876;
  }

  @Test
  public void test01()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      FileSummary fileSummary0 = fileSummaryLN0.getBaseSummary();
      fileSummary0.totalLNCount = 1859;
  }

  @Test
  public void test02()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      fileSummary0.totalLNCount = (-2877);
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      fileSummaryLN0.getBaseSummary();
      //  // Unstable assertion: assertEquals(327L, fileSummaryLN0.getNodeId());
  }

  @Test
  public void test03()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      FileSummary fileSummary0 = fileSummaryLN0.getBaseSummary();
      fileSummary0.totalCount = 5;
  }

  @Test
  public void test04()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      FileSummary fileSummary0 = fileSummaryLN0.getBaseSummary();
      fileSummary0.totalCount = (-5);
  }

  @Test
  public void test05()  throws Throwable  {
      byte[] byteArray0 = FileSummaryLN.makeFullKey((-2912L), 0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-12), (byte) (-96), (byte)127, (byte) (-1), (byte) (-1), (byte) (-1)}, byteArray0);
  }

  @Test
  public void test06()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      // Undeclared exception!
      try { 
        fileSummaryLN0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      // Undeclared exception!
      try { 
        fileSummaryLN0.readFromLog((ByteBuffer) null, (byte)10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      // Undeclared exception!
      try { 
        fileSummaryLN0.dumpString(2076, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 2078
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      // Undeclared exception!
      try { 
        fileSummaryLN0.dumpLogAdditional((StringBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.FileSummary", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      String string0 = fileSummaryLN0.dumpString(0, true);
      assertEquals("<fileSummaryLN>\n  <node>0</node>\n</fileSummaryLN>\n", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      byte[] byteArray0 = new byte[9];
      boolean boolean0 = fileSummaryLN0.hasStringKey(byteArray0);
      assertTrue(boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      fileSummaryLN0.beginTag();
      //  // Unstable assertion: assertEquals(304L, fileSummaryLN0.getNodeId());
  }

  @Test
  public void test13()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      fileSummaryLN0.endTag();
      //  // Unstable assertion: assertEquals(298L, fileSummaryLN0.getLastId());
  }

  @Test
  public void test14()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("</fileSummaryLN>");
      // Undeclared exception!
      try { 
        fileSummaryLN0.readFromLog(byteBuffer0, (byte) (-117));
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("C Q&yTB|O;~");
      fileSummaryLN0.readFromLog(byteBuffer0, (byte)64);
      byte[] byteArray0 = new byte[4];
      boolean boolean0 = fileSummaryLN0.hasStringKey(byteArray0);
      assertTrue(boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("<summary totalCount=\"0\" totalSize=\"0\" totalINCount=\"0\" totalINSize=\"0\" totalLNCount=\"0\" totalLNSize=\"0\" obsoleteINCount=\"0\" obsoleteLNCount=\"0\"/>");
      CharBuffer charBuffer0 = mS949_0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = mS949_0.encode(charBuffer0);
      fileSummaryLN0.writeToLog(byteBuffer1);
      //  // Unstable assertion: assertEquals(279L, fileSummaryLN0.getNodeId());
  }

  @Test
  public void test17()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("_3SB8ndm.<;vl_");
      CharBuffer charBuffer0 = mS949_0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = mS949_0.encode(charBuffer0);
      fileSummaryLN0.writeToLog(byteBuffer1);
      assertNotSame(byteBuffer0, byteBuffer1);
  }

  @Test
  public void test18()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("");
      // Undeclared exception!
      try { 
        fileSummaryLN0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test19()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      FileSummary fileSummary0 = fileSummaryLN0.getBaseSummary();
      FileSummaryLN fileSummaryLN1 = new FileSummaryLN(fileSummary0);
      int int0 = fileSummaryLN1.getLogSize();
      //  // Unstable assertion: assertEquals(248L, fileSummaryLN1.getNodeId());
      //  // Unstable assertion: assertEquals(53, int0);
  }

  @Test
  public void test20()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      int int0 = fileSummaryLN0.getLogSize();
      assertEquals(9, int0);
  }

  @Test
  public void test22()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      StringWriter stringWriter0 = new StringWriter(2297);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      fileSummaryLN0.dumpLog(stringBuffer0, false);
      //  // Unstable assertion: assertEquals(205, stringBuffer0.length());
      //  // Unstable assertion: assertEquals(237L, fileSummaryLN0.getNodeId());
  }

  @Test
  public void test23()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      fileSummaryLN0.dumpLogAdditional(stringBuffer0, true);
      //  // Unstable assertion: assertEquals(286, stringBuffer0.capacity());
      //  // Unstable assertion: assertEquals(227L, fileSummaryLN0.getLastId());
  }

  @Test
  public void test24()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      fileSummaryLN0.dumpLogAdditional(stringBuffer0, false);
      assertEquals("", stringBuffer0.toString());
      assertEquals("", stringWriter0.toString());
  }

  @Test
  public void test25()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      String string0 = fileSummaryLN0.dumpString(0, false);
      //  // Unstable assertion: assertEquals("  <node>211</node>\n  <data></data>\n\n<summary totalCount=\"0\" totalSize=\"0\" totalINCount=\"0\" totalINSize=\"0\" totalLNCount=\"0\" totalLNSize=\"0\" obsoleteINCount=\"0\" obsoleteLNCount=\"0\"/><offsets size=\"0\"/>", string0);
  }

  @Test
  public void test26()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      fileSummaryLN0.postFetchInit((DatabaseImpl) null, 429L);
      assertFalse(fileSummaryLN0.countAsObsoleteWhenLogged());
  }

  @Test
  public void test28()  throws Throwable  {
      byte[] byteArray0 = FileSummaryLN.makeFullKey(32767L, 4043);
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      long long0 = fileSummaryLN0.getFileNumber(byteArray0);
      //  // Unstable assertion: assertEquals(140L, fileSummaryLN0.getNodeId());
      //  // Unstable assertion: assertEquals(32767L, long0);
  }

  @Test
  public void test29()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      byte[] byteArray0 = new byte[11];
      // Undeclared exception!
      try { 
        fileSummaryLN0.getFileNumber(byteArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\"
         //
         assertThrownBy("java.lang.NumberFormatException", e);
      }
  }

  @Test
  public void test30()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      byte[] byteArray0 = FileSummaryLN.makeFullKey(0, 4043);
      boolean boolean0 = fileSummaryLN0.hasStringKey(byteArray0);
      //  // Unstable assertion: assertEquals(48L, fileSummaryLN0.getNodeId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      // Undeclared exception!
      try { 
        fileSummaryLN0.getFileNumber((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.FileSummaryLN", e);
      }
  }

  @Test
  public void test33()  throws Throwable  {
      byte[] byteArray0 = FileSummaryLN.makePartialKey(0L);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test
  public void test34()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      boolean boolean0 = fileSummaryLN0.countAsObsoleteWhenLogged();
      //  // Unstable assertion: assertEquals(28L, fileSummaryLN0.getNodeId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test35()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      fileSummaryLN0.getObsoleteOffsets();
      //  // Unstable assertion: assertEquals(22L, fileSummaryLN0.getNodeId());
  }

  @Test
  public void test36()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      fileSummaryLN0.getLogType();
      //  // Unstable assertion: assertEquals(16L, fileSummaryLN0.getLastId());
  }

  @Test
  public void test37()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      boolean boolean0 = fileSummaryLN0.marshallOutsideWriteLatch();
      //  // Unstable assertion: assertEquals(9L, fileSummaryLN0.getNodeId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test38()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      TrackedFileSummary trackedFileSummary0 = fileSummaryLN0.getTrackedSummary();
      assertNull(trackedFileSummary0);
  }

  @Test
  public void test39()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      String string0 = fileSummaryLN0.toString();
      assertEquals("<fileSummaryLN>\n  <node>0</node>\n</fileSummaryLN>\n", string0);
  }

  @Test
  public void test40()  throws Throwable  {
      FileSummary fileSummary0 = new FileSummary();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN(fileSummary0);
      fileSummaryLN0.setTrackedSummary((TrackedFileSummary) null);
      //  // Unstable assertion: assertEquals(1L, fileSummaryLN0.getNodeId());
  }
}
