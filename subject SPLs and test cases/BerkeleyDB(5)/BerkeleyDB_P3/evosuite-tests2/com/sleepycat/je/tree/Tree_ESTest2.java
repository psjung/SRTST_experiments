/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 02:03:17 KST 2017
 */

package com.sleepycat.je.tree;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.File;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;
import java.util.logging.Level;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.dbi.CursorImpl;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.latch.LatchException;
import com.sleepycat.je.latch.LatchNotHeldException;
import com.sleepycat.je.txn.LockGrantType;
import com.sleepycat.je.utilint.TestHook;

import de.ovgu.cide.jakutil.ReturnObject;
import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Tree_ESTest2 extends Tree_ESTest_scaffolding2 {

  @Test
  public void test000()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[27];
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, (IN) null, byteArray0);
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.hook727();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test002()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[7];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, 2048L, false);
      tree_Tree_searchSplitsAllowed0.hook721();
      try { 
        tree_Tree_searchSplitsAllowed0.hook719();
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // RootLatch already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5SharedLatchImpl", e);
      }
  }

  @Test
  public void test003()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.getFirstNode();
      // Undeclared exception!
      try { 
        tree0.withRootLatchedExclusive((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test005()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[7];
      DatabaseImpl databaseImpl0 = null;
      Node node0 = null;
      ChildReference childReference0 = new ChildReference(node0, byteArray0, (long) byteArray0[2]);
      DIN dIN0 = null;
      try {
        dIN0 = new DIN(databaseImpl0, byteArray0, (int) byteArray0[3], byteArray0, childReference0, (int) byteArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test006()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        tree0.hook754(dBIN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test007()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook729();
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test010()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook702();
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test012()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[8];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, 431L, false);
      EnvironmentImpl environmentImpl0 = null;
      try {  
      environmentImpl0 = tree_Tree_searchSplitsAllowed0.env;
      } catch(NullPointerException e) {}
  }

  @Test
  public void test013()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.rebuildINList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test015()  throws Throwable  {
      Tree tree0 = new Tree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("");
      // Undeclared exception!
      try { 
        tree0.readFromLog(byteBuffer0, (byte) (-117));
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test016()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook744(dIN0);
      try { 
        tree0.hook744(dIN0);
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // DIN0 already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test017()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook740(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test018()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook738((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test019()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook737((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test020()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook737(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test021()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook735((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test022()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook734((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test025()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook712((BIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test026()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook707((DIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test027()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        tree0.hook701(true, dIN0);
        fail("Expecting exception: ReturnObject");
      
      } catch(ReturnObject e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test028()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook700((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test029()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        tree0.hook698((IN) null, byteArray0, 2361L, false, 0, dIN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test030()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook692(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test031()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook691((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test032()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook691(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test035()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        tree0.hook686(true, false, byteArray0, (IN) null, (IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test037()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook679(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test040()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook675(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test041()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        tree0.hook674(byteArray0, byteArray0, (IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test042()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getPrevBin((BIN) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test043()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getNextBin((BIN) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test044()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.dumpString((-538));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -538
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test045()  throws Throwable  {
      Tree tree0 = new Tree();
      String string0 = tree0.dumpString(60);
      assertEquals("                                                            <tree>\n                                                            </tree>", string0);
  }

  @Test
  public void test046()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[4];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.LEFT;
      BINBoundary bINBoundary0 = new BINBoundary();
      // Undeclared exception!
      try { 
        tree0.searchSubTree(dIN0, byteArray0, tree_SearchType0, 2444L, bINBoundary0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // searchSubTree passed key and left/right search
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test047()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[0];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.RIGHT;
      BINBoundary bINBoundary0 = new BINBoundary();
      tree0.search(byteArray0, tree_SearchType0, 2796L, bINBoundary0, false);
      //  // Unstable assertion: assertEquals(354L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test048()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[5];
      ArrayList<IN> arrayList0 = new ArrayList<IN>();
      tree0.getParentINForChildIN((-1046L), false, true, byteArray0, byteArray0, true, true, (int) (byte)88, (List) arrayList0, true);
      //  // Unstable assertion: assertEquals(337L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test049()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getParentINForChildIN((IN) null, false, true, 0, (List) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getParentNode passed null
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test050()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.setDatabase((DatabaseImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test051()  throws Throwable  {
      Tree tree0 = new Tree();
      IN iN0 = tree0.getRootIN(false);
      assertNull(iN0);
  }

  @Test
  public void test052()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getParentINForChildIN((IN) null, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getParentNode passed null
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test054()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)36;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-1);
      long long0 = 0L;
      // Undeclared exception!
      try { 
        tree0.hook733();
       //  fail("Expecting exception: AssertionError");
       // Unstable assertion
      } catch(AssertionError e) {
         //
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@e9f22bf[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@72042f46[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4f5fd2b2[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3351f9b4[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6787069d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4e896c1f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4a03c124[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3cac2bf[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1fd443ea[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2296d6eb[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@19f1a024[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7b8f40f1[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@351c31ac[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@e648653[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@76fcd25[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@113f6ed8[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4bf0c498[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4f01470f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@41eec140[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7067d579[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4813f7fd[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1916d7f7[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@348f84eb[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@68dfe898[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3f6ec180[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@9af5f43[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@44e5f9f6[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5d7947ef[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@46d546cf[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3e37ca2b[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2a7da732[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6ff3860a[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@50de5dc8[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7cd8f612[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3ec6dada[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@8306545[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@40f90fae[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1c2d804[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4eb44610[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@29b01b2d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@33a3a12d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@163ce905[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@55726482[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@126548fb[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@12fd0ed9[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3034a02f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4a0cda0f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@d2139e2[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@20e86b34[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@e36b3c5[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@489105c0[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@62445672[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7597f09e[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7a6d2b7d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6e244885[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7a52f04c[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@280ca42f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4413384e[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@33f7fede[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4052919a[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@75cebd3d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@779c3d28[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4b8fa802[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@648a9bbf[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@51440ef4[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@58d580de[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4154ddbe[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2dbfa3e3[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2d1257cc[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@42c8134d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7aad4b85[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@109f7ee2[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7b28f4ea[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@146e5803[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4348f09[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@64a6be42[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4d392e8d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@46bed4c7[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@67bc0cc8[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6286bf16[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@45dd069[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6a0ad510[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1b0cfe22[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@205eff32[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@60211fc4[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7e617369[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@29302c6d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1a9adf26[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@627c845c[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@17cf999a[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@36278ae3[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3d657aec[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@38fc4015[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5f6c0f60[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3c6ad29f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@754b8cb5[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6243908f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3039ea26[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2cabe1e1[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5170e536[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@755dec8d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3c8df954[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@75518c67[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@580c52d0[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1f4ef853[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@22b3bfa[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@61ed9dc8[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2acd6a9b[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@aef023b[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4d454533[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4c6f7345[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7b691b27[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5f69773c[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@69769072[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@31d857b3[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7a386421[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@27e4d572[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@321c1537[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@763d3e9a[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@50aa221c[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2cfe6db5[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4793aecc[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@77f2c8e1[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@76859e53[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@50001d41[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@65a5f538[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@47ba17da[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4b97eb8d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@36c7430d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1d780a10[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@143ad00d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4491da69[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7fe4205e[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6b68ced6[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@37c8f1e4[Locked by thread TEST_EXECUTION_THREAD_2]
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test057()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        tree0.hook698(dBIN0, byteArray0, (byte)5, false, 9, dBIN0);
        fail("Expecting exception: ReturnObject");
      
      } catch(ReturnObject e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test058()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook694((IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test060()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[0];
      dIN0.latchNoWait();
      // Undeclared exception!
      try { 
        tree0.hook687();
       //  fail("Expecting exception: AssertionError");
       // Unstable assertion
      } catch(AssertionError e) {
         //
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@e9f22bf[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@72042f46[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4f5fd2b2[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3351f9b4[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6787069d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4e896c1f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4a03c124[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3cac2bf[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1fd443ea[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2296d6eb[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@19f1a024[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7b8f40f1[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@351c31ac[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@e648653[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@76fcd25[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@113f6ed8[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4bf0c498[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4f01470f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@41eec140[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7067d579[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4813f7fd[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1916d7f7[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@692f8bef[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@348f84eb[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@68dfe898[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3f6ec180[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@9af5f43[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@44e5f9f6[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5d7947ef[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@46d546cf[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3e37ca2b[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2a7da732[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6ff3860a[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@50de5dc8[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7cd8f612[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3ec6dada[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@8306545[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@40f90fae[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1c2d804[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4eb44610[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@29b01b2d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@33a3a12d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@163ce905[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@55726482[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@126548fb[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@12fd0ed9[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3034a02f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4a0cda0f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@d2139e2[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@20e86b34[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@e36b3c5[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@489105c0[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@62445672[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7597f09e[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7a6d2b7d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6e244885[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7a52f04c[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@280ca42f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4413384e[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@33f7fede[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4052919a[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@75cebd3d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@779c3d28[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4b8fa802[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@648a9bbf[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@51440ef4[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@58d580de[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4154ddbe[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2dbfa3e3[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2d1257cc[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@42c8134d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7aad4b85[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@109f7ee2[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7b28f4ea[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@146e5803[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4348f09[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@64a6be42[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4d392e8d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@46bed4c7[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@67bc0cc8[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6286bf16[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@45dd069[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6a0ad510[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1b0cfe22[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@205eff32[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@60211fc4[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7e617369[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@29302c6d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1a9adf26[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@627c845c[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@17cf999a[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@36278ae3[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3d657aec[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@38fc4015[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5f6c0f60[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3c6ad29f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@754b8cb5[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6243908f[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3039ea26[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2cabe1e1[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5170e536[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@755dec8d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3c8df954[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@75518c67[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@580c52d0[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1f4ef853[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@22b3bfa[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@61ed9dc8[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2acd6a9b[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@aef023b[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4d454533[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4c6f7345[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7b691b27[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5f69773c[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@69769072[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@31d857b3[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7a386421[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@27e4d572[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@321c1537[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@763d3e9a[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@50aa221c[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2cfe6db5[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4793aecc[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@77f2c8e1[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@76859e53[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@50001d41[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@65a5f538[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@47ba17da[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4b97eb8d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@36c7430d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1d780a10[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@143ad00d[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4491da69[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7fe4205e[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6b68ced6[Locked by thread TEST_EXECUTION_THREAD_2]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@37c8f1e4[Locked by thread TEST_EXECUTION_THREAD_2]
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test061()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      MapLN mapLN0 = new MapLN();
      tree0.hook683(treeLocation0, (byte[]) null, (byte[]) null, mapLN0, false, false, false, false, false, false, mapLN0);
      //  // Unstable assertion: assertEquals(276L, mapLN0.getLastId());
  }

  @Test
  public void test064()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[2];
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, (IN) null, byteArray0);
      tree_Tree_forceSplit0.success = true;
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.hook727();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test066()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[7];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, (byte)12, false);
      tree_Tree_searchSplitsAllowed0.hook716();
  }

  @Test
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed((Tree) null, byteArray0, (-1787L), false);
      // Undeclared exception!
      try { 
        tree_Tree_searchSplitsAllowed0.hook716();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test068()  throws Throwable  {
      Tree tree0 = new Tree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode(" index=");
      tree0.readFromLog(byteBuffer0, (byte)81);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test069()  throws Throwable  {
      Tree tree0 = new Tree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("I>VlMb )bwlRVo3");
      tree0.writeToLog(byteBuffer0);
      assertEquals("java.nio.HeapByteBuffer[pos=1 lim=15 cap=30]", byteBuffer0.toString());
  }

  @Test
  public void test070()  throws Throwable  {
      Tree tree0 = new Tree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("");
      // Undeclared exception!
      try { 
        tree0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test071()  throws Throwable  {
      Tree tree0 = new Tree();
      int int0 = tree0.getLogSize();
      assertEquals(1, int0);
  }

  @Test
  public void test073()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[8];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.RIGHT;
      BINBoundary bINBoundary0 = new BINBoundary();
      // Undeclared exception!
      try { 
        tree0.searchSubTree(dBIN0, byteArray0, tree_SearchType0, (byte) (-17), bINBoundary0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // searchSubTree passed key and left/right search
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test074()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[5];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.NORMAL;
      BINBoundary bINBoundary0 = new BINBoundary();
      tree0.searchSubTree((IN) null, byteArray0, tree_SearchType0, 0L, bINBoundary0, true);
      //  // Unstable assertion: assertEquals(265L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test075()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      LN lN0 = new LN();
      boolean boolean0 = tree0.getParentBINForChildLN(treeLocation0, (byte[]) null, (byte[]) null, lN0, false, false, false, false);
      assertFalse(boolean0);
  }

  @Test
  public void test076()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[7];
      DatabaseId databaseId0 = new DatabaseId();
      NameLN nameLN0 = new NameLN(databaseId0);
      try { 
        tree0.getParentBINForChildLN((TreeLocation) null, byteArray0, byteArray0, nameLN0, false, true, false, false);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // 
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test077()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        tree0.hook686(false, false, byteArray0, (IN) null, (IN) null, dIN0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getParentNode passed null
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test078()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getLastNode((DIN) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getLastNode passed null root
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test080()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getFirstNode((DIN) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getFirstNode passed null root
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test081()  throws Throwable  {
      Tree tree0 = new Tree();
      long long0 = tree0.getRootLsn();
      assertEquals((-1L), long0);
  }

  @Test
  public void test083()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      Level level0 = Level.CONFIG;
      DupCountLN dupCountLN0 = new DupCountLN((int) (byte)30);
      Tree.Tree_traceInsert tree_Tree_traceInsert0 = new Tree.Tree_traceInsert(tree0, level0, (EnvironmentImpl) null, (BIN) null, dupCountLN0, (-115), (-264));
      //  // Unstable assertion: assertEquals(176L, dupCountLN0.getLastId());
      //  // Unstable assertion: assertEquals(175L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test084()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[7];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, 2048L, false);
      tree_Tree_searchSplitsAllowed0.hook721();
      tree_Tree_searchSplitsAllowed0.hook721();
  }

  @Test
  public void test085()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[16];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, (byte) (-54), false);
      tree_Tree_searchSplitsAllowed0.hook719();
  }

  @Test
  public void test086()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[0];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, 0, false);
      // Undeclared exception!
      try { 
        tree_Tree_searchSplitsAllowed0.hook718();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_searchSplitsAllowed", e);
      }
  }

  @Test
  public void test087()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[8];
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, dIN0, byteArray0);
      tree_Tree_forceSplit0.isRootLatched = true;
      tree_Tree_forceSplit0.hook726();
  }

  @Test
  public void test088()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, (IN) null, byteArray0);
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.hook725();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test089()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[7];
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, dIN0, byteArray0);
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.hook724();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test090()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, dIN0, (byte[]) null);
      try { 
        tree_Tree_forceSplit0.execute();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test091()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.validateDelete(250);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test092()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      TreeLocation treeLocation0 = new TreeLocation();
      // Undeclared exception!
      try { 
        tree0.hook731(treeLocation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test093()  throws Throwable  {
      DIN dIN0 = new DIN();
      Tree tree0 = new Tree();
      try { 
        tree0.hook705(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test095()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook740((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test097()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setSearchHook((TestHook) null);
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test098()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[0];
      NameLN nameLN0 = new NameLN();
      tree0.makeRootChildReference(nameLN0, byteArray0, 0L);
      //  // Unstable assertion: assertEquals(123L, nameLN0.getLastId());
      //  // Unstable assertion: assertEquals(123L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test099()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook748();
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test100()  throws Throwable  {
      Tree tree0 = new Tree();
      MapLN mapLN0 = new MapLN();
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        tree0.hook659(mapLN0, (-1022L), dBIN0, 1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test102()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook734(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test104()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      DIN dIN0 = new DIN();
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      // Undeclared exception!
      try { 
        tree0.hook685(treeLocation0, (byte[]) null, dIN0, fileSummaryLN0, true, true, true, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test105()  throws Throwable  {
      Tree tree0 = new Tree();
      try { 
        tree0.hook693((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test106()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      DBIN dBIN0 = new DBIN();
      tree0.hook750(dBIN0);
      //  // Unstable assertion: assertEquals(115L, dBIN0.getLastId());
      //  // Unstable assertion: assertEquals(115L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test107()  throws Throwable  {
      Tree tree0 = new Tree();
      ChildReference childReference0 = new ChildReference((Node) null, (byte[]) null, (-1L), (byte)14);
      tree0.setRoot(childReference0, true);
      assertFalse(childReference0.logEntryIsTransactional());
  }

  @Test
  public void test108()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook712(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test109()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook751();
      try { 
        tree0.withRootLatchedExclusive((WithRootLatched) null);
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // RootLatch already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5SharedLatchImpl", e);
      }
  }

  @Test
  public void test112()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook744(dIN0);
      // Undeclared exception!
      try { 
        tree0.getFirstNode(dIN0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.tree.DIN cannot be cast to com.sleepycat.je.tree.DBIN
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test113()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      tree0.hook709(dBIN0);
      //  // Unstable assertion: assertEquals(104L, dBIN0.getGeneration());
  }

  @Test
  public void test114()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook739((IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test115()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = null;
      try {
        tree0 = new Tree(databaseImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test116()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook752();
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test117()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook743((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test118()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook747(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test119()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook700(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test120()  throws Throwable  {
      Tree tree0 = new Tree();
      try { 
        tree0.hook692((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test122()  throws Throwable  {
      Tree tree0 = new Tree();
      long long0 = tree0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test123()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.dump();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test124()  throws Throwable  {
      Tree tree0 = new Tree();
      ArrayList<Tree> arrayList0 = new ArrayList<Tree>();
      tree0.hook697(arrayList0);
      assertTrue(arrayList0.isEmpty());
  }

  @Test
  public void test125()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[4];
      DIN dIN0 = new DIN();
      try { 
        tree0.hook674(byteArray0, byteArray0, dIN0, dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test126()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setCkptHook((TestHook) null);
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test127()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.withRootLatchedShared((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test128()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook715(38);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test129()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        tree0.hook660((LN) null, 0L, dBIN0, 38);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test130()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook749();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test131()  throws Throwable  {
      Tree tree0 = new Tree();
      boolean boolean0 = tree0.logEntryIsTransactional();
      assertFalse(boolean0);
  }

  @Test
  public void test132()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook745((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test133()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[4];
      tree0.hook707(dIN0);
      Tree.SearchType tree_SearchType0 = Tree.SearchType.NORMAL;
      BINBoundary bINBoundary0 = new BINBoundary();
      tree0.searchSubTree(dIN0, byteArray0, tree_SearchType0, 2444L, bINBoundary0, true);
      //  // Unstable assertion: assertTrue(bINBoundary0.isFirstBin);
      //  // Unstable assertion: assertEquals(78L, dIN0.getGeneration());
  }

  @Test
  public void test134()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setTreeStatsAccumulator((TreeWalkerStatsAccumulator) null);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test135()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[0];
      TreeLocation treeLocation0 = new TreeLocation();
      tree0.hook683(treeLocation0, byteArray0, treeLocation0.lnKey, (LN) null, false, false, false, false, false, false, (Node) null);
      //  // Unstable assertion: assertEquals(34L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test136()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook710(dIN0);
      //  // Unstable assertion: assertEquals(74L, dIN0.getGeneration());
  }

  @Test
  public void test137()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook746((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test138()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.getDatabase();
      //  // Unstable assertion: assertEquals(30L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test139()  throws Throwable  {
      Tree tree0 = new Tree();
      ArrayList<IN> arrayList0 = new ArrayList<IN>();
      tree0.hook676(arrayList0);
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test140()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.getTreeStats();
      //  // Unstable assertion: assertEquals(26L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test141()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setWaitHook((TestHook) null);
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test143()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook671((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test144()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.getLastNode();
      //  // Unstable assertion: assertEquals(5L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test145()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook742(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test146()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook681(dIN0);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test147()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[1];
      IN iN0 = tree0.searchSplitsAllowed(byteArray0, (byte)35, true);
      assertNull(iN0);
  }

  @Test
  public void test148()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook738(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test149()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, (byte)1, false);
      // Undeclared exception!
      try { 
        tree_Tree_searchSplitsAllowed0.hook720();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test150()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook753();
      assertFalse(tree0.logEntryIsTransactional());
  }
}
