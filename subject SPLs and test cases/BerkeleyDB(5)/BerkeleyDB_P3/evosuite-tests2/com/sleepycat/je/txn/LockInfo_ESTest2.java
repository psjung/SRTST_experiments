/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 02:16:41 KST 2017
 */

package com.sleepycat.je.txn;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class LockInfo_ESTest2 extends LockInfo_ESTest_scaffolding2 {

  @Test
  public void test0()  throws Throwable  {
      LockInfo lockInfo0 = new LockInfo((Locker) null, (LockType) null);
      LockType lockType0 = lockInfo0.getLockType();
      assertNull(lockType0);
  }

  @Test
  public void test1()  throws Throwable  {
      LockType lockType0 = LockType.RESTART;
      LockInfo lockInfo0 = new LockInfo((Locker) null, lockType0);
      LockType lockType1 = lockInfo0.getLockType();
      assertFalse(lockType1.isWriteLock());
  }

  @Test
  public void test2()  throws Throwable  {
      LockType lockType0 = LockType.RANGE_READ;
      LockInfo lockInfo0 = new LockInfo((Locker) null, lockType0);
      lockInfo0.toString();
      lockInfo0.setLocker((Locker) null);
      lockInfo0.getLocker();
      //  // Unstable assertion: assertFalse(lockInfo0.getDeadlockStackTrace());
      
      LockInfo.setDeadlockStackTrace(true);
      lockInfo0.toString();
      LockType lockType1 = LockType.RANGE_READ;
      lockType1.getUpgrade(lockType0);
      lockType0.getUpgrade(lockType1);
      lockInfo0.dump();
      lockInfo0.dump();
      lockInfo0.clone();
      lockInfo0.setLocker((Locker) null);
      lockInfo0.getLocker();
      LockInfo lockInfo1 = new LockInfo((Locker) null, lockType0);
      LockInfo.setDeadlockStackTrace(false);
      LockInfo.setDeadlockStackTrace(true);
      lockInfo1.setLocker((Locker) null);
      lockInfo0.setLocker((Locker) null);
      LockInfo.setDeadlockStackTrace(true);
      lockInfo1.setLockType(lockType0);
      LockInfo lockInfo2 = new LockInfo((Locker) null, lockType1);
      lockInfo1.setLockType(lockType1);
      LockType lockType2 = LockType.READ;
      LockInfo lockInfo3 = new LockInfo((Locker) null, lockType2);
      lockInfo3.setLockType(lockType1);
      boolean boolean0 = LockInfo.getDeadlockStackTrace();
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      Txn txn0 = new Txn();
      LockInfo lockInfo0 = new LockInfo((Locker) txn0, (LockType) null);
      Txn txn1 = (Txn)lockInfo0.getLocker();
      assertEquals(0L, txn1.getId());
  }

  @Test
  public void test4()  throws Throwable  {
      boolean boolean0 = LockInfo.getDeadlockStackTrace();
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      LockType lockType0 = LockType.RANGE_WRITE;
      LockInfo lockInfo0 = new LockInfo((Locker) null, lockType0);
      LockType lockType1 = lockInfo0.getLockType();
      assertSame(lockType0, lockType1);
  }
}
