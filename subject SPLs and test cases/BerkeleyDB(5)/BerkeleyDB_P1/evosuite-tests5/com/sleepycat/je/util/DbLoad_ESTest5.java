/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 12:19:35 KST 2017
 */

package com.sleepycat.je.util;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.fail;

import java.io.BufferedReader;
import java.io.CharArrayReader;
import java.io.FileDescriptor;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.Reader;
import java.nio.charset.Charset;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.bind.tuple.TupleInput;
import com.sleepycat.bind.tuple.TupleOutput;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.Environment;
import com.sleepycat.je.log.LogException;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class DbLoad_ESTest5 extends DbLoad_ESTest_scaffolding5 {

  @Test
  public void test00()  throws Throwable  {
      DbLoad dbLoad0 = new DbLoad();
      dbLoad0.setProgressInterval((-3440L));
      // Undeclared exception!
      try { 
        dbLoad0.load();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.util.DbLoad", e);
      }
  }

  @Test
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader((InputStream) tupleInput0, (Charset) mS949_0);
      LineNumberReader lineNumberReader0 = null;
      try {
        lineNumberReader0 = new LineNumberReader((Reader) inputStreamReader0, (-924));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         assertThrownBy("java.io.BufferedReader", e);
      }
  }

  @Test
  public void test02()  throws Throwable  {
      DbLoad dbLoad0 = new DbLoad();
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        DbLoad.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.util.DbLoad", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-h";
      stringArray0[1] = "";
      stringArray0[2] = "-h";
      stringArray0[3] = "ufD'l>~Xl$3!442{q";
      try { 
        DbLoad.main(stringArray0);
        fail("Expecting exception: LogException");
      
      } catch(LogException e) {
         //
         // Environment home ufD'l>~Xl$3!442{q doesn't exist
         //
         assertThrownBy("com.sleepycat.je.log.FileManager", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      DbLoad dbLoad0 = new DbLoad();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileReader fileReader0 = new FileReader(fileDescriptor0);
      BufferedReader bufferedReader0 = new BufferedReader((Reader) fileReader0, 1816);
      dbLoad0.setInputReader(bufferedReader0);
      try { 
        dbLoad0.load();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream Closed
         //
         assertThrownBy("java.io.FileInputStream", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      DbLoad dbLoad0 = new DbLoad();
      dbLoad0.setIgnoreUnknownConfig(true);
      char[] charArray0 = new char[9];
      charArray0[7] = '=';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader((Reader) charArrayReader0, 1111);
      dbLoad0.setInputReader(lineNumberReader0);
      // Undeclared exception!
      try { 
        dbLoad0.load();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must supply a database name if -l not supplied.
         //
         assertThrownBy("com.sleepycat.je.util.DbLoad", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          String[] stringArray0 = new String[5];
          stringArray0[0] = "HmRd#{;; mU3bFSzz@J";
          stringArray0[2] = "NW";
          stringArray0[1] = "-c";
          // Undeclared exception!
          try { 
            DbLoad.main(stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"exitVM.-1\")
             // java.lang.Thread.getStackTrace(Thread.java:1552)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
             // java.lang.SecurityManager.checkExit(SecurityManager.java:761)
             // java.lang.Runtime.exit(Runtime.java:107)
             // java.lang.System.exit(System.java:971)
             // com.sleepycat.je.util.DbLoad.printUsage(DbLoad.java:78)
             // com.sleepycat.je.util.DbLoad.parseArgs(DbLoad.java:140)
             // com.sleepycat.je.util.DbLoad.main(DbLoad.java:64)
             // sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:497)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:261)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:224)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:306)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:212)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
             // java.lang.Thread.run(Thread.java:745)
             //
             assertThrownBy("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test
  public void test07()  throws Throwable  {
      DbLoad dbLoad0 = new DbLoad();
      char[] charArray0 = new char[9];
      charArray0[8] = '=';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader((Reader) charArrayReader0, 1111);
      dbLoad0.setInputReader(lineNumberReader0);
      // Undeclared exception!
      try { 
        dbLoad0.load();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // '\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000=' is not understood.
         //
         assertThrownBy("com.sleepycat.je.util.DbLoad", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      DbLoad dbLoad0 = new DbLoad();
      byte[] byteArray0 = new byte[4];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader((InputStream) tupleInput0, (Charset) mS949_0);
      LineNumberReader lineNumberReader0 = new LineNumberReader((Reader) inputStreamReader0, 2404);
      dbLoad0.setInputReader(lineNumberReader0);
      dbLoad0.setDbName("usage: ");
      // Undeclared exception!
      try { 
        dbLoad0.load();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.util.DbLoad", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      DbLoad dbLoad0 = new DbLoad();
      dbLoad0.setTextFileMode(true);
      // Undeclared exception!
      try { 
        dbLoad0.load();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must supply a database name if -l not supplied.
         //
         assertThrownBy("com.sleepycat.je.util.DbLoad", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-h";
      stringArray0[1] = "r ?m#lqW|GbA}L";
      stringArray0[2] = "NfB'osX>l3`ZLcV8";
      try { 
        DbLoad.main(stringArray0);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // java.io.IOException: Invalid argument
         //
         assertThrownBy("com.sleepycat.je.dbi.DbEnvPool", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          String[] stringArray0 = new String[5];
          stringArray0[0] = "HmRd#{;; mU3bFSzz@J";
          stringArray0[1] = "jMV";
          stringArray0[2] = "NW";
          stringArray0[3] = "No \"DATA=END\"";
          stringArray0[4] = "-c";
          // Undeclared exception!
          try { 
            DbLoad.main(stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"exitVM.-1\")
             // java.lang.Thread.getStackTrace(Thread.java:1552)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
             // java.lang.SecurityManager.checkExit(SecurityManager.java:761)
             // java.lang.Runtime.exit(Runtime.java:107)
             // java.lang.System.exit(System.java:971)
             // com.sleepycat.je.util.DbLoad.printUsage(DbLoad.java:78)
             // com.sleepycat.je.util.DbLoad.parseArgs(DbLoad.java:144)
             // com.sleepycat.je.util.DbLoad.main(DbLoad.java:64)
             // sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:497)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:261)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:224)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:306)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:212)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
             // java.lang.Thread.run(Thread.java:745)
             //
             assertThrownBy("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test
  public void test12()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          String[] stringArray0 = new String[6];
          stringArray0[0] = "dupsort";
          stringArray0[1] = "a";
          stringArray0[2] = "-s";
          stringArray0[4] = "]_zpB+}X*e6<7*{";
          stringArray0[5] = "-s";
          // Undeclared exception!
          try { 
            DbLoad.main(stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"exitVM.-1\")
             // java.lang.Thread.getStackTrace(Thread.java:1552)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
             // java.lang.SecurityManager.checkExit(SecurityManager.java:761)
             // java.lang.Runtime.exit(Runtime.java:107)
             // java.lang.System.exit(System.java:971)
             // com.sleepycat.je.util.DbLoad.printUsage(DbLoad.java:78)
             // com.sleepycat.je.util.DbLoad.parseArgs(DbLoad.java:131)
             // com.sleepycat.je.util.DbLoad.main(DbLoad.java:64)
             // sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:497)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:261)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:224)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:306)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:212)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
             // java.lang.Thread.run(Thread.java:745)
             //
             assertThrownBy("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test
  public void test13()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          String[] stringArray0 = new String[4];
          stringArray0[0] = "-h";
          stringArray0[1] = "";
          stringArray0[2] = "B ^a";
          stringArray0[3] = "-h";
          // Undeclared exception!
          try { 
            DbLoad.main(stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"exitVM.-1\")
             // java.lang.Thread.getStackTrace(Thread.java:1552)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
             // java.lang.SecurityManager.checkExit(SecurityManager.java:761)
             // java.lang.Runtime.exit(Runtime.java:107)
             // java.lang.System.exit(System.java:971)
             // com.sleepycat.je.util.DbLoad.printUsage(DbLoad.java:78)
             // com.sleepycat.je.util.DbLoad.parseArgs(DbLoad.java:123)
             // com.sleepycat.je.util.DbLoad.main(DbLoad.java:64)
             // sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:497)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:261)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:224)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:306)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:212)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
             // java.lang.Thread.run(Thread.java:745)
             //
             assertThrownBy("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test
  public void test14()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          String[] stringArray0 = new String[6];
          stringArray0[0] = "X@";
          stringArray0[1] = "k0~(O'#ln";
          stringArray0[2] = "dupsort";
          stringArray0[3] = "-f";
          stringArray0[5] = "-f";
          // Undeclared exception!
          try { 
            DbLoad.main(stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"exitVM.-1\")
             // java.lang.Thread.getStackTrace(Thread.java:1552)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
             // java.lang.SecurityManager.checkExit(SecurityManager.java:761)
             // java.lang.Runtime.exit(Runtime.java:107)
             // java.lang.System.exit(System.java:971)
             // com.sleepycat.je.util.DbLoad.printUsage(DbLoad.java:78)
             // com.sleepycat.je.util.DbLoad.parseArgs(DbLoad.java:115)
             // com.sleepycat.je.util.DbLoad.main(DbLoad.java:64)
             // sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:497)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:261)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:224)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:306)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:212)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
             // java.lang.Thread.run(Thread.java:745)
             //
             assertThrownBy("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test
  public void test15()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          String[] stringArray0 = new String[4];
          stringArray0[0] = "bWbsA-jcK";
          stringArray0[1] = "-V";
          // Undeclared exception!
          try { 
            DbLoad.main(stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"exitVM.0\")
             // java.lang.Thread.getStackTrace(Thread.java:1552)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
             // java.lang.SecurityManager.checkExit(SecurityManager.java:761)
             // java.lang.Runtime.exit(Runtime.java:107)
             // java.lang.System.exit(System.java:971)
             // com.sleepycat.je.util.DbLoad.parseArgs(DbLoad.java:108)
             // com.sleepycat.je.util.DbLoad.main(DbLoad.java:64)
             // sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:497)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:261)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:224)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:306)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:212)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
             // java.lang.Thread.run(Thread.java:745)
             //
             assertThrownBy("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test
  public void test16()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          String[] stringArray0 = new String[4];
          stringArray0[0] = "x\"S";
          stringArray0[1] = "-I";
          stringArray0[2] = "KC>qHQssL'%PH";
          stringArray0[3] = "-T";
          // Undeclared exception!
          try { 
            DbLoad.main(stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"exitVM.-1\")
             // java.lang.Thread.getStackTrace(Thread.java:1552)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
             // java.lang.SecurityManager.checkExit(SecurityManager.java:761)
             // java.lang.Runtime.exit(Runtime.java:107)
             // java.lang.System.exit(System.java:971)
             // com.sleepycat.je.util.DbLoad.printUsage(DbLoad.java:78)
             // com.sleepycat.je.util.DbLoad.parseArgs(DbLoad.java:152)
             // com.sleepycat.je.util.DbLoad.main(DbLoad.java:64)
             // sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:497)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:261)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:224)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:306)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:212)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
             // java.lang.Thread.run(Thread.java:745)
             //
             assertThrownBy("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "oZQ";
      stringArray0[1] = "-n";
      // Undeclared exception!
      try { 
        DbLoad.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.util.DbLoad", e);
      }
  }

  @Test
  public void test18()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          String[] stringArray0 = new String[9];
          stringArray0[0] = "-h";
          stringArray0[1] = "zt/pys";
          stringArray0[2] = " rKsu";
          stringArray0[3] = "&P?;DQeTb3GyCM?Jf";
          stringArray0[4] = "-v";
          stringArray0[5] = "nCommits=";
          stringArray0[6] = "bWbsA-jcK";
          stringArray0[7] = "G,}brh";
          stringArray0[8] = "n:(7fqGM[>>Dh";
          // Undeclared exception!
          try { 
            DbLoad.main(stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"exitVM.-1\")
             // java.lang.Thread.getStackTrace(Thread.java:1552)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
             // java.lang.SecurityManager.checkExit(SecurityManager.java:761)
             // java.lang.Runtime.exit(Runtime.java:107)
             // java.lang.System.exit(System.java:971)
             // com.sleepycat.je.util.DbLoad.printUsage(DbLoad.java:78)
             // com.sleepycat.je.util.DbLoad.parseArgs(DbLoad.java:159)
             // com.sleepycat.je.util.DbLoad.main(DbLoad.java:64)
             // sun.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:497)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:261)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:224)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:306)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:212)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
             // java.lang.Thread.run(Thread.java:745)
             //
             assertThrownBy("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test
  public void test19()  throws Throwable  {
      DbLoad dbLoad0 = new DbLoad();
      dbLoad0.setEnv((Environment) null);
  }

  @Test
  public void test20()  throws Throwable  {
      DbLoad dbLoad0 = new DbLoad();
      dbLoad0.setTotalLoadBytes(927L);
  }

  @Test
  public void test21()  throws Throwable  {
      DbLoad dbLoad0 = new DbLoad();
      dbLoad0.hook835();
  }

  @Test
  public void test22()  throws Throwable  {
      DbLoad dbLoad0 = new DbLoad();
      dbLoad0.setNoOverwrite(false);
  }

  @Test
  public void test23()  throws Throwable  {
      DbLoad dbLoad0 = new DbLoad();
      dbLoad0.setProgressInterval(2L);
      // Undeclared exception!
      try { 
        dbLoad0.load();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.util.DbLoad", e);
      }
  }
}
