/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 08:59:54 KST 2017
 */

package com.sleepycat.bind.tuple;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseEntry;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class TupleBinding_ESTest3 extends TupleBinding_ESTest_scaffolding3 {

  @Test
  public void test00()  throws Throwable  {
      Class<ByteBinding> class0 = ByteBinding.class;
      TupleBinding tupleBinding0 = TupleBinding.getPrimitiveBinding(class0);
      assertNull(tupleBinding0);
  }

  @Test
  public void test01()  throws Throwable  {
      Class<ByteBinding> class0 = ByteBinding.class;
      LongBinding longBinding0 = new LongBinding();
      FloatBinding floatBinding0 = new FloatBinding();
      TupleOutput tupleOutput0 = floatBinding0.getTupleOutput(class0);
      Short short0 = new Short((short) (-1255));
      longBinding0.objectToEntry((Object) short0, tupleOutput0);
      assertEquals(0, tupleOutput0.getBufferOffset());
  }

  @Test
  public void test02()  throws Throwable  {
      LongBinding longBinding0 = new LongBinding();
      byte[] byteArray0 = new byte[9];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeDouble(0.0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      Long long0 = (Long)longBinding0.entryToObject(tupleInput0);
      assertEquals((-9223372036854775808L), (long)long0);
  }

  @Test
  public void test03()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      byte[] byteArray0 = new byte[3];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, 0, (-183));
      // Undeclared exception!
      try { 
        shortBinding0.objectToEntry((Object) null, databaseEntry0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.ShortBinding", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      LongBinding longBinding0 = new LongBinding();
      BooleanBinding booleanBinding0 = new BooleanBinding();
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      // Undeclared exception!
      try { 
        longBinding0.objectToEntry((Object) booleanBinding0, databaseEntry0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.bind.tuple.BooleanBinding cannot be cast to java.lang.Number
         //
         assertThrownBy("com.sleepycat.bind.tuple.LongBinding", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      DoubleBinding doubleBinding0 = new DoubleBinding();
      TupleOutput tupleOutput0 = TupleBase.newOutput();
      // Undeclared exception!
      try { 
        doubleBinding0.objectToEntry((Object) doubleBinding0, tupleOutput0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.bind.tuple.DoubleBinding cannot be cast to java.lang.Number
         //
         assertThrownBy("com.sleepycat.bind.tuple.DoubleBinding", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      BooleanBinding booleanBinding0 = new BooleanBinding();
      // Undeclared exception!
      try { 
        booleanBinding0.entryToObject((DatabaseEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleBase", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      // Undeclared exception!
      try { 
        shortBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      StringBinding stringBinding0 = new StringBinding();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-82);
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)0, (-93));
      // Undeclared exception!
      try { 
        stringBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      FloatBinding floatBinding0 = new FloatBinding();
      byte[] byteArray0 = new byte[6];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (-1), (int) (byte)16);
      // Undeclared exception!
      try { 
        floatBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("com.sleepycat.util.FastInputStream", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      BooleanBinding booleanBinding0 = new BooleanBinding();
      // Undeclared exception!
      try { 
        booleanBinding0.entryToObject((TupleInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.BooleanBinding", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      ByteBinding byteBinding0 = new ByteBinding();
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 1, 0);
      // Undeclared exception!
      try { 
        byteBinding0.entryToObject(tupleInput0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Class<String> class0 = String.class;
      StringBinding stringBinding0 = (StringBinding)TupleBinding.getPrimitiveBinding(class0);
      assertEquals(0, stringBinding0.getTupleBufferSize());
  }

  @Test
  public void test13()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      Long long0 = new Long((-2587L));
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      shortBinding0.objectToEntry((Object) long0, databaseEntry0);
      assertFalse(databaseEntry0.getPartial());
  }

  @Test
  public void test14()  throws Throwable  {
      LongBinding longBinding0 = new LongBinding();
      byte[] byteArray0 = new byte[9];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      Long long0 = (Long)longBinding0.entryToObject(databaseEntry0);
      assertEquals((-9223372036854775808L), (long)long0);
  }
}
