/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 14:22:32 KST 2017
 */

package com.sleepycat.je.dbi;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.nio.ByteBuffer;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class DatabaseId_ESTest4 extends DatabaseId_ESTest_scaffolding4 {

  @Test
  public void test00()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId();
      int int0 = databaseId0.getId();
      assertEquals(0, int0);
  }

  @Test
  public void test01()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId((-1));
      int int0 = databaseId0.getId();
      assertEquals((-1), int0);
  }

  @Test
  public void test02()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId(917);
      DatabaseId databaseId1 = new DatabaseId();
      boolean boolean0 = databaseId1.equals(databaseId0);
      assertFalse(databaseId0.equals((Object)databaseId1));
      assertFalse(boolean0);
      assertEquals(917, databaseId0.getId());
  }

  @Test
  public void test03()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId();
      ByteBuffer byteBuffer0 = null;
      // Undeclared exception!
      try { 
        databaseId0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId((-1));
      // Undeclared exception!
      try { 
        databaseId0.readFromLog((ByteBuffer) null, (byte) (-15));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId(2915);
      String string0 = databaseId0.toString();
      assertEquals("2915", string0);
  }

  @Test
  public void test06()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId(917);
      DatabaseId databaseId1 = new DatabaseId();
      int int0 = databaseId0.compareTo(databaseId1);
      assertEquals(1, int0);
      assertEquals("917", databaseId0.toString());
  }

  @Test
  public void test07()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId((-1));
      int int0 = databaseId0.compareTo(databaseId0);
      assertEquals(0, int0);
      assertEquals(-1, databaseId0.getId());
  }

  @Test
  public void test08()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId((-1));
      DatabaseId databaseId1 = new DatabaseId();
      int int0 = databaseId0.compareTo(databaseId1);
      assertEquals((-1), int0);
      assertEquals(-1, databaseId0.getId());
  }

  @Test
  public void test09()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId();
      // Undeclared exception!
      try { 
        databaseId0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseId", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      DatabaseId databaseId0 = new DatabaseId();
      // Undeclared exception!
      try { 
        databaseId0.compareTo(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to com.sleepycat.je.dbi.DatabaseId
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseId", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId();
      DatabaseId databaseId1 = new DatabaseId();
      boolean boolean0 = databaseId0.equals(databaseId1);
      assertTrue(boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId();
      Integer integer0 = new Integer(2113);
      boolean boolean0 = databaseId0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId();
      boolean boolean0 = databaseId0.equals(databaseId0);
      assertTrue(boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId(6);
      DatabaseId databaseId1 = new DatabaseId();
      boolean boolean0 = databaseId0.equals(databaseId1);
      assertFalse(databaseId1.equals((Object)databaseId0));
      assertEquals("6", databaseId0.toString());
      assertFalse(boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId();
      boolean boolean0 = databaseId0.logEntryIsTransactional();
      assertFalse(boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId((-1));
      databaseId0.getLogSize();
      assertEquals(-1, databaseId0.getId());
  }

  @Test
  public void test17()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId();
      // Undeclared exception!
      try { 
        databaseId0.dumpLog((StringBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseId", e);
      }
  }

  @Test
  public void test18()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId(2915);
      int int0 = databaseId0.getId();
      assertEquals(2915, int0);
  }

  @Test
  public void test19()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId(2915);
      long long0 = databaseId0.getTransactionId();
      assertEquals(0L, long0);
      assertEquals(2915, databaseId0.getId());
  }

  @Test
  public void test20()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId(6);
      byte[] byteArray0 = databaseId0.getBytes();
      assertArrayEquals(new byte[] {(byte)54}, byteArray0);
  }

  @Test
  public void test21()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId();
      databaseId0.hashCode();
  }
}
