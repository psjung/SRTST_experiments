/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 15:17:54 KST 2017
 */

package com.sleepycat.je.log;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.io.File;
import java.util.AbstractMap;
import java.util.Map;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.dbi.EnvironmentImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class StatsFileReader_ESTest4 extends StatsFileReader_ESTest_scaffolding4 {

  @Test
  public void test00()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = 0L;
      statsFileReader_CheckpointCounter0.preStartMapLNCount = (int) (byte)4;
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)4);
  }

  @Test
  public void test01()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.preStartLNCount = (-2);
      statsFileReader_CheckpointCounter0.startCkptLsn = (long) (-491);
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)4);
  }

  @Test
  public void test02()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.postStartLNCount = (-491);
      statsFileReader_CheckpointCounter0.startCkptLsn = 0L;
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)4);
  }

  @Test
  public void test03()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.preStartMapLNCount = 1173;
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)4);
  }

  @Test
  public void test04()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = (-2197L);
      statsFileReader_CheckpointCounter0.postStartLNCount = 1789569706;
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)2);
  }

  @Test
  public void test05()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = 1417L;
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)2);
  }

  @Test
  public void test06()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = (long) (byte)1;
      statsFileReader_CheckpointCounter0.postStartLNTxnCount = 248;
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)1);
  }

  @Test
  public void test07()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)0);
  }

  @Test
  public void test08()  throws Throwable  {
      StatsFileReader.LogEntryTypeComparator statsFileReader_LogEntryTypeComparator0 = new StatsFileReader.LogEntryTypeComparator();
      LogEntryType logEntryType0 = LogEntryType.LOG_MAPLN;
      LogEntryType logEntryType1 = LogEntryType.LOG_CKPT_START;
      int int0 = statsFileReader_LogEntryTypeComparator0.compare(logEntryType0, logEntryType1);
      assertEquals((-15), int0);
  }

  @Test
  public void test09()  throws Throwable  {
      StatsFileReader statsFileReader0 = null;
      try {
        statsFileReader0 = new StatsFileReader((EnvironmentImpl) null, 0, (-652L), (long) 0, "", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.FileReader", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)21);
  }

  @Test
  public void test11()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.startCkptLsn = (-1241L);
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)1);
  }

  @Test
  public void test12()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)2);
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)2);
  }

  @Test
  public void test13()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      // Undeclared exception!
      try { 
        statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)19);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.StatsFileReader$CheckpointCounter", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)1);
      statsFileReader_CheckpointCounter0.increment((FileReader) null, (byte)1);
  }

  @Test
  public void test15()  throws Throwable  {
      StatsFileReader.LogEntryTypeComparator statsFileReader_LogEntryTypeComparator0 = new StatsFileReader.LogEntryTypeComparator();
      StatsFileReader.EntryInfo statsFileReader_EntryInfo0 = new StatsFileReader.EntryInfo();
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      AbstractMap.SimpleEntry<StatsFileReader.EntryInfo, StatsFileReader.EntryInfo> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<StatsFileReader.EntryInfo, StatsFileReader.EntryInfo>(statsFileReader_EntryInfo0, statsFileReader_EntryInfo0);
      AbstractMap.SimpleEntry<StatsFileReader.EntryInfo, StatsFileReader.EntryInfo> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<StatsFileReader.EntryInfo, StatsFileReader.EntryInfo>((Map.Entry<? extends StatsFileReader.EntryInfo, ? extends StatsFileReader.EntryInfo>) abstractMap_SimpleEntry0);
      // Undeclared exception!
      try { 
        statsFileReader_LogEntryTypeComparator0.compare(statsFileReader_CheckpointCounter0.preStartMapLNCount, abstractMap_SimpleEntry1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // non LogEntryType passed to LogEntryType.compare
         //
         assertThrownBy("com.sleepycat.je.log.StatsFileReader$LogEntryTypeComparator", e);
      }
  }

  @Test
  public void test16()  throws Throwable  {
      StatsFileReader.LogEntryTypeComparator statsFileReader_LogEntryTypeComparator0 = new StatsFileReader.LogEntryTypeComparator();
      int int0 = statsFileReader_LogEntryTypeComparator0.compare((Object) null, 0);
      assertEquals((-1), int0);
  }

  @Test
  public void test17()  throws Throwable  {
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      StatsFileReader.LogEntryTypeComparator statsFileReader_LogEntryTypeComparator0 = new StatsFileReader.LogEntryTypeComparator();
      AbstractMap.SimpleEntry<Integer, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Integer, Object>((Integer) 0, (Object) statsFileReader_CheckpointCounter0);
      int int0 = statsFileReader_LogEntryTypeComparator0.compare(abstractMap_SimpleEntry0, (Object) null);
      assertEquals(1, int0);
  }

  @Test
  public void test18()  throws Throwable  {
      StatsFileReader.LogEntryTypeComparator statsFileReader_LogEntryTypeComparator0 = new StatsFileReader.LogEntryTypeComparator();
      LogEntryType logEntryType0 = LogEntryType.LOG_MAPLN;
      statsFileReader_LogEntryTypeComparator0.compare(logEntryType0, logEntryType0);
      StatsFileReader.CheckpointCounter statsFileReader_CheckpointCounter0 = new StatsFileReader.CheckpointCounter();
      File file0 = null;
      EnvironmentConfig environmentConfig0 = null;
      EnvironmentImpl environmentImpl0 = null;
      try {
        environmentImpl0 = new EnvironmentImpl(file0, environmentConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbConfigManager", e);
      }
  }
}
