/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 13:21:12 KST 2017
 */

package com.sleepycat.bind.tuple;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class TupleInput_ESTest4 extends TupleInput_ESTest_scaffolding4 {

  @Test
  public void test00()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      tupleOutput0.writeInt((-262));
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      long long0 = tupleInput0.readUnsignedInt();
      assertEquals(2147483386L, long0);
  }

  @Test
  public void test01()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeUnsignedByte(0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      int int0 = tupleInput0.readUnsignedByte();
      assertEquals(0, int0);
  }

  @Test
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-103);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      short short0 = tupleInput0.readShort();
      assertEquals((short)6400, short0);
  }

  @Test
  public void test03()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeUnsignedByte(0);
      TupleOutput tupleOutput2 = tupleOutput1.writeByte(0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput2);
      short short0 = tupleInput0.readShort();
      assertEquals((short) (-32640), short0);
  }

  @Test
  public void test04()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeChar(48);
      TupleOutput tupleOutput2 = tupleOutput1.writeByte(48);
      TupleOutput tupleOutput3 = tupleOutput2.writeDouble(48);
      TupleInput tupleInput0 = new TupleInput(tupleOutput3);
      char char0 = tupleInput0.readChar();
      assertEquals('0', char0);
      
      int int0 = tupleInput0.readInt();
      assertEquals(809519104, int0);
  }

  @Test
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)93;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      float float0 = tupleInput0.readFloat();
      assertEquals(5.7646075E17F, float0, 0.01F);
  }

  @Test
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      tupleOutput0.writeDouble((-1871.553380738133));
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      float float0 = tupleInput0.readFloat();
      assertEquals((-4.913844F), float0, 0.01F);
  }

  @Test
  public void test07()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeByte(1499);
      TupleOutput tupleOutput2 = tupleOutput1.writeLong((-9223372036854775808L));
      TupleInput tupleInput0 = new TupleInput(tupleOutput2);
      double double0 = tupleInput0.readDouble();
      assertEquals(2.218135755296652E130, double0, 0.01D);
  }

  @Test
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      char char0 = tupleInput0.readChar();
      assertEquals('\u0000', char0);
  }

  @Test
  public void test09()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      tupleOutput0.writeByte(24);
      tupleOutput0.writeBoolean(false);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      char char0 = tupleInput0.readChar();
      assertEquals('\u9800', char0);
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleOutput tupleOutput1 = tupleOutput0.writeInt((byte)0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      byte byte0 = tupleInput0.readByte();
      assertEquals((byte)0, byte0);
  }

  @Test
  public void test11()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeDouble(730.702847);
      TupleOutput tupleOutput2 = tupleOutput1.writeUnsignedShort(228);
      TupleInput tupleInput0 = new TupleInput(tupleOutput2);
      tupleInput0.readUnsignedShort();
      char[] charArray0 = new char[7];
      tupleInput0.readBytes(charArray0);
      assertEquals(9, tupleInput0.getBufferOffset());
  }

  @Test
  public void test12()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeShort(0);
      TupleOutput tupleOutput2 = tupleOutput1.writeByte(1499);
      char[] charArray0 = new char[4];
      charArray0[1] = '\"';
      tupleOutput2.writeChars(charArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      double double0 = tupleInput0.readDouble();
      assertEquals((-4.94340139506273E-310), double0, 0.01D);
  }

  @Test
  public void test13()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeShort(0);
      char[] charArray0 = new char[4];
      charArray0[1] = '\"';
      tupleOutput0.writeChars(charArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      double double0 = tupleInput0.readDouble();
      assertEquals((-1.100889E-317), double0, 0.01D);
  }

  @Test
  public void test14()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeShort(0);
      TupleOutput tupleOutput2 = tupleOutput1.writeByte(1499);
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      TupleOutput tupleOutput3 = tupleOutput2.writeChars(charArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput3);
      double double0 = tupleInput0.readDouble();
      assertEquals((-4.94347765385644E-310), double0, 0.01D);
  }

  @Test
  public void test15()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeChar(48);
      TupleOutput tupleOutput2 = tupleOutput1.writeDouble(48);
      TupleInput tupleInput0 = new TupleInput(tupleOutput2);
      int int0 = tupleInput0.readInt();
      assertEquals((-2144321464), int0);
  }

  @Test
  public void test16()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeChar(48);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      try { 
        tupleInput0.readInt();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test17()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeFloat((-2804.893F));
      TupleOutput tupleOutput2 = tupleOutput1.writeUnsignedInt(1L);
      TupleInput tupleInput0 = new TupleInput(tupleOutput2);
      long long0 = tupleInput0.readLong();
      assertEquals(4985289392256974849L, long0);
  }

  @Test
  public void test18()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeInt(0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      int int0 = tupleInput0.readInt();
      assertEquals(0, int0);
  }

  @Test
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-21);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.read();
      byte byte0 = tupleInput0.readByte();
      assertEquals((byte)107, byte0);
  }

  @Test
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-51);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeLong(739L);
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      short short0 = tupleInput0.readShort();
      assertEquals((short)0, short0);
  }

  @Test
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)0, 210);
      tupleInput0.readString((int) (byte)0);
      assertEquals(0, tupleInput0.getBufferOffset());
  }

  @Test
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 4, (int) (byte)82);
      try { 
        tupleInput0.readUnsignedShort();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 11, (int) (byte)102);
      try { 
        tupleInput0.readUnsignedByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)125;
      byteArray0[2] = (byte) (-64);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.readString();
      char[] charArray0 = new char[1];
      try { 
        tupleInput0.readString(charArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 24, 1577);
      char[] charArray0 = new char[8];
      try { 
        tupleInput0.readString(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 24
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test27()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      // Undeclared exception!
      try { 
        tupleInput0.readString((-685));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-41);
      TupleInput tupleInput0 = new TupleInput(byteArray0, 0, 271);
      try { 
        tupleInput0.readString(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test29()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      tupleOutput0.writeUnsignedInt((-790L));
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.read();
      tupleInput0.readByte();
      try { 
        tupleInput0.readShort();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test31()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleOutput tupleOutput1 = tupleOutput0.writeLong((-9223372036854775808L));
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      tupleInput0.readDouble();
      try { 
        tupleInput0.readLong();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 128, 282);
      try { 
        tupleInput0.readInt();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)0, 210);
      try { 
        tupleInput0.readFloat();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 0, 1644);
      try { 
        tupleInput0.readDouble();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)31, (int) (byte)31);
      // Undeclared exception!
      try { 
        tupleInput0.readChars((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      char[] charArray0 = new char[8];
      try { 
        tupleInput0.readChars(charArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      // Undeclared exception!
      try { 
        tupleInput0.readChars(2128970857);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  @Test
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      // Undeclared exception!
      try { 
        tupleInput0.readChars((-739));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readChars(14);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)0, (int) (byte)48);
      tupleInput0.readUnsignedInt();
      tupleInput0.readInt();
      try { 
        tupleInput0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test41()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      // Undeclared exception!
      try { 
        tupleInput0.readBytes((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (-29), (int) (byte)0);
      char[] charArray0 = new char[8];
      try { 
        tupleInput0.readBytes(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test43()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      // Undeclared exception!
      try { 
        tupleInput0.readBytes(2138535799);
        fail("Expecting exception: OutOfMemoryError");
      
      } catch(OutOfMemoryError e) {
         //
         // Java heap space
         //
      }
  }

  @Test
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      // Undeclared exception!
      try { 
        tupleInput0.readBytes((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)79, (int) (byte)61);
      tupleInput0.skip((-3364L));
      try { 
        tupleInput0.readBoolean();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test46()  throws Throwable  {
      TupleInput tupleInput0 = null;
      try {
        tupleInput0 = new TupleInput((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.FastInputStream", e);
      }
  }

  @Test
  public void test47()  throws Throwable  {
      TupleInput tupleInput0 = null;
      try {
        tupleInput0 = new TupleInput((TupleOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.readFast();
      tupleInput0.readUnsignedShort();
      try { 
        tupleInput0.readUnsignedInt();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readUnsignedShort();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 8, 8);
      try { 
        tupleInput0.readUnsignedByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      char[] charArray0 = new char[0];
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      tupleInput0.readString(charArray0);
      assertEquals(0, tupleInput0.getBufferOffset());
  }

  @Test
  public void test52()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      char[] charArray0 = new char[0];
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      tupleInput0.readChars(charArray0);
      assertTrue(tupleInput0.markSupported());
  }

  @Test
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte) (-39), (int) (byte)40);
      char[] charArray0 = new char[3];
      try { 
        tupleInput0.readChars(charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      char[] charArray0 = new char[2];
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readBytes(charArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test55()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      tupleOutput0.addSize(95);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      tupleInput0.readChars(16);
      assertEquals(32, tupleInput0.getBufferOffset());
  }

  @Test
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)0, 210);
      try { 
        tupleInput0.readChars(2535);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test57()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      tupleOutput0.writeLong(739L);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readBytes(1071);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test58()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      String string0 = tupleInput0.readBytes(0);
      assertEquals("", string0);
  }

  @Test
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 48, 777);
      try { 
        tupleInput0.readBytes(1694);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 0, 32);
      tupleInput0.readDouble();
      tupleInput0.readLong();
      try { 
        tupleInput0.readUnsignedInt();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 12, 12);
      try { 
        tupleInput0.readByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test62()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      tupleOutput0.writeShort(0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      int int0 = tupleInput0.readUnsignedByte();
      assertEquals(128, int0);
  }

  @Test
  public void test63()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      tupleOutput0.writeInt((-262));
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      boolean boolean0 = tupleInput0.readBoolean();
      assertTrue(boolean0);
  }

  @Test
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.readFloat();
      tupleInput0.readUnsignedInt();
      try { 
        tupleInput0.readBoolean();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)0, 210);
      boolean boolean0 = tupleInput0.readBoolean();
      assertFalse(boolean0);
  }

  @Test
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)12;
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.readInt();
      try { 
        tupleInput0.readString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[4] = (byte) (-1);
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      tupleInput0.readInt();
      tupleInput0.readString();
      assertEquals(6, tupleInput0.getBufferOffset());
  }

  @Test
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      try { 
        tupleInput0.readString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 0, 3131);
      try { 
        tupleInput0.readShort();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TupleOutput tupleOutput0 = new TupleOutput(byteArray0);
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readFloat();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test71()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test72()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readDouble();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte) (-12), 128);
      try { 
        tupleInput0.readLong();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0, (-2844), (int) (byte)0);
      try { 
        tupleInput0.readByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test75()  throws Throwable  {
      TupleOutput tupleOutput0 = new TupleOutput();
      TupleInput tupleInput0 = new TupleInput(tupleOutput0);
      try { 
        tupleInput0.readString((int) (byte)112);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 100
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }
}
