/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 13:19:27 KST 2017
 */

package com.sleepycat.bind.tuple;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseEntry;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class TupleBinding_ESTest4 extends TupleBinding_ESTest_scaffolding4 {

  @Test
  public void test00()  throws Throwable  {
      FloatBinding floatBinding0 = new FloatBinding();
      Integer integer0 = Integer.valueOf(127);
      TupleOutput tupleOutput0 = floatBinding0.getTupleOutput(integer0);
      floatBinding0.objectToEntry((Object) integer0, tupleOutput0);
      assertEquals(4, tupleOutput0.size());
  }

  @Test
  public void test01()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      IntegerBinding integerBinding0 = (IntegerBinding)TupleBinding.getPrimitiveBinding(class0);
      byte[] byteArray0 = new byte[5];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      Integer integer0 = (Integer)integerBinding0.entryToObject(databaseEntry0);
      assertEquals(Integer.MIN_VALUE, (int)integer0);
  }

  @Test
  public void test02()  throws Throwable  {
      DoubleBinding doubleBinding0 = new DoubleBinding();
      byte[] byteArray0 = new byte[9];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      Double double0 = (Double)doubleBinding0.entryToObject(tupleInput0);
      assertEquals(0.0, (double)double0, 0.01D);
  }

  @Test
  public void test03()  throws Throwable  {
      IntegerBinding integerBinding0 = new IntegerBinding();
      byte[] byteArray0 = new byte[4];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)67, (int) (byte) (-40));
      // Undeclared exception!
      try { 
        integerBinding0.objectToEntry((Object) null, databaseEntry0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.IntegerBinding", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      IntegerBinding integerBinding0 = new IntegerBinding();
      FloatBinding floatBinding0 = new FloatBinding();
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      // Undeclared exception!
      try { 
        integerBinding0.objectToEntry((Object) floatBinding0, databaseEntry0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.bind.tuple.FloatBinding cannot be cast to java.lang.Number
         //
         assertThrownBy("com.sleepycat.bind.tuple.IntegerBinding", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      Class<Double> class0 = Double.class;
      DoubleBinding doubleBinding0 = (DoubleBinding)TupleBinding.getPrimitiveBinding(class0);
      TupleOutput tupleOutput0 = TupleBase.newOutput();
      // Undeclared exception!
      try { 
        doubleBinding0.objectToEntry((Object) null, tupleOutput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.DoubleBinding", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      CharacterBinding characterBinding0 = new CharacterBinding();
      ShortBinding shortBinding0 = new ShortBinding();
      TupleOutput tupleOutput0 = shortBinding0.getTupleOutput(shortBinding0);
      // Undeclared exception!
      try { 
        characterBinding0.objectToEntry((Object) characterBinding0, tupleOutput0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.bind.tuple.CharacterBinding cannot be cast to java.lang.Character
         //
         assertThrownBy("com.sleepycat.bind.tuple.CharacterBinding", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      LongBinding longBinding0 = new LongBinding();
      // Undeclared exception!
      try { 
        longBinding0.entryToObject((DatabaseEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleBase", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-37);
      databaseEntry0.setData(byteArray0);
      StringBinding stringBinding0 = new StringBinding();
      // Undeclared exception!
      try { 
        stringBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.UtfOps", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      ByteBinding byteBinding0 = new ByteBinding();
      byte[] byteArray0 = new byte[0];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      databaseEntry0.setSize(48);
      // Undeclared exception!
      try { 
        byteBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("com.sleepycat.util.FastInputStream", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      LongBinding longBinding0 = new LongBinding();
      TupleInput tupleInput0 = new TupleInput(byteArray0, (int) (byte)0, (int) (byte) (-72));
      // Undeclared exception!
      try { 
        longBinding0.entryToObject(tupleInput0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Class<ByteBinding> class0 = ByteBinding.class;
      TupleBinding tupleBinding0 = TupleBinding.getPrimitiveBinding(class0);
      assertNull(tupleBinding0);
  }

  @Test
  public void test12()  throws Throwable  {
      ByteBinding byteBinding0 = new ByteBinding();
      Long long0 = new Long(1484L);
      byte[] byteArray0 = new byte[6];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, 0, (-2522));
      byteBinding0.objectToEntry((Object) long0, databaseEntry0);
      assertEquals(0, byteBinding0.getTupleBufferSize());
  }

  @Test
  public void test13()  throws Throwable  {
      ByteBinding byteBinding0 = new ByteBinding();
      byte[] byteArray0 = new byte[0];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      // Undeclared exception!
      try { 
        byteBinding0.entryToObject(databaseEntry0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }
}
