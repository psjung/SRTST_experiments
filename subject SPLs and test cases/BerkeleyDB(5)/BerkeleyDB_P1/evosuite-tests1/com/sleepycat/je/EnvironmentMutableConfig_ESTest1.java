/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 18:40:27 KST 2017
 */

package com.sleepycat.je;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotSame;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.Properties;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.config.ConfigParam;
import com.sleepycat.je.dbi.EnvironmentImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class EnvironmentMutableConfig_ESTest1 extends EnvironmentMutableConfig_ESTest_scaffolding1 {

  @Test
  public void test00()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      int int0 = environmentConfig0.getNumExplicitlySetParams();
      //  // Unstable assertion: assertEquals(3, int0);
  }

  @Test
  public void test01()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      environmentMutableConfig0.getCacheSize();
      assertFalse(environmentMutableConfig0.getTxnNoSync());
      assertFalse(environmentMutableConfig0.getTxnWriteNoSync());
  }

  @Test
  public void test02()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      assertFalse(environmentMutableConfig0.getTxnNoSync());
      
      environmentMutableConfig0.setTxnNoSync(true);
      environmentMutableConfig0.cloneMutableConfig();
      assertTrue(environmentMutableConfig0.getTxnNoSync());
  }

  @Test
  public void test03()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      EnvironmentMutableConfig environmentMutableConfig1 = environmentMutableConfig0.cloneMutableConfig();
      environmentMutableConfig1.setTxnWriteNoSync(true);
      assertFalse(environmentMutableConfig0.getTxnWriteNoSync());
      assertTrue(environmentMutableConfig1.getTxnWriteNoSync());
  }

  @Test
  public void test04()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      environmentMutableConfig0.cacheSize = 2083L;
      EnvironmentMutableConfig environmentMutableConfig1 = environmentMutableConfig0.cloneMutableConfig();
      assertFalse(environmentMutableConfig1.getTxnNoSync());
      assertFalse(environmentMutableConfig1.getTxnWriteNoSync());
      assertNotSame(environmentMutableConfig1, environmentMutableConfig0);
  }

  @Test
  public void test05()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      EnvironmentConfig environmentConfig1 = environmentConfig0.cloneConfig();
      environmentConfig1.copyHandlePropsTo(environmentConfig0);
      assertNotSame(environmentConfig1, environmentConfig0);
  }

  @Test
  public void test07()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      try { 
        environmentConfig0.setConfigParam("hDw\"0bIxfwLHE", "hDw\"0bIxfwLHE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // hDw\"0bIxfwLHE is not a valid BDBJE environment configuration
         //
         assertThrownBy("com.sleepycat.je.EnvironmentConfig", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      EnvironmentConfig environmentConfig1 = (EnvironmentConfig)environmentConfig0.DEFAULT.clone();
      assertNotSame(environmentConfig1, environmentConfig0);
  }

  @Test
  public void test09()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      // Undeclared exception!
      try { 
        environmentConfig0.validateProperties((Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      // Undeclared exception!
      try { 
        environmentConfig0.setVal((ConfigParam) null, "2KP:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      // Undeclared exception!
      try { 
        environmentMutableConfig0.getVal((ConfigParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      // Undeclared exception!
      try { 
        environmentMutableConfig0.copyMutablePropsTo((EnvironmentMutableConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      // Undeclared exception!
      try { 
        environmentMutableConfig0.copyHandlePropsTo((EnvironmentMutableConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      // Undeclared exception!
      try { 
        environmentMutableConfig0.checkImmutablePropsForEquality((EnvironmentMutableConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      environmentConfig0.setTransactional(true);
      assertTrue(environmentConfig0.getTransactional());
  }

  @Test
  public void test16()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      environmentMutableConfig0.toString();
      assertFalse(environmentMutableConfig0.getTxnWriteNoSync());
      assertFalse(environmentMutableConfig0.getTxnNoSync());
  }

  @Test
  public void test22()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      try { 
        environmentMutableConfig0.setConfigParam("Lbp", "true");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lbp is not a valid BDBJE environment configuration
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test23()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      try { 
        environmentConfig0.setCachePercent(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // com.sleepycat.je.config.IntConfigParam: param je.maxMemoryPercent doesn't validate, 0 is less than min of 1
         //
         assertThrownBy("com.sleepycat.je.config.IntConfigParam", e);
      }
  }

  @Test
  public void test24()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      boolean boolean0 = environmentConfig0.getLoadPropertyFile();
      assertFalse(environmentConfig0.getTxnNoSync());
      assertTrue(boolean0);
      assertFalse(environmentConfig0.getTxnWriteNoSync());
  }

  @Test
  public void test25()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      boolean boolean0 = environmentConfig0.getTxnWriteNoSync();
      assertFalse(boolean0);
  }

  @Test
  public void test26()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      environmentConfig0.setCacheSize(1L);
      assertFalse(environmentConfig0.getTxnWriteNoSync());
      assertFalse(environmentConfig0.getTxnNoSync());
  }

  @Test
  public void test27()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      int int0 = environmentConfig0.getCachePercent();
      //  // Unstable assertion: assertEquals(60, int0);
  }

  @Test
  public void test28()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = null;
      try {
        environmentMutableConfig0 = new EnvironmentMutableConfig((Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test29()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      environmentConfig0.getCacheSize();
      int int0 = environmentConfig0.getCachePercent();
      //  // Unstable assertion: assertEquals(60, int0);
  }

  @Test
  public void test30()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      environmentConfig0.setLoadPropertyFile(true);
      //  // Unstable assertion: assertFalse(environmentConfig0.getTransactional());
  }

  @Test
  public void test31()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      environmentMutableConfig0.getNumExplicitlySetParams();
      assertFalse(environmentMutableConfig0.getTxnNoSync());
      assertFalse(environmentMutableConfig0.getTxnWriteNoSync());
  }

  @Test
  public void test34()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      // Undeclared exception!
      try { 
        environmentConfig0.fillInEnvironmentGeneratedProps((EnvironmentImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test35()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      EnvironmentConfig environmentConfig1 = (EnvironmentConfig)environmentConfig0.cloneMutableConfig();
      try { 
        environmentConfig1.checkImmutablePropsForEquality(environmentConfig0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
         //
         // je.lock.timeout is set to -1121 in the config parameter which is incompatible with the value of null in the underlying environment
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
      
      //  // Unstable assertion: assertNotSame(environmentConfig1, environmentConfig0);
  }

  @Test
  public void test36()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      environmentConfig0.toString();
      try { 
        environmentConfig0.setConfigParam("allowCreate=false\n{je.env.isLocking=false, je.maxMemory=-8, je.env.isTransactional=false, je.txn.serializableIsolation=false, je.maxMemoryPercent=56, je.env.isReadOnly=true, je.lock.timeout=98304}", "allowCreate=false\n{je.env.isLocking=false, je.maxMemory=-8, je.env.isTransactional=false, je.txn.serializableIsolation=false, je.maxMemoryPercent=56, je.env.isReadOnly=true, je.lock.timeout=98304}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // allowCreate=false
         // {je.env.isLocking=false, je.maxMemory=-8, je.env.isTransactional=false, je.txn.serializableIsolation=false, je.maxMemoryPercent=56, je.env.isReadOnly=true, je.lock.timeout=98304} is not a valid BDBJE environment configuration
         //
         assertThrownBy("com.sleepycat.je.EnvironmentConfig", e);
      }
  }
}
