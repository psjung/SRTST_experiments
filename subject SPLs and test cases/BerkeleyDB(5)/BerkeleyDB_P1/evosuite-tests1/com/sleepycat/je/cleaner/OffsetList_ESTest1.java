/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 19:07:57 KST 2017
 */

package com.sleepycat.je.cleaner;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class OffsetList_ESTest1 extends OffsetList_ESTest_scaffolding1 {

  @Test
  public void test01()  throws Throwable  {
      OffsetList.Segment offsetList_Segment0 = new OffsetList.Segment();
      OffsetList.Segment offsetList_Segment1 = offsetList_Segment0.add(901L);
      offsetList_Segment1.setNext(offsetList_Segment0);
      offsetList_Segment1.get(1);
      OffsetList.Segment offsetList_Segment2 = offsetList_Segment1.add((-5160L));
      OffsetList offsetList0 = new OffsetList();
      offsetList_Segment0.setNext(offsetList_Segment1);
      offsetList_Segment0.add((-1L));
      offsetList0.merge(offsetList0);
      offsetList0.add(901L, false);
      offsetList0.merge(offsetList0);
      offsetList0.add(1, false);
      offsetList_Segment1.setNext(offsetList_Segment2);
      offsetList_Segment1.setNext(offsetList_Segment0);
      offsetList_Segment1.add((-5160L));
      offsetList_Segment1.add((-197L));
      offsetList_Segment1.setNext(offsetList_Segment0);
      offsetList_Segment0.add(0L);
      offsetList_Segment0.setNext(offsetList_Segment1);
      OffsetList.Segment offsetList_Segment3 = offsetList_Segment1.add(0L);
      offsetList0.add(0L, false);
      offsetList0.toArray();
      offsetList0.contains((-327L));
      offsetList0.size();
      OffsetList.Segment offsetList_Segment4 = new OffsetList.Segment();
      offsetList_Segment3.size();
      offsetList_Segment3.add(0L);
  }

  @Test
  public void test02()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      OffsetList offsetList1 = new OffsetList();
      offsetList1.merge(offsetList0);
      offsetList1.add((-1253L), false);
      offsetList1.merge(offsetList0);
      offsetList0.merge(offsetList1);
      OffsetList offsetList2 = new OffsetList();
      // Undeclared exception!
      try { 
        offsetList2.merge((OffsetList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test03()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      offsetList0.add((-1206L), false);
      offsetList0.contains((-1206L));
      OffsetList.Segment offsetList_Segment0 = new OffsetList.Segment();
      offsetList_Segment0.next();
  }

  @Test
  public void test06()  throws Throwable  {
      OffsetList.Segment offsetList_Segment0 = new OffsetList.Segment();
      OffsetList.Segment offsetList_Segment1 = offsetList_Segment0.add((-433L));
      offsetList_Segment0.setNext(offsetList_Segment1);
      OffsetList.Segment offsetList_Segment2 = offsetList_Segment0.add(0L);
      OffsetList.Segment offsetList_Segment3 = offsetList_Segment2.add((-892L));
      offsetList_Segment3.setNext(offsetList_Segment2);
      offsetList_Segment2.add((-2834L));
      offsetList_Segment0.setNext(offsetList_Segment2);
      offsetList_Segment0.setNext(offsetList_Segment2);
      OffsetList.Segment offsetList_Segment4 = offsetList_Segment0.next();
      offsetList_Segment4.next();
      offsetList_Segment0.setNext(offsetList_Segment3);
      int int0 = (-2877);
      // Undeclared exception!
      try { 
        offsetList_Segment3.get((-2877));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test08()  throws Throwable  {
      OffsetList.Segment offsetList_Segment0 = new OffsetList.Segment();
      OffsetList.Segment offsetList_Segment1 = offsetList_Segment0.add((-1L));
      offsetList_Segment1.setNext(offsetList_Segment0);
      OffsetList.Segment offsetList_Segment2 = offsetList_Segment1.add(3292L);
      offsetList_Segment1.setNext(offsetList_Segment0);
      offsetList_Segment1.add((-1L));
      offsetList_Segment0.add((-1L));
      offsetList_Segment1.setNext(offsetList_Segment0);
      offsetList_Segment2.add(0L);
      OffsetList.Segment offsetList_Segment3 = new OffsetList.Segment();
      offsetList_Segment1.add((-1L));
      offsetList_Segment1.setNext(offsetList_Segment0);
      OffsetList offsetList0 = new OffsetList();
      offsetList_Segment1.add(1L);
      offsetList0.add(3292L, true);
      offsetList0.size();
      offsetList_Segment0.add((-1220L));
      offsetList_Segment0.get(1);
      offsetList_Segment2.next();
      OffsetList.Segment offsetList_Segment4 = new OffsetList.Segment();
      offsetList_Segment4.add(0L);
      // Undeclared exception!
      try { 
        offsetList_Segment2.get((-3573));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test09()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      offsetList0.add(0L, false);
      OffsetList offsetList1 = new OffsetList();
      offsetList0.merge(offsetList1);
      OffsetList offsetList2 = new OffsetList();
      offsetList1.merge(offsetList2);
      offsetList2.add(0L, true);
      offsetList1.merge(offsetList2);
      offsetList1.toArray();
      OffsetList.Segment offsetList_Segment0 = new OffsetList.Segment();
      OffsetList.Segment offsetList_Segment1 = offsetList_Segment0.add(0L);
      OffsetList.Segment offsetList_Segment2 = offsetList_Segment1.add(0L);
      OffsetList.Segment offsetList_Segment3 = offsetList_Segment1.add(1248L);
      offsetList_Segment0.setNext(offsetList_Segment3);
      OffsetList.Segment offsetList_Segment4 = offsetList_Segment3.next();
      OffsetList.Segment offsetList_Segment5 = offsetList_Segment3.add(1248L);
      offsetList_Segment4.setNext(offsetList_Segment5);
      offsetList_Segment1.setNext(offsetList_Segment4);
      OffsetList.Segment offsetList_Segment6 = offsetList_Segment0.add(1L);
      offsetList_Segment1.setNext(offsetList_Segment2);
      offsetList_Segment1.get(1);
      OffsetList offsetList3 = new OffsetList();
      OffsetList.Segment offsetList_Segment7 = new OffsetList.Segment();
      offsetList_Segment6.setNext(offsetList_Segment1);
      offsetList0.contains(2251L);
      OffsetList offsetList4 = new OffsetList();
      OffsetList.Segment offsetList_Segment8 = offsetList_Segment3.next();
      OffsetList.Segment offsetList_Segment9 = new OffsetList.Segment();
      offsetList_Segment9.add(0L);
      offsetList_Segment6.setNext(offsetList_Segment9);
      offsetList_Segment3.setNext(offsetList_Segment8);
      assertSame(offsetList_Segment3, offsetList_Segment6);
  }

  @Test
  public void test10()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      OffsetList offsetList1 = new OffsetList();
      offsetList0.merge(offsetList1);
      OffsetList.Segment offsetList_Segment0 = new OffsetList.Segment();
      offsetList_Segment0.get(0);
      offsetList1.contains(0L);
      boolean boolean0 = offsetList1.add(0L, false);
      assertEquals(1, offsetList1.size());
      assertFalse(boolean0);
  }
}
