/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 15:43:15 KST 2017
 */

package com.sleepycat.je.recovery;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.latch.LatchException;
import com.sleepycat.je.log.LogManager;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.tree.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class RootFlusher_ESTest4 extends RootFlusher_ESTest_scaffolding4 {

  @Test
  public void test00()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, (-1651L));
      byte[] byteArray0 = new byte[9];
      DBIN dBIN0 = new DBIN();
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, (long) (byte)0);
      rootFlusher0.doWork(childReference0);
      //  // Unstable assertion: assertEquals(85L, dBIN0.getLastId());
      //  // Unstable assertion: assertEquals(85L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test01()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      // Undeclared exception!
      try { 
        rootFlusher0.hook599((ChildReference) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.recovery.RootFlusher", e);
      }
  }

  @Test
  public void test02()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      DIN dIN0 = new DIN();
      dIN0.updateDupCountLNRefAndNullTarget((byte) (-105));
      byte[] byteArray0 = new byte[9];
      ChildReference childReference0 = new ChildReference((Node) dIN0, byteArray0, (long) (byte)102);
      // Undeclared exception!
      try { 
        rootFlusher0.hook599(childReference0, dIN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.DIN", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, (-797L));
      BIN bIN0 = new BIN();
      bIN0.latchNoWait();
      try { 
        rootFlusher0.hook599((ChildReference) null, bIN0);
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // BIN0 already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      MapLN mapLN0 = new MapLN();
      byte[] byteArray0 = new byte[1];
      ChildReference childReference0 = new ChildReference((Node) mapLN0, byteArray0, 0L);
      // Undeclared exception!
      try { 
        rootFlusher0.doWork(childReference0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.tree.MapLN cannot be cast to com.sleepycat.je.tree.IN
         //
         assertThrownBy("com.sleepycat.je.recovery.RootFlusher", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[12];
      dIN0.latchNoWait();
      ChildReference childReference0 = new ChildReference((Node) dIN0, byteArray0, 2244L, (byte) (-20));
      try { 
        rootFlusher0.doWork(childReference0);
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // DIN0 already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      byte[] byteArray0 = new byte[9];
      ChildReference childReference0 = new ChildReference((Node) null, byteArray0, (long) (byte) (-20));
      try { 
        rootFlusher0.doWork(childReference0);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // fetchTarget of 0xffffffff/0xffffffec state=2 java.lang.NullPointerException
         //
         assertThrownBy("com.sleepycat.je.tree.ChildReference", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[12];
      dIN0.updateDupCountLNRefAndNullTarget((byte)9);
      ChildReference childReference0 = new ChildReference((Node) dIN0, byteArray0, (long) (byte) (-20), (byte)0);
      // Undeclared exception!
      try { 
        rootFlusher0.doWork(childReference0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.DIN", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      rootFlusher0.doWork((ChildReference) null);
      //  // Unstable assertion: assertEquals(33L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test09()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      IN iN0 = new IN();
      byte[] byteArray0 = new byte[7];
      ChildReference childReference0 = new ChildReference((Node) iN0, byteArray0, 1230L);
      rootFlusher0.doWork(childReference0);
      boolean boolean0 = rootFlusher0.stillRoot();
      //  // Unstable assertion: assertEquals(20L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, (-1651L));
      boolean boolean0 = rootFlusher0.getFlushed();
      //  // Unstable assertion: assertEquals(15L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      boolean boolean0 = rootFlusher0.stillRoot();
      //  // Unstable assertion: assertEquals(10L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      NameLN nameLN0 = new NameLN();
      DBIN dBIN0 = new DBIN();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 2134L);
      byte[] byteArray0 = new byte[5];
      ChildReference childReference0 = new ChildReference((Node) nameLN0, byteArray0, 2134L, (byte)57);
      rootFlusher0.hook599(childReference0, dBIN0);
      //  // Unstable assertion: assertEquals(1L, dBIN0.getLastId());
      //  // Unstable assertion: assertEquals(1L, databaseImpl0.getEofNodeId());
  }
}
