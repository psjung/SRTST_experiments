/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 16:17:16 KST 2017
 */

package com.sleepycat.je.tree;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import java.io.File;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Properties;
import java.util.ResourceBundle;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.cleaner.UtilizationTracker;
import com.sleepycat.je.dbi.CursorImpl;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.latch.LatchNotHeldException;
import com.sleepycat.je.utilint.TestHook;

import de.ovgu.cide.jakutil.ReturnBoolean;
import de.ovgu.cide.jakutil.ReturnObject;
import de.ovgu.cide.jakutil.ReturnVoid;
import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Tree_ESTest4 extends Tree_ESTest_scaffolding4 {

  @Test
  public void test001()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)0;
      String string0 = "";
      DatabaseId databaseId0 = new DatabaseId();
      File file0 = null;
      Properties properties0 = null;
      EnvironmentConfig environmentConfig0 = null;
      try {
        environmentConfig0 = new EnvironmentConfig(properties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test002()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[0];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.NORMAL;
      BINBoundary bINBoundary0 = new BINBoundary();
      IN iN0 = tree0.search(byteArray0, tree_SearchType0, 4L, bINBoundary0, true);
      DatabaseImpl databaseImpl0 = null;
      DBIN dBIN0 = null;
      try {
        dBIN0 = new DBIN(databaseImpl0, byteArray0, iN0.ACCUMULATED_LIMIT, byteArray0, iN0.ACCUMULATED_LIMIT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.IN", e);
      }
  }

  @Test
  public void test003()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        tree0.deleteDup(byteArray0, byteArray0, (UtilizationTracker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test004()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[7];
      BINBoundary bINBoundary0 = new BINBoundary();
      File file0 = null;
      EnvironmentConfig environmentConfig0 = null;
      EnvironmentImpl environmentImpl0 = null;
      try {
        environmentImpl0 = new EnvironmentImpl(file0, environmentConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbConfigManager", e);
      }
  }

  @Test
  public void test007()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook702();
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test008()  throws Throwable  {
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[1];
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit((Tree) null, dIN0, byteArray0);
      tree_Tree_forceSplit0.origParent = (IN) dIN0;
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.hook727();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test009()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.rebuildINList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test010()  throws Throwable  {
      Tree tree0 = new Tree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("");
      // Undeclared exception!
      try { 
        tree0.readFromLog(byteBuffer0, (byte)0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test011()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook754((BIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test012()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook744((DIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test013()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook742((DBIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test014()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook740(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test015()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook739(dBIN0, dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test016()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook737((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test017()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook737(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test018()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook735((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test019()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook734((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test022()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook715(1126);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test023()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook710((DIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test024()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook709((DBIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test025()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook705((DIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test026()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook701(false, (IN) null);
        fail("Expecting exception: ReturnObject");
      
      } catch(ReturnObject e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test027()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        tree0.hook698((IN) null, byteArray0, (byte)0, true, (byte)0, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test028()  throws Throwable  {
      Tree tree0 = new Tree();
      try { 
        tree0.hook693((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test029()  throws Throwable  {
      DIN dIN0 = new DIN();
      Tree tree0 = new Tree();
      try { 
        tree0.hook691(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test033()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        tree0.hook686(false, false, byteArray0, (IN) null, (IN) null, (IN) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getParentNode passed null
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test034()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook682((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test035()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook681((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test038()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook679(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test042()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        tree0.hook674(byteArray0, byteArray0, (IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test043()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      // Undeclared exception!
      try { 
        tree0.hook672(byteArray0, (UtilizationTracker) null, (IN) null, arrayList0, (IN) null, true);
        fail("Expecting exception: ReturnVoid");
      
      } catch(ReturnVoid e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test044()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook671((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test045()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook670((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test046()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getPrevBin((BIN) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test047()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getParentINForChildIN((IN) null, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getParentNode passed null
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test048()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getNextBin((BIN) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test049()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.dumpString((-9));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -9
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test050()  throws Throwable  {
      Tree tree0 = new Tree();
      String string0 = tree0.dumpString(0);
      assertEquals("<tree>\n</tree>", string0);
  }

  @Test
  public void test052()  throws Throwable  {
      Tree tree0 = new Tree();
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        tree0.setDatabase(databaseImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test053()  throws Throwable  {
      Tree tree0 = new Tree();
      IN iN0 = tree0.getRootIN(true);
      assertNull(iN0);
  }

  @Test
  public void test054()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[5];
      tree0.searchSplitsAllowed(byteArray0, 1492L, false);
      //  // Unstable assertion: assertEquals(457L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test055()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.LEFT;
      BINBoundary bINBoundary0 = new BINBoundary();
      IN iN0 = tree0.search(byteArray0, tree_SearchType0, (byte)12, bINBoundary0, false);
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      arrayList0.add((Integer) iN0.ACCUMULATED_LIMIT);
      // Undeclared exception!
      try { 
        tree0.hook672(byteArray0, (UtilizationTracker) null, (IN) null, arrayList0, (IN) null, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to com.sleepycat.je.tree.Tree$SplitInfo
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test058()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook733();
       //  fail("Expecting exception: AssertionError");
       // Unstable assertion
      } catch(AssertionError e) {
         //
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@70e1ffd[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@363b0566[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7e244c04[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7bed1e5b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@262aff0[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2eba1b29[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7b8f101c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@742536e6[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@79f35a6d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@725f5660[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3012c297[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@50c886e2[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6e6a7e44[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@26c4d108[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2bf866c2[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4a369790[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1e10a40f[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@421ff260[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@59d587aa[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@638815fe[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5774630[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4ed1ca6b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@17b23c20[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@677a58b5[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@214c6b69[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@399cddb0[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@8d97b6a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4c4a7cb9[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4fc06991[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6c35f360[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2e23bc8[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@64421cd8[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@48188a5b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@67bc8695[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4dc98944[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4cfca5d2[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@48f628b4[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@77f605f8[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@748c365e[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@663422ae[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6b2058a9[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3ede41cb[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@13f4c32f[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@221932a9[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1258eb5[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@22fdcadc[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@27e96932[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4c243559[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2ad1edfb[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@22f916fe[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@721309a4[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4a4f2379[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@de40e0d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1f105576[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5043e62f[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@107de2f5[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2d8b23cb[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@16fbbcf0[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6246351c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@79c4780c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@40e49bef[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2c11856c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4036c66a[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@18fb178[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@b4d4662[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@11eeabcf[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@63f4c7f0[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3b37ae4d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@34295f39[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7317b470[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1c157315[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@7fdf5f09[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5ac842a9[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2b57c109[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1c6fab59[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@185fad72[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@2b49b81c[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@107a0039[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6d7f9d3d[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@382ee651[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@3cb80371[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@5a62789[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@4872ad62[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@15f214c7[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@98044b[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6f69b237[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@41cec249[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@6185b004[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@239708ee[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@1e8fb907[Locked by thread TEST_EXECUTION_THREAD_1]
         // com.sleepycat.je.latch.Java5LatchImpl$JEReentrantLock@49a80f36[Locked by thread TEST_EXECUTION_THREAD_1]
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test062()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook694((IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test064()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      TreeLocation treeLocation0 = new TreeLocation();
      // Undeclared exception!
      try { 
        tree0.hook686(true, false, treeLocation0.lnKey, (IN) null, (IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test065()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      MapLN mapLN0 = new MapLN(databaseImpl0);
      tree0.hook683(treeLocation0, (byte[]) null, (byte[]) null, mapLN0, false, false, false, false, false, false, (Node) null);
      //  // Unstable assertion: assertEquals(336L, mapLN0.getNodeId());
      //  // Unstable assertion: assertEquals(335L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test066()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook675(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test068()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      DIN dIN0 = new DIN();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      try { 
        tree0.hook672(byteArray0, (UtilizationTracker) null, dIN0, arrayList0, dIN0, true);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test069()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      tree0.delete(byteArray0, (UtilizationTracker) null);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test071()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, 1662L, false);
      tree_Tree_searchSplitsAllowed0.hook716();
  }

  @Test
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed((Tree) null, byteArray0, 6144L, false);
      // Undeclared exception!
      try { 
        tree_Tree_searchSplitsAllowed0.hook716();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test073()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.validateINList((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test074()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try { 
        tree0.validateINList(dIN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test075()  throws Throwable  {
      Tree tree0 = new Tree();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      tree0.dumpLog(stringBuffer0, false);
      assertEquals(13, stringBuffer0.length());
      assertEquals("<root></root>", stringWriter0.toString());
  }

  @Test
  public void test076()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("<deleted val=\"");
      CharBuffer charBuffer0 = mS949_0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = mS949_0.encode(charBuffer0);
      // Undeclared exception!
      try { 
        databaseImpl0.readFromLog(byteBuffer1, (byte)7);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.HeapByteBuffer", e);
      }
  }

  @Test
  public void test077()  throws Throwable  {
      Tree tree0 = new Tree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode(" btc=\"");
      tree0.writeToLog(byteBuffer0);
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test079()  throws Throwable  {
      Tree tree0 = new Tree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("");
      // Undeclared exception!
      try { 
        tree0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test080()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[2];
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, (long) (byte) (-126), (byte) (-126));
      tree0.setRoot(childReference0, true);
      int int0 = tree0.getLogSize();
      assertEquals(16, int0);
  }

  @Test
  public void test081()  throws Throwable  {
      Tree tree0 = new Tree();
      int int0 = tree0.getLogSize();
      assertEquals(1, int0);
  }

  @Test
  public void test083()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[2];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.RIGHT;
      BINBoundary bINBoundary0 = new BINBoundary();
      IN iN0 = tree0.searchSubTree((IN) null, byteArray0, tree_SearchType0, (-989L), bINBoundary0, false);
      assertNull(iN0);
  }

  @Test
  public void test084()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[14];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.RIGHT;
      BINBoundary bINBoundary0 = new BINBoundary();
      // Undeclared exception!
      try { 
        tree0.searchSubTree(dBIN0, byteArray0, tree_SearchType0, (byte) (-128), bINBoundary0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // searchSubTree passed key and left/right search
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test085()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      DupCountLN dupCountLN0 = new DupCountLN();
      // Undeclared exception!
      try { 
        tree0.hook683(treeLocation0, (byte[]) null, treeLocation0.lnKey, dupCountLN0, false, false, false, false, false, false, dupCountLN0);
        fail("Expecting exception: ReturnBoolean");
      
      } catch(ReturnBoolean e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test086()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      TreeLocation treeLocation0 = new TreeLocation();
      LN lN0 = new LN(byteArray0);
      boolean boolean0 = tree0.getParentBINForChildLN(treeLocation0, byteArray0, byteArray0, lN0, false, true, false, false);
      //  // Unstable assertion: assertEquals(288L, lN0.getNodeId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test087()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      SearchResult searchResult0 = tree0.getParentINForChildIN(504L, true, true, byteArray0, byteArray0, true, false, (int) (byte) (-1), (List) list0, false);
      assertEquals((-1), searchResult0.index);
  }

  @Test
  public void test088()  throws Throwable  {
      Tree tree0 = new Tree();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        tree0.getParentINForChildIN((IN) null, false, false, (int) (byte)0, (List) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getParentNode passed null
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test089()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getLastNode((DIN) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getLastNode passed null root
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test090()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.getFirstNode((DIN) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getFirstNode passed null root
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test092()  throws Throwable  {
      Tree tree0 = new Tree();
      long long0 = tree0.getRootLsn();
      assertEquals((-1L), long0);
  }

  @Test
  public void test094()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[0];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, 4L, true);
      tree_Tree_searchSplitsAllowed0.hook721();
  }

  @Test
  public void test095()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      byte[] byteArray0 = new byte[3];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, (byte)0, false);
      tree_Tree_searchSplitsAllowed0.hook719();
      //  // Unstable assertion: assertEquals(273L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test096()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[14];
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, byteArray0, (-3595L), false);
      // Undeclared exception!
      try { 
        tree_Tree_searchSplitsAllowed0.hook718();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_searchSplitsAllowed", e);
      }
  }

  @Test
  public void test097()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      TreeLocation treeLocation0 = new TreeLocation();
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, (IN) null, treeLocation0.lnKey);
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.hook724();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test098()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      TreeLocation treeLocation0 = new TreeLocation();
      Tree.Tree_forceSplit tree_Tree_forceSplit0 = new Tree.Tree_forceSplit(tree0, (IN) null, treeLocation0.lnKey);
      // Undeclared exception!
      try { 
        tree_Tree_forceSplit0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree$Tree_forceSplit", e);
      }
  }

  @Test
  public void test099()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      // Undeclared exception!
      try { 
        tree0.hook731(treeLocation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test100()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook705(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test102()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook740((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test104()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.setSearchHook((TestHook) null);
      //  // Unstable assertion: assertEquals(226L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test105()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook691((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test106()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[6];
      LN lN0 = new LN(byteArray0);
      tree0.makeRootChildReference(lN0, byteArray0, (-3099L));
      //  // Unstable assertion: assertEquals(221L, lN0.getLastId());
      //  // Unstable assertion: assertEquals(221L, lN0.getNodeId());
  }

  @Test
  public void test107()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook748();
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test109()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook675((DIN) null);
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test110()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook734(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test112()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      DIN dIN0 = new DIN();
      LN lN0 = new LN((byte[]) null);
      // Undeclared exception!
      try { 
        tree0.hook685(treeLocation0, (byte[]) null, dIN0, lN0, true, false, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test113()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook679((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test114()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook693(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test115()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      tree0.hook750(dBIN0);
      //  // Unstable assertion: assertEquals(20L, dBIN0.getGeneration());
  }

  @Test
  public void test116()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook712((BIN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test117()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook751();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test118()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      tree0.hook709(dBIN0);
      //  // Unstable assertion: assertEquals(16L, dBIN0.getGeneration());
  }

  @Test
  public void test119()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook739((IN) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test120()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = null;
      try {
        tree0 = new Tree(databaseImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test121()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.hook752();
      //  // Unstable assertion: assertEquals(153L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test122()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook743((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test123()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook747(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test124()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook700((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test125()  throws Throwable  {
      Tree tree0 = new Tree();
      try { 
        tree0.hook692((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test126()  throws Throwable  {
      Tree tree0 = new Tree();
      long long0 = tree0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test127()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.dump();
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test128()  throws Throwable  {
      Tree tree0 = new Tree();
      ArrayList<LN> arrayList0 = new ArrayList<LN>();
      tree0.hook697(arrayList0);
      assertEquals(0, arrayList0.size());
  }

  @Test
  public void test129()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[3];
      DIN dIN0 = new DIN();
      try { 
        tree0.hook674(byteArray0, byteArray0, dIN0, dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test130()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setCkptHook((TestHook) null);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test132()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.validateDelete((-933));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test134()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook749();
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test135()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      boolean boolean0 = tree0.logEntryIsTransactional();
      //  // Unstable assertion: assertEquals(140L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test136()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook745((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test137()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook707(dIN0);
      //  // Unstable assertion: assertEquals(12L, dIN0.getGeneration());
  }

  @Test
  public void test138()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.setTreeStatsAccumulator((TreeWalkerStatsAccumulator) null);
      assertEquals((-1L), tree0.getRootLsn());
  }

  @Test
  public void test139()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.withRootLatchedExclusive((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test140()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook736((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test142()  throws Throwable  {
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      MapLN mapLN0 = new MapLN();
      tree0.hook683(treeLocation0, (byte[]) null, (byte[]) null, mapLN0, false, false, false, true, true, false, mapLN0);
      //  // Unstable assertion: assertEquals(81L, mapLN0.getLastId());
  }

  @Test
  public void test143()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.getFirstNode();
      //  // Unstable assertion: assertEquals(64L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test144()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook710(dIN0);
      //  // Unstable assertion: assertEquals(8L, dIN0.getGeneration());
  }

  @Test
  public void test145()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook744(dIN0);
      //  // Unstable assertion: assertEquals(4L, dIN0.getGeneration());
  }

  @Test
  public void test146()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      tree0.hook682(dBIN0);
      assertEquals(0L, dBIN0.getGeneration());
  }

  @Test
  public void test147()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.hook746((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test148()  throws Throwable  {
      Tree tree0 = new Tree();
      DatabaseImpl databaseImpl0 = tree0.getDatabase();
      assertNull(databaseImpl0);
  }

  @Test
  public void test149()  throws Throwable  {
      Tree tree0 = new Tree();
      ArrayList<Tree> arrayList0 = new ArrayList<Tree>();
      tree0.hook676(arrayList0);
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test150()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.getTreeStats();
      //  // Unstable assertion: assertEquals(60L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test151()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      tree0.setWaitHook((TestHook) null);
      //  // Unstable assertion: assertEquals(56L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test152()  throws Throwable  {
      Tree tree0 = new Tree();
      // Undeclared exception!
      try { 
        tree0.withRootLatchedShared((WithRootLatched) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test154()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook684((BIN) null);
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test155()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.getLastNode();
      byte[] byteArray0 = new byte[14];
      DBIN dBIN0 = new DBIN();
      File file0 = null;
      EnvironmentConfig environmentConfig0 = null;
      try {
        environmentConfig0 = new EnvironmentConfig((Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test156()  throws Throwable  {
      Tree tree0 = new Tree();
      DBIN dBIN0 = new DBIN();
      try { 
        tree0.hook742(dBIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DBIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test157()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      tree0.hook681(dIN0);
      assertEquals((-1L), dIN0.getLastFullVersion());
  }

  @Test
  public void test158()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      TreeLocation treeLocation0 = new TreeLocation();
      LN lN0 = new LN();
      boolean boolean0 = tree0.getParentBINForChildLN(treeLocation0, treeLocation0.lnKey, treeLocation0.lnKey, lN0, true, false, false, true);
      //  // Unstable assertion: assertEquals(5L, lN0.getLastId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test159()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      try { 
        tree0.hook738(dIN0);
        fail("Expecting exception: LatchNotHeldException");
      
      } catch(LatchNotHeldException e) {
         //
         // DIN0 not held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test160()  throws Throwable  {
      Tree tree0 = new Tree();
      Tree.Tree_searchSplitsAllowed tree_Tree_searchSplitsAllowed0 = new Tree.Tree_searchSplitsAllowed(tree0, (byte[]) null, 0, false);
      // Undeclared exception!
      try { 
        tree_Tree_searchSplitsAllowed0.hook720();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test161()  throws Throwable  {
      Tree tree0 = new Tree();
      tree0.hook753();
      assertEquals(0L, tree0.getTransactionId());
  }

  @Test
  public void test162()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      // Undeclared exception!
      try { 
        tree0.hook689((IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }
}
