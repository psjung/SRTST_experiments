/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 02:49:14 KST 2017
 */

package com.sleepycat.je.utilint;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.fail;

import java.util.LinkedHashSet;
import java.util.Properties;
import java.util.Set;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class PropUtil_ESTest2 extends PropUtil_ESTest_scaffolding2 {

  @Test
  public void test00()  throws Throwable  {
      long long0 = PropUtil.microsToMillis(0L);
      assertEquals(0L, long0);
  }

  @Test
  public void test01()  throws Throwable  {
      long long0 = PropUtil.microsToMillis(1468L);
      assertEquals(2L, long0);
  }

  @Test
  public void test02()  throws Throwable  {
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      Properties properties0 = PropUtil.validateProps((Properties) null, linkedHashSet0, ".");
      Object object0 = new Object();
      properties0.put(object0, properties0);
      // Undeclared exception!
      try { 
        PropUtil.validateProps(properties0, linkedHashSet0, ".");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.String
         //
         assertThrownBy("java.util.Properties", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Properties properties0 = PropUtil.validateProps((Properties) null, linkedHashSet0, ">Y?>RQ[fD;F)6RQF");
      properties0.put(">Y?>RQ[fD;F)6RQF", linkedHashSet0);
      try { 
        PropUtil.validateProps(properties0, linkedHashSet0, "v'");
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // >Y?>RQ[fD;F)6RQF is not a valid property for v'
         //
         assertThrownBy("com.sleepycat.je.utilint.PropUtil", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropUtil.validateProp("TOR1S}L$-nSU@H!Yq", (Set) null, "&4X9R{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropUtil.getBoolean((Properties) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.utilint.PropUtil", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("");
      PropUtil.validateProp("", linkedHashSet0, "");
      assertFalse(linkedHashSet0.isEmpty());
  }

  @Test
  public void test07()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      try { 
        PropUtil.validateProp("08$", linkedHashSet0, "08$");
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // 08$ is not a valid property for 08$
         //
         assertThrownBy("com.sleepycat.je.utilint.PropUtil", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      Properties properties0 = PropUtil.validateProps((Properties) null, (Set) null, "-K7/f2RD6");
      properties0.setProperty("h/~w", "h/~w");
      // Undeclared exception!
      try { 
        PropUtil.validateProps(properties0, (Set) null, "e$v&TZhBxn24q).");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test09()  throws Throwable  {
      Properties properties0 = PropUtil.validateProps((Properties) null, (Set) null, "-K7/f2RD6");
      Properties properties1 = PropUtil.validateProps(properties0, (Set) null, "-Ti?yQ+S");
      assertSame(properties1, properties0);
  }

  @Test
  public void test10()  throws Throwable  {
      Properties properties0 = PropUtil.validateProps((Properties) null, (Set) null, "-K7/f2RD6");
      properties0.setProperty("e$v&TZhBxn24q).", ".");
      boolean boolean0 = PropUtil.getBoolean(properties0, "e$v&TZhBxn24q).");
      assertFalse(boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Properties properties0 = PropUtil.validateProps((Properties) null, linkedHashSet0, "Lk/5A\"2L");
      boolean boolean0 = PropUtil.getBoolean(properties0, "Lk/5A\"2L");
      assertFalse(boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      PropUtil propUtil0 = new PropUtil();
  }

  @Test
  public void test13()  throws Throwable  {
      long long0 = PropUtil.microsToMillis((-3041L));
      assertEquals((-2L), long0);
  }
}
