/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 08:41:04 KST 2017
 */

package com.sleepycat.je.dbi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sleepycat.je.BtreeStats;
import com.sleepycat.je.DatabaseStats;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.StatsAccumulator;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.IN;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class StatsAccumulator_ESTest5 extends StatsAccumulator_ESTest_scaffolding5 {

  @Test
  public void test00()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PrintStream printStream0 = new PrintStream((OutputStream) byteArrayOutputStream0);
      StatsAccumulator statsAccumulator0 = new StatsAccumulator(printStream0, 131034, (DatabaseStats) null);
      statsAccumulator0.hook367((DupCountLN) null);
  }

  @Test
  public void test01()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 127, btreeStats0);
      DBIN dBIN0 = new DBIN();
      statsAccumulator0.hook366(dBIN0);
      assertTrue(dBIN0.marshallOutsideWriteLatch());
  }

  @Test
  public void test02()  throws Throwable  {
      DIN dIN0 = new DIN();
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 65536, btreeStats0);
      statsAccumulator0.hook365(dIN0);
      assertEquals(1000, IN.ACCUMULATED_LIMIT);
  }

  @Test
  public void test03()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 1549, btreeStats0);
      int int0 = statsAccumulator0.getMainTreeMaxDepth();
      assertEquals(0, int0);
  }

  @Test
  public void test04()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 18, btreeStats0);
      long long0 = statsAccumulator0.getLNCount();
      assertEquals(0L, long0);
  }

  @Test
  public void test05()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 127, btreeStats0);
      long[] longArray0 = statsAccumulator0.getINsByLevel();
      assertNotNull(longArray0);
  }

  @Test
  public void test06()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 127, btreeStats0);
      Set set0 = statsAccumulator0.getINNodeIdsSeen();
      assertEquals(0, set0.size());
  }

  @Test
  public void test07()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 127, btreeStats0);
      int int0 = statsAccumulator0.getDuplicateTreeMaxDepth();
      assertEquals(0, int0);
  }

  @Test
  public void test08()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 0, btreeStats0);
      Set set0 = statsAccumulator0.getDupCountLNCount();
      assertTrue(set0.isEmpty());
  }

  @Test
  public void test09()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 18, btreeStats0);
      long long0 = statsAccumulator0.getDeletedLNCount();
      assertEquals(0L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PrintStream printStream0 = new PrintStream((OutputStream) byteArrayOutputStream0);
      StatsAccumulator statsAccumulator0 = new StatsAccumulator(printStream0, 131016, (DatabaseStats) null);
      long[] longArray0 = statsAccumulator0.getDINsByLevel();
      assertNotNull(longArray0);
  }

  @Test
  public void test11()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PrintStream printStream0 = new PrintStream((OutputStream) byteArrayOutputStream0);
      StatsAccumulator statsAccumulator0 = new StatsAccumulator(printStream0, 131079, (DatabaseStats) null);
      Set set0 = statsAccumulator0.getDINNodeIdsSeen();
      assertTrue(set0.isEmpty());
  }

  @Test
  public void test12()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PrintStream printStream0 = new PrintStream((OutputStream) byteArrayOutputStream0);
      StatsAccumulator statsAccumulator0 = new StatsAccumulator(printStream0, 131016, (DatabaseStats) null);
      long[] longArray0 = statsAccumulator0.getDBINsByLevel();
      assertNotNull(longArray0);
  }

  @Test
  public void test13()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 127, btreeStats0);
      Set set0 = statsAccumulator0.getDBINNodeIdsSeen();
      assertEquals(0, set0.size());
  }

  @Test
  public void test14()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 136, btreeStats0);
      long[] longArray0 = statsAccumulator0.getBINsByLevel();
      assertNotNull(longArray0);
  }

  @Test
  public void test15()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 0, btreeStats0);
      Set set0 = statsAccumulator0.getBINNodeIdsSeen();
      assertTrue(set0.isEmpty());
  }

  @Test
  public void test16()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      BtreeStats btreeStats0 = (BtreeStats)databaseImpl0.getEmptyStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, (-1), btreeStats0);
      statsAccumulator0.hook364((BIN) null);
      //  // Unstable assertion: assertEquals(61L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test17()  throws Throwable  {
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 18, (DatabaseStats) null);
      statsAccumulator0.incrementLNCount();
  }

  @Test
  public void test18()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      BtreeStats btreeStats0 = (BtreeStats)databaseImpl0.getEmptyStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 844, btreeStats0);
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        statsAccumulator0.processDBIN(dBIN0, (Long) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("com.sleepycat.je.dbi.StatsAccumulator", e);
      }
  }

  @Test
  public void test19()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 0, btreeStats0);
      statsAccumulator0.incrementLNCount();
  }

  @Test
  public void test20()  throws Throwable  {
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 18, (DatabaseStats) null);
      DIN dIN0 = new DIN();
      Long long0 = new Long((long) (-1));
      // Undeclared exception!
      try { 
        statsAccumulator0.processIN(dIN0, long0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("com.sleepycat.je.dbi.StatsAccumulator", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PrintStream printStream0 = new PrintStream((OutputStream) byteArrayOutputStream0);
      StatsAccumulator statsAccumulator0 = new StatsAccumulator(printStream0, 131016, (DatabaseStats) null);
      DIN dIN0 = new DIN();
      Long long0 = new Long((long) (-1));
      // Undeclared exception!
      try { 
        statsAccumulator0.processDIN(dIN0, long0, 131016);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65480
         //
         assertThrownBy("com.sleepycat.je.dbi.StatsAccumulator", e);
      }
  }

  @Test
  public void test22()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 136, btreeStats0);
      DBIN dBIN0 = new DBIN();
      Long long0 = new Long((long) 136);
      statsAccumulator0.processIN(dBIN0, long0, 65536);
      assertEquals((-1L), dBIN0.getLastDeltaVersion());
  }

  @Test
  public void test23()  throws Throwable  {
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 18, (DatabaseStats) null);
      DIN dIN0 = new DIN();
      Long long0 = new Long((-1455L));
      // Undeclared exception!
      try { 
        statsAccumulator0.processDIN(dIN0, long0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("com.sleepycat.je.dbi.StatsAccumulator", e);
      }
  }

  @Test
  public void test24()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 0, btreeStats0);
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try { 
        statsAccumulator0.processBIN(dBIN0, (Long) (-1L), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         assertThrownBy("com.sleepycat.je.dbi.StatsAccumulator", e);
      }
  }

  @Test
  public void test25()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PrintStream printStream0 = new PrintStream((OutputStream) byteArrayOutputStream0);
      StatsAccumulator statsAccumulator0 = new StatsAccumulator(printStream0, 131079, (DatabaseStats) null);
      Long long0 = new Long(100L);
      statsAccumulator0.processDupCountLN((DupCountLN) null, long0);
  }

  @Test
  public void test26()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PrintStream printStream0 = new PrintStream((OutputStream) byteArrayOutputStream0);
      StatsAccumulator statsAccumulator0 = new StatsAccumulator(printStream0, 131079, (DatabaseStats) null);
      statsAccumulator0.incrementDeletedLNCount();
  }

  @Test
  public void test27()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 0, btreeStats0);
      DBIN dBIN0 = new DBIN();
      statsAccumulator0.processDBIN(dBIN0, (Long) (-1L), 0);
      assertEquals(0L, dBIN0.getTransactionId());
  }

  @Test
  public void test28()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PrintStream printStream0 = new PrintStream((OutputStream) byteArrayOutputStream0);
      StatsAccumulator statsAccumulator0 = new StatsAccumulator(printStream0, 131079, (DatabaseStats) null);
      DIN dIN0 = new DIN();
      Long long0 = new Long(100L);
      statsAccumulator0.processDIN(dIN0, long0, 131079);
      assertEquals(1000, IN.ACCUMULATED_LIMIT);
  }

  @Test
  public void test29()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PrintStream printStream0 = new PrintStream((OutputStream) byteArrayOutputStream0);
      StatsAccumulator statsAccumulator0 = new StatsAccumulator(printStream0, 131079, (DatabaseStats) null);
      DIN dIN0 = new DIN();
      statsAccumulator0.hook363(dIN0);
      assertEquals((-1L), dIN0.getLastFullVersion());
  }

  @Test
  public void test30()  throws Throwable  {
      BtreeStats btreeStats0 = new BtreeStats();
      StatsAccumulator statsAccumulator0 = new StatsAccumulator((PrintStream) null, 0, btreeStats0);
      statsAccumulator0.copyToStats(btreeStats0);
      assertEquals(0L, btreeStats0.getLeafNodeCount());
      assertEquals(0L, btreeStats0.getDeletedLeafNodeCount());
      assertEquals(0, btreeStats0.getDuplicateTreeMaxDepth());
      assertEquals(0, btreeStats0.getMainTreeMaxDepth());
  }
}
