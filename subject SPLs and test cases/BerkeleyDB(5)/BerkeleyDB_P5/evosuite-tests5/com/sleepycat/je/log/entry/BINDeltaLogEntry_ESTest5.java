/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 11:03:27 KST 2017
 */

package com.sleepycat.je.log.entry;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.io.InputStream;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.log.LogReadable;
import com.sleepycat.je.tree.BINDelta;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.tree.Node;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class BINDeltaLogEntry_ESTest5 extends BINDeltaLogEntry_ESTest_scaffolding5 {

  @Test
  public void test0()  throws Throwable  {
      Class<BINDelta> class0 = BINDelta.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      BINDelta bINDelta0 = new BINDelta();
      bINDeltaLogEntry0.item = (LogReadable) bINDelta0;
      long long0 = bINDeltaLogEntry0.getLsnOfIN((-2149L));
      assertEquals((-1L), long0);
  }

  @Test
  public void test1()  throws Throwable  {
      Class<InputStream> class0 = InputStream.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      BINDelta bINDelta0 = new BINDelta();
      bINDeltaLogEntry0.item = (LogReadable) bINDelta0;
      bINDeltaLogEntry0.getDbId();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("QuS/z-li_:@U5");
      // Undeclared exception!
      try { 
        bINDelta0.readFromLog(byteBuffer0, (byte)0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Class<String> class0 = String.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[0];
      ChildReference childReference0 = new ChildReference((Node) dIN0, byteArray0, (-618L));
      bINDeltaLogEntry0.item = (LogReadable) childReference0;
      // Undeclared exception!
      try { 
        bINDeltaLogEntry0.getLsnOfIN((-618L));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.tree.ChildReference cannot be cast to com.sleepycat.je.tree.BINDelta
         //
         assertThrownBy("com.sleepycat.je.log.entry.BINDeltaLogEntry", e);
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Class<String> class0 = String.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      NameLN nameLN0 = new NameLN();
      bINDeltaLogEntry0.item = (LogReadable) nameLN0;
      // Undeclared exception!
      try { 
        bINDeltaLogEntry0.getIN((EnvironmentImpl) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.tree.NameLN cannot be cast to com.sleepycat.je.tree.BINDelta
         //
         assertThrownBy("com.sleepycat.je.log.entry.BINDeltaLogEntry", e);
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      byte[] byteArray0 = new byte[2];
      LN lN0 = new LN(byteArray0);
      bINDeltaLogEntry0.item = (LogReadable) lN0;
      // Undeclared exception!
      try { 
        bINDeltaLogEntry0.getDbId();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.tree.LN cannot be cast to com.sleepycat.je.tree.BINDelta
         //
         assertThrownBy("com.sleepycat.je.log.entry.BINDeltaLogEntry", e);
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Class<BINDelta> class0 = BINDelta.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      // Undeclared exception!
      try { 
        bINDeltaLogEntry0.getLsnOfIN((-2149L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.entry.BINDeltaLogEntry", e);
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Class<BINDelta> class0 = BINDelta.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      // Undeclared exception!
      try { 
        bINDeltaLogEntry0.getIN((EnvironmentImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.entry.BINDeltaLogEntry", e);
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Class<InputStream> class0 = InputStream.class;
      BINDeltaLogEntry bINDeltaLogEntry0 = new BINDeltaLogEntry(class0);
      // Undeclared exception!
      try { 
        bINDeltaLogEntry0.getDbId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.entry.BINDeltaLogEntry", e);
      }
  }
}
