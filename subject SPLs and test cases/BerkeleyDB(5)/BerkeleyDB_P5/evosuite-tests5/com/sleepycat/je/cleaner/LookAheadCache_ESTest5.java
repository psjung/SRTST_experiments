/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 10:05:15 KST 2017
 */

package com.sleepycat.je.cleaner;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.NoSuchElementException;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.NameLN;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class LookAheadCache_ESTest5 extends LookAheadCache_ESTest_scaffolding5 {

  @Test
  public void test00()  throws Throwable  {
      LookAheadCache lookAheadCache0 = new LookAheadCache(1);
      Long long0 = new Long((-2566L));
      MapLN mapLN0 = new MapLN();
      DatabaseId databaseId0 = new DatabaseId();
      byte[] byteArray0 = new byte[3];
      LNInfo lNInfo0 = new LNInfo((LN) mapLN0, databaseId0, byteArray0, byteArray0);
      lookAheadCache0.add(long0, lNInfo0);
      boolean boolean0 = lookAheadCache0.isEmpty();
      assertFalse(boolean0);
  }

  @Test
  public void test01()  throws Throwable  {
      LookAheadCache lookAheadCache0 = new LookAheadCache(0);
      boolean boolean0 = lookAheadCache0.isFull();
      assertTrue(boolean0);
  }

  @Test
  public void test02()  throws Throwable  {
      LookAheadCache lookAheadCache0 = new LookAheadCache(432);
      Long long0 = new Long(0L);
      DatabaseId databaseId0 = new DatabaseId(432);
      NameLN nameLN0 = new NameLN(databaseId0);
      byte[] byteArray0 = new byte[9];
      LNInfo lNInfo0 = new LNInfo((LN) nameLN0, databaseId0, byteArray0, byteArray0);
      lookAheadCache0.add(long0, lNInfo0);
      Long long1 = lookAheadCache0.nextOffset();
      assertEquals(0L, (long)long1);
  }

  @Test
  public void test03()  throws Throwable  {
      LookAheadCache lookAheadCache0 = new LookAheadCache((-1406));
      NameLN nameLN0 = new NameLN();
      DatabaseId databaseId0 = new DatabaseId();
      byte[] byteArray0 = new byte[2];
      LNInfo lNInfo0 = new LNInfo((LN) nameLN0, databaseId0, byteArray0, byteArray0);
      lookAheadCache0.hook166(lNInfo0);
  }

  @Test
  public void test04()  throws Throwable  {
      LookAheadCache lookAheadCache0 = new LookAheadCache(979);
      // Undeclared exception!
      try { 
        lookAheadCache0.remove((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.TreeMap", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      LookAheadCache lookAheadCache0 = new LookAheadCache((-699));
      // Undeclared exception!
      try { 
        lookAheadCache0.hook167((LNInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.LookAheadCache", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      LookAheadCache lookAheadCache0 = new LookAheadCache(643);
      // Undeclared exception!
      try { 
        lookAheadCache0.hook166((LNInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.LookAheadCache", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      LookAheadCache lookAheadCache0 = new LookAheadCache(512);
      Long long0 = new Long((long) 512);
      // Undeclared exception!
      try { 
        lookAheadCache0.add(long0, (LNInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.cleaner.LookAheadCache", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      LookAheadCache lookAheadCache0 = new LookAheadCache(512);
      Long long0 = new Long((long) 512);
      LNInfo lNInfo0 = lookAheadCache0.remove(long0);
      assertNull(lNInfo0);
  }

  @Test
  public void test09()  throws Throwable  {
      LookAheadCache lookAheadCache0 = new LookAheadCache(175);
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      MapLN mapLN0 = new MapLN(databaseImpl0);
      DatabaseId databaseId0 = new DatabaseId(0);
      byte[] byteArray0 = new byte[0];
      LNInfo lNInfo0 = new LNInfo((LN) mapLN0, databaseId0, byteArray0, byteArray0);
      lookAheadCache0.hook167(lNInfo0);
      //  // Unstable assertion: assertEquals(70L, mapLN0.getLastId());
      
      boolean boolean0 = lookAheadCache0.isFull();
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      LookAheadCache lookAheadCache0 = new LookAheadCache(1);
      boolean boolean0 = lookAheadCache0.isEmpty();
      assertTrue(boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      LookAheadCache lookAheadCache0 = new LookAheadCache(432);
      // Undeclared exception!
      try { 
        lookAheadCache0.nextOffset();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.TreeMap", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      LookAheadCache lookAheadCache0 = new LookAheadCache(432);
      Long long0 = new Long(0L);
      DatabaseId databaseId0 = new DatabaseId(432);
      NameLN nameLN0 = new NameLN(databaseId0);
      byte[] byteArray0 = new byte[9];
      LNInfo lNInfo0 = new LNInfo((LN) nameLN0, databaseId0, byteArray0, byteArray0);
      lookAheadCache0.add(long0, lNInfo0);
      LNInfo lNInfo1 = lookAheadCache0.remove(long0);
      assertSame(lNInfo1, lNInfo0);
  }
}
