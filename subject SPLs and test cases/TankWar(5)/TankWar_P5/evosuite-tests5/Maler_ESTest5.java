/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 02 22:18:06 KST 2016
 */


import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.fail;

import java.time.chrono.ThaiBuddhistDate;
import java.util.Vector;

import javax.swing.DebugGraphics;
import javax.swing.table.DefaultTableModel;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Maler_ESTest5   {
@BeforeClass
public static void initEvoSuiteFramework() {
}
@AfterClass
public static void exitEvoSuiteFramework() {
}

  @Test
  public void test00()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.gamesize();
      maler0.tankErstellen();
      assertFalse(maler0.isDisplayable());
  }

  @Test
  public void test01()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.GAME_HEIGHT = 1;
      // Undeclared exception!
      try { 
        maler0.tankErstellen();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (1) must be non-zero
         //
         assertThrownBy("java.awt.image.ReplicateScaleFilter", e);
      }
  }

  @Test
  public void test02()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.infoWidth = (-908);
      // Undeclared exception!
      try { 
        maler0.tankErstellen();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-908) and height (0) must be non-zero
         //
         assertThrownBy("java.awt.image.ReplicateScaleFilter", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.GAME_HEIGHT = (-373);
      maler0.infoWidth = 1278;
      maler0.tankErstellen();
      assertEquals(0, maler0.getY());
  }

  @Test
  public void test04()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) vector0, 1);
      Vector vector1 = defaultTableModel0.getDataVector();
      // Undeclared exception!
      try { 
        maler0.note(vector1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Vector cannot be cast to Note
         //
         assertThrownBy("Maler$$Re_fuer_PC", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      Vector<ThaiBuddhistDate> vector0 = new Vector<ThaiBuddhistDate>();
      // Undeclared exception!
      try { 
        maler0.note(vector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Menu", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.tankErstellen();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      Vector vector0 = defaultTableModel0.getDataVector();
      // Undeclared exception!
      try { 
        maler0.note(vector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Menu", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      // Undeclared exception!
      try { 
        maler0.gameWin();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Maler$$PC", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.tankErstellen();
      // Undeclared exception!
      try { 
        maler0.gameWin();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Menu", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      // Undeclared exception!
      try { 
        maler0.gameLevel(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Maler$$PC", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.GAME_HEIGHT = (-354);
      // Undeclared exception!
      try { 
        maler0.tankErstellen();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (-354) must be non-zero
         //
         assertThrownBy("java.awt.image.ReplicateScaleFilter", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        maler0.print(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("javax.swing.DebugGraphics", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.tankErstellen();
      // Undeclared exception!
      try { 
        maler0.gameLevel(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Menu", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.gamesize();
      Vector<ThaiBuddhistDate> vector0 = new Vector<ThaiBuddhistDate>();
      // Undeclared exception!
      try { 
        maler0.note(vector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Menu", e);
      }
  }
}
