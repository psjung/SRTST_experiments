/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 04 14:44:37 KST 2016
 */


import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class ExplodierenEffekt_ESTest2   {
	@BeforeClass
	public static void initEvoSuiteFramework() { 
		
	}
	@AfterClass
	public static void exitEvoSuiteFramework() { 
		
	}
  @Test
  public void test00()  throws Throwable  {
      ExplodierenEffekt explodierenEffekt0 = new ExplodierenEffekt();
      explodierenEffekt0.x_Koe = (-1720);
      // Undeclared exception!
      try { 
        explodierenEffekt0.malen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ExplodierenEffekt", e);
      }
  }

  @Test
  public void test01()  throws Throwable  {
      ExplodierenEffekt explodierenEffekt0 = new ExplodierenEffekt();
      explodierenEffekt0.colorG = (-4271);
      // Undeclared exception!
      try { 
        explodierenEffekt0.malen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ExplodierenEffekt", e);
      }
  }

  @Test
  public void test02()  throws Throwable  {
      ExplodierenEffekt explodierenEffekt0 = new ExplodierenEffekt();
      explodierenEffekt0.step = 3101;
      // Undeclared exception!
      try { 
        explodierenEffekt0.malen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ExplodierenEffekt", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      ExplodierenEffekt explodierenEffekt0 = new ExplodierenEffekt();
      explodierenEffekt0.y_Koordinate = (-566);
      // Undeclared exception!
      try { 
        explodierenEffekt0.malen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ExplodierenEffekt", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      ExplodierenEffekt explodierenEffekt0 = new ExplodierenEffekt();
      explodierenEffekt0.objectType = 2;
      // Undeclared exception!
      try { 
        explodierenEffekt0.malen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ExplodierenEffekt", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      ExplodierenEffekt explodierenEffekt0 = new ExplodierenEffekt();
      explodierenEffekt0.objHeight = 46;
      // Undeclared exception!
      try { 
        explodierenEffekt0.malen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ExplodierenEffekt", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      ExplodierenEffekt explodierenEffekt0 = new ExplodierenEffekt();
      explodierenEffekt0.y_Koe = (-4500);
      // Undeclared exception!
      try { 
        explodierenEffekt0.malen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ExplodierenEffekt", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      ExplodierenEffekt explodierenEffekt0 = new ExplodierenEffekt();
      explodierenEffekt0.objHeight_Koe = (-1655);
      // Undeclared exception!
      try { 
        explodierenEffekt0.malen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ExplodierenEffekt", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      ExplodierenEffekt explodierenEffekt0 = new ExplodierenEffekt();
      explodierenEffekt0.objWidth = 892;
      // Undeclared exception!
      try { 
        explodierenEffekt0.malen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ExplodierenEffekt", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      ExplodierenEffekt explodierenEffekt0 = new ExplodierenEffekt();
      explodierenEffekt0.x_Koordinate = 3548;
      // Undeclared exception!
      try { 
        explodierenEffekt0.malen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ExplodierenEffekt", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      ExplodierenEffekt explodierenEffekt0 = new ExplodierenEffekt();
      explodierenEffekt0.colorB = 8;
      // Undeclared exception!
      try { 
        explodierenEffekt0.malen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ExplodierenEffekt", e);
      }
  }
}
