/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 02 20:47:36 KST 2016
 */


import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.fail;

import java.awt.Graphics;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Maler_ESTest2   {
@BeforeClass
public static void initEvoSuiteFramework() {
}
@AfterClass
public static void exitEvoSuiteFramework() {
}

  @Test
  public void test0()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.GAME_HEIGHT = 26;
      // Undeclared exception!
      try { 
        maler0.tankErstellen();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (26) must be non-zero
         //
         assertThrownBy("java.awt.image.ReplicateScaleFilter", e);
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.infoWidth = (-1030);
      // Undeclared exception!
      try { 
        maler0.tankErstellen();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (-1030) and height (0) must be non-zero
         //
         assertThrownBy("java.awt.image.ReplicateScaleFilter", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.gamesize();
      maler0.infoWidth = 38;
      maler0.tankErstellen();
      assertFalse(maler0.isValid());
  }

  @Test
  public void test3()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      // Undeclared exception!
      try { 
        maler0.gameWin();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Maler$$PC", e);
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.tankErstellen();
      // Undeclared exception!
      try { 
        maler0.gameWin();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Menu", e);
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      // Undeclared exception!
      try { 
        maler0.gameLevel(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Maler$$PC", e);
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.GAME_HEIGHT = (-767);
      // Undeclared exception!
      try { 
        maler0.tankErstellen();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (-767) must be non-zero
         //
         assertThrownBy("java.awt.image.ReplicateScaleFilter", e);
      }
  }

  @Test
  public void test7()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      // Undeclared exception!
      try { 
        maler0.print((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Maler$$PC", e);
      }
  }

  @Test
  public void test8()  throws Throwable  {
      Maler maler0 = new Maler((GameManager) null);
      maler0.tankErstellen();
      // Undeclared exception!
      try { 
        maler0.gameLevel(2019);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Menu", e);
      }
  }
}
