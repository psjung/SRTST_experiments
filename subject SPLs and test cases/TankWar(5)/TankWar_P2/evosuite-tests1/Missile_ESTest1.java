/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 02 20:38:31 KST 2016
 */


import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Missile_ESTest1   {
@BeforeClass
public static void initEvoSuiteFramework() {
}
@AfterClass
public static void exitEvoSuiteFramework() {
}

  @Test
  public void test00()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 2, 2, 2, 1, 8, 1, false, 1);
      missile0.currTime = (long) 1;
      // Undeclared exception!
      try { 
        missile0.malen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile", e);
      }
  }

  @Test
  public void test01()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 629, (-2201), (-2201), (-2201), 586, 629, false, 629);
      missile0.x_Koordinate = 4220;
      // Undeclared exception!
      try { 
        missile0.koordinateAktualisieren((-2201));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }

  @Test
  public void test02()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 629, 629, 629, 629, 629, 629, false, 629);
      // Undeclared exception!
      try { 
        missile0.treffenErkennen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, (-3211), 2, 2, (-3211), 2, 73, true, (-3211));
      // Undeclared exception!
      try { 
        missile0.malen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 629, (-2201), (-2201), (-2201), 586, 629, false, 629);
      missile0.y_Koordinate = (-147);
      // Undeclared exception!
      try { 
        missile0.koordinateAktualisieren((-2201));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 629, (-2201), (-2201), (-2201), (-2201), 629, false, 629);
      missile0.x_Koordinate = (-9);
      // Undeclared exception!
      try { 
        missile0.koordinateAktualisieren(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 1, 1, 1, 1, 1, 1, false, 1);
      // Undeclared exception!
      try { 
        missile0.koordinateAktualisieren(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, (-1), (-1), (-1), (-1), 7, (-1274), true, 993);
      // Undeclared exception!
      try { 
        missile0.koordinateAktualisieren((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 3646, 3646, 3646, 3646, 6, 3646, false, 3646);
      // Undeclared exception!
      try { 
        missile0.koordinateAktualisieren(6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 0, 9, 9, 5, 5, 5, false, 1414);
      // Undeclared exception!
      try { 
        missile0.koordinateAktualisieren(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 4, 4, (-450), (-450), 4, 4, true, 4);
      // Undeclared exception!
      try { 
        missile0.koordinateAktualisieren((-450));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 3, 20, 20, (-2495), 3, 20, true, (-261));
      // Undeclared exception!
      try { 
        missile0.koordinateAktualisieren(41);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 2, 2, (-450), (-450), 2, 2, true, 2);
      // Undeclared exception!
      try { 
        missile0.koordinateAktualisieren((-450));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 1, 1, (-450), (-450), 1, 1, false, 1);
  }

  @Test
  public void test14()  throws Throwable  {
      Missile missile0 = null;
      try {
        missile0 = new Missile((TankManager) null, (-149), (-149), (-411), (-149), (-3204), 70, true, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 14, 14, 14, 14, 14, (-1274), true, 1026);
      // Undeclared exception!
      try { 
        missile0.explodieren();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }

  @Test
  public void test16()  throws Throwable  {
      Missile missile0 = new Missile((TankManager) null, 111, 111, 111, (-2601), 111, 1919, true, 111);
      // Undeclared exception!
      try { 
        missile0.remove();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("Missile$$TankWar", e);
      }
  }
}
