/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 24 16:13:38 KST 2018
 */


import static org.evosuite.runtime.EvoAssertions.verifyException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class DrinkOrder_ESTest extends DrinkOrder_ESTest_scaffolding {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DrinkOrder drinkOrder0 = new DrinkOrder((Beverages) null, false, 4);
      boolean boolean0 = drinkOrder0.isSugar();
      assertFalse(boolean0);
      assertFalse(drinkOrder0.getMilk());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cappuccino cappuccino0 = new Cappuccino();
      DrinkOrder drinkOrder0 = new DrinkOrder(cappuccino0, true, 0);
      assertFalse(drinkOrder0.getMilk());
      
      drinkOrder0.setMilk(true);
      boolean boolean0 = drinkOrder0.getMilk();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DrinkOrder drinkOrder0 = new DrinkOrder((Beverages) null, true, 0);
      drinkOrder0.getDrink();
      assertTrue(drinkOrder0.isSugar());
      assertFalse(drinkOrder0.getMilk());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DrinkOrder drinkOrder0 = new DrinkOrder((Beverages) null, true, 0);
      drinkOrder0.OrderType();
      assertFalse(drinkOrder0.getMilk());
      assertTrue(drinkOrder0.isSugar());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Cappuccino cappuccino0 = new Cappuccino();
      DrinkOrder drinkOrder0 = new DrinkOrder(cappuccino0, true, 4);
      boolean boolean0 = drinkOrder0.isSugar();
      assertTrue(boolean0);
      assertFalse(drinkOrder0.getMilk());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Cappuccino cappuccino0 = new Cappuccino();
      DrinkOrder drinkOrder0 = new DrinkOrder(cappuccino0, true, 0);
      drinkOrder0.setSugar(true);
      assertTrue(drinkOrder0.isSugar());
      assertFalse(drinkOrder0.getMilk());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Cappuccino cappuccino0 = new Cappuccino();
      DrinkOrder drinkOrder0 = new DrinkOrder(cappuccino0, false, 0);
      boolean boolean0 = drinkOrder0.getMilk();
      assertFalse(boolean0);
      assertFalse(drinkOrder0.isSugar());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Cappuccino cappuccino0 = new Cappuccino();
      DrinkOrder drinkOrder0 = new DrinkOrder(cappuccino0, true, 0);
      // Undeclared exception!
      try { 
        drinkOrder0.setRing();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("DrinkOrder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Cappuccino cappuccino0 = new Cappuccino();
      DrinkOrder drinkOrder0 = new DrinkOrder(cappuccino0, true, 0);
      drinkOrder0.OrderType();
      assertTrue(drinkOrder0.isSugar());
      assertFalse(drinkOrder0.getMilk());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Cappuccino cappuccino0 = new Cappuccino();
      DrinkOrder drinkOrder0 = new DrinkOrder(cappuccino0, true, 0);
      drinkOrder0.getDrink();
      assertFalse(drinkOrder0.getMilk());
      assertTrue(drinkOrder0.isSugar());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Cappuccino cappuccino0 = new Cappuccino();
      DrinkOrder drinkOrder0 = new DrinkOrder(cappuccino0, true, 4);
      // Undeclared exception!
      try { 
        drinkOrder0.ring();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("DrinkOrder", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Cappuccino cappuccino0 = new Cappuccino();
      DrinkOrder drinkOrder0 = new DrinkOrder(cappuccino0, false, 0);
      // Undeclared exception!
      try { 
        drinkOrder0.init();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("DrinkOrder", e);
      }
  }
}
