/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 14 00:05:54 KST 2018
 */

package lancs.mobilemedia.core.ui.controller;

import static org.evosuite.shaded.org.mockito.Mockito.doReturn;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.shaded.org.mockito.Mockito.mock;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;

import javax.microedition.lcdui.Command;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

import lancs.mobilemedia.core.ui.MainUIMidlet;
import lancs.mobilemedia.core.ui.datamodel.MusicAlbumData;
import lancs.mobilemedia.core.ui.datamodel.VideoAlbumData;
import lancs.mobilemedia.core.ui.screens.AlbumListScreen;
import lancs.mobilemedia.core.ui.screens.PlayVideoScreen;
import lancs.mobilemedia.sms.SmsSenderController;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class PlayVideoController_ESTest2 extends PlayVideoController_ESTest_scaffolding2 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      MusicAlbumData musicAlbumData0 = new MusicAlbumData();
      AlbumListScreen albumListScreen0 = new AlbumListScreen();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SmsSenderController smsSenderController0 = new SmsSenderController(mainUIMidlet0, musicAlbumData0, albumListScreen0, "");
      PlayVideoScreen playVideoScreen0 = new PlayVideoScreen(mainUIMidlet0, sequenceInputStream0, "", smsSenderController0);
      PlayVideoController playVideoController0 = new PlayVideoController(mainUIMidlet0, musicAlbumData0, albumListScreen0, playVideoScreen0);
      playVideoController0.setMediaName("C");
      String string0 = playVideoController0.getMediaName();
      assertEquals("C", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      VideoAlbumData videoAlbumData0 = new VideoAlbumData();
      AlbumListScreen albumListScreen0 = new AlbumListScreen();
      PlayVideoController playVideoController0 = new PlayVideoController(mainUIMidlet0, videoAlbumData0, albumListScreen0, (PlayVideoScreen) null);
      playVideoController0.setMediaName("");
      String string0 = playVideoController0.getMediaName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      MusicAlbumData musicAlbumData0 = new MusicAlbumData();
      AlbumListScreen albumListScreen0 = new AlbumListScreen();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SmsSenderController smsSenderController0 = new SmsSenderController(mainUIMidlet0, musicAlbumData0, albumListScreen0, "");
      PlayVideoScreen playVideoScreen0 = new PlayVideoScreen(mainUIMidlet0, sequenceInputStream0, "", smsSenderController0);
      PlayVideoController playVideoController0 = new PlayVideoController(mainUIMidlet0, musicAlbumData0, albumListScreen0, playVideoScreen0);
      Command command0 = PlayVideoScreen.copy;
      // Undeclared exception!
      try { 
        playVideoController0.handleCommand(command0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      MusicAlbumData musicAlbumData0 = new MusicAlbumData();
      AlbumListScreen albumListScreen0 = new AlbumListScreen();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SmsSenderController smsSenderController0 = new SmsSenderController(mainUIMidlet0, musicAlbumData0, albumListScreen0, "");
      PlayVideoScreen playVideoScreen0 = new PlayVideoScreen(mainUIMidlet0, sequenceInputStream0, "", smsSenderController0);
      PlayVideoController playVideoController0 = new PlayVideoController(mainUIMidlet0, musicAlbumData0, albumListScreen0, playVideoScreen0);
      String string0 = playVideoController0.getMediaName();
      assertNull(string0);
  }
}
