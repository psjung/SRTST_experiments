/*
 * This file was automatically generated by EvoSuite
 * Mon Aug 13 21:40:42 KST 2018
 */

package lancs.mobilemedia.core.ui.screens;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.fail;

import java.io.PipedInputStream;
import java.io.PushbackInputStream;

import javax.microedition.lcdui.Gauge;
import javax.microedition.lcdui.Graphics;
import javax.microedition.lcdui.TextField;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import lancs.mobilemedia.core.ui.MainUIMidlet;
import lancs.mobilemedia.core.ui.controller.AbstractController;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class PlayMediaScreen_ESTest3 extends PlayMediaScreen_ESTest_scaffolding3 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      PlayMediaScreen playMediaScreen0 = new PlayMediaScreen(mainUIMidlet0, pushbackInputStream0, "", (AbstractController) null);
      playMediaScreen0.pausePlay();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      PlayMediaScreen playMediaScreen0 = new PlayMediaScreen(mainUIMidlet0, pushbackInputStream0, "", (AbstractController) null);
      playMediaScreen0.startPlay();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      PlayMediaScreen playMediaScreen0 = new PlayMediaScreen(mainUIMidlet0, pushbackInputStream0, "", (AbstractController) null);
      Gauge gauge0 = new Gauge("", true, 0, 0);
      playMediaScreen0.volGauge = gauge0;
      // Undeclared exception!
      try { 
        playMediaScreen0.itemStateChanged(gauge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lancs.mobilemedia.core.ui.screens.PlayMediaScreen", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      PlayMediaScreen playMediaScreen0 = new PlayMediaScreen(mainUIMidlet0, pushbackInputStream0, "", (AbstractController) null);
      TextField textField0 = new TextField("", "", 0, 0);
      playMediaScreen0.itemStateChanged(textField0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      PlayMediaScreen playMediaScreen0 = new PlayMediaScreen(mainUIMidlet0, pushbackInputStream0, "", (AbstractController) null);
      Gauge gauge0 = new Gauge("", true, 0, 0);
      playMediaScreen0.itemStateChanged(gauge0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      PlayMediaScreen playMediaScreen0 = new PlayMediaScreen(mainUIMidlet0, pushbackInputStream0, "", (AbstractController) null);
      playMediaScreen0.paint((Graphics) null);
  }
}
