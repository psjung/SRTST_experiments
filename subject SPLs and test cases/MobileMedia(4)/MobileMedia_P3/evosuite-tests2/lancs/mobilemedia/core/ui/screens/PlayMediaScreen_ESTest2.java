/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 14 00:20:39 KST 2018
 */

package lancs.mobilemedia.core.ui.screens;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.fail;

import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;

import javax.microedition.lcdui.Gauge;
import javax.microedition.lcdui.Graphics;
import javax.microedition.lcdui.Item;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import lancs.mobilemedia.core.ui.MainUIMidlet;
import lancs.mobilemedia.core.ui.controller.AbstractController;
import lancs.mobilemedia.core.ui.controller.MediaListController;
import lancs.mobilemedia.core.ui.datamodel.AlbumData;
import lancs.mobilemedia.core.ui.datamodel.MusicAlbumData;
import lancs.mobilemedia.sms.SmsReceiverController;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class PlayMediaScreen_ESTest2 extends PlayMediaScreen_ESTest_scaffolding2 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      AlbumListScreen albumListScreen0 = new AlbumListScreen();
      SmsReceiverController smsReceiverController0 = new SmsReceiverController(mainUIMidlet0, (AlbumData) null, albumListScreen0);
      PlayMediaScreen playMediaScreen0 = new PlayMediaScreen(mainUIMidlet0, (InputStream) null, "", smsReceiverController0);
      playMediaScreen0.pausePlay();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      AlbumListScreen albumListScreen0 = new AlbumListScreen();
      SmsReceiverController smsReceiverController0 = new SmsReceiverController(mainUIMidlet0, (AlbumData) null, albumListScreen0);
      PlayMediaScreen playMediaScreen0 = new PlayMediaScreen(mainUIMidlet0, (InputStream) null, "", smsReceiverController0);
      playMediaScreen0.startPlay();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      PlayMediaScreen playMediaScreen0 = new PlayMediaScreen(mainUIMidlet0, (InputStream) null, "", (AbstractController) null);
      Gauge gauge0 = new Gauge("", false, 0, 0);
      playMediaScreen0.volGauge = gauge0;
      // Undeclared exception!
      try { 
        playMediaScreen0.itemStateChanged(gauge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lancs.mobilemedia.core.ui.screens.PlayMediaScreen", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      MusicAlbumData musicAlbumData0 = new MusicAlbumData();
      AlbumListScreen albumListScreen0 = new AlbumListScreen();
      MediaListController mediaListController0 = new MediaListController(mainUIMidlet0, musicAlbumData0, albumListScreen0);
      PlayMediaScreen playMediaScreen0 = new PlayMediaScreen(mainUIMidlet0, (InputStream) null, "", mediaListController0);
      playMediaScreen0.itemStateChanged((Item) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      PlayMediaScreen playMediaScreen0 = new PlayMediaScreen(mainUIMidlet0, (InputStream) null, "", (AbstractController) null);
      Gauge gauge0 = new Gauge("", false, 0, 0);
      playMediaScreen0.itemStateChanged(gauge0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MainUIMidlet mainUIMidlet0 = new MainUIMidlet();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PlayMediaScreen playMediaScreen0 = new PlayMediaScreen(mainUIMidlet0, pipedInputStream0, "", (AbstractController) null);
      playMediaScreen0.paint((Graphics) null);
  }
}
