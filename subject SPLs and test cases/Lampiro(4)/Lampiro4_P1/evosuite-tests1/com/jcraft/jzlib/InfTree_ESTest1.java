/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 00:22:53 KST 2018
 */

package com.jcraft.jzlib;

import static org.junit.Assert.assertArrayEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class InfTree_ESTest1 extends InfTree_ESTest_scaffolding1 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InfTree infTree0 = new InfTree();
      int[] intArray0 = new int[8];
      ZStream zStream0 = new ZStream();
      infTree0.inflate_trees_dynamic(1, 0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, zStream0);
      // Undeclared exception!
      try { 
        infTree0.inflate_trees_bits(intArray0, intArray0, intArray0, intArray0, zStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[0];
      int[][] intArray1 = new int[1][2];
      ZStream zStream0 = new ZStream();
      // Undeclared exception!
      try { 
        InfTree.inflate_trees_fixed(intArray0, intArray0, intArray1, intArray1, zStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InfTree infTree0 = new InfTree();
      int[] intArray0 = new int[1];
      ZStream zStream0 = new ZStream();
      // Undeclared exception!
      try { 
        infTree0.inflate_trees_bits((int[]) null, intArray0, intArray0, intArray0, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[1];
      int int0 = 1109;
      intArray0[0] = 1109;
      int[][] intArray1 = new int[5][9];
      int[] intArray2 = new int[4];
      intArray2[0] = 1109;
      intArray2[1] = 1109;
      intArray2[2] = 1109;
      intArray2[3] = 1109;
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[4] = intArray0;
      ZStream zStream0 = new ZStream();
      InfTree.inflate_trees_fixed(intArray0, intArray0, intArray1, intArray1, zStream0);
      InfTree infTree0 = new InfTree();
      intArray1[2] = intArray0;
      ZStream zStream1 = new ZStream();
      // Undeclared exception!
      try { 
        infTree0.inflate_trees_bits(intArray1[0], intArray1[0], intArray0, intArray0, zStream1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 192
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InfTree infTree0 = new InfTree();
      int[] intArray0 = new int[14];
      // Undeclared exception!
      try { 
        infTree0.inflate_trees_dynamic(1, 0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, (ZStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InfTree infTree0 = new InfTree();
      int[] intArray0 = new int[17];
      intArray0[0] = 2;
      // Undeclared exception!
      try { 
        infTree0.inflate_trees_dynamic(1, 0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, (ZStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      InfTree infTree0 = new InfTree();
      int[] intArray0 = new int[17];
      intArray0[0] = 1;
      int[] intArray1 = new int[9];
      infTree0.inflate_trees_dynamic(1, 1, intArray0, intArray1, intArray1, intArray0, intArray0, intArray0, (ZStream) null);
      assertArrayEquals(new int[] {1, 0, 0, 0, 0, 0, 0, 0, 0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      InfTree infTree0 = new InfTree();
      int[] intArray0 = new int[17];
      intArray0[0] = 1;
      int[] intArray1 = new int[9];
      intArray1[0] = 2;
      // Undeclared exception!
      try { 
        infTree0.inflate_trees_dynamic(1, 0, intArray0, intArray1, intArray1, intArray0, intArray0, intArray0, (ZStream) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 192
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = (-1537);
      intArray0[1] = (-1649);
      intArray0[2] = 272;
      intArray0[3] = (-129);
      intArray0[4] = 2581;
      int[][] intArray1 = new int[2][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      ZStream zStream0 = new ZStream();
      zStream0.adler = (long) 272;
      zStream0.inflateSync();
      zStream0.deflateParams(19, (-2));
      zStream0.data_type = (-1649);
      zStream0.deflateInit(219, (-1649));
      InfTree.inflate_trees_fixed(intArray0, intArray0, intArray1, intArray1, zStream0);
      InfTree.inflate_trees_fixed(intArray1[0], intArray1[0], intArray1, intArray1, (ZStream) null);
      InfTree infTree0 = new InfTree();
      ZStream zStream1 = new ZStream();
      infTree0.r = intArray0;
      zStream1.deflateInit(0, (-2));
      // Undeclared exception!
      try { 
        infTree0.inflate_trees_bits(intArray1[0], intArray0, intArray1[0], intArray1[0], zStream1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 192
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      int[][] intArray0 = new int[3][5];
      ZStream zStream0 = new ZStream();
      // Undeclared exception!
      try { 
        InfTree.inflate_trees_fixed((int[]) null, (int[]) null, intArray0, intArray0, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }
}
