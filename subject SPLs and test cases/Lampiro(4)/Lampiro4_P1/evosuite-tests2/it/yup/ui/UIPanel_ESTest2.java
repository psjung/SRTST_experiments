/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 11:29:09 KST 2018
 */

package it.yup.ui;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.Vector;

import javax.microedition.lcdui.Graphics;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class UIPanel_ESTest2 extends UIPanel_ESTest_scaffolding2 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      
      uIAccordion0.selectedIdx = 1;
      uIAccordion0.getSelectedItem();
      assertFalse(uIAccordion0.isModal());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      uIAccordion0.setSelectedIndex(1);
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertFalse(uIAccordion0.isModal());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isListMode());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UITextPanel uITextPanel0 = new UITextPanel();
      uITextPanel0.selectedIdx = 2;
      // Undeclared exception!
      try { 
        uITextPanel0.removeItemAt(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, false);
      assertEquals((-1), uIPanel0.getSelectedIndex());
      
      uIPanel0.selectedIdx = 1;
      uIPanel0.setSelected(true);
      assertTrue(uIPanel0.isModal());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      boolean boolean0 = uIPanel0.isModal();
      assertFalse(uIPanel0.isListMode());
      assertEquals((-1), uIPanel0.getSelectedIndex());
      assertEquals((-1), uIPanel0.getMaxHeight());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      boolean boolean0 = uIAccordion0.isListMode();
      assertFalse(uIAccordion0.isModal());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      uIPanel0.setWidth(1);
      UIPanel uIPanel1 = (UIPanel)uIPanel0.getSelectedItem();
      assertEquals((-1), uIPanel1.getSelectedIndex());
      assertFalse(uIPanel1.isListMode());
      assertEquals((-1), uIPanel1.getMaxHeight());
      assertFalse(uIPanel1.isModal());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(false, false);
      uIPanel0.setLayoutWidth(1);
      UIPanel uIPanel1 = (UIPanel)uIPanel0.getSelectedItem();
      assertEquals((-1), uIPanel1.getMaxHeight());
      assertFalse(uIPanel1.isModal());
      assertFalse(uIPanel1.isListMode());
      assertEquals((-1), uIPanel1.getSelectedIndex());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      uIAccordion0.setLayoutHeight((-1));
      UIAccordion uIAccordion1 = (UIAccordion)uIAccordion0.getSelectedItem();
      assertEquals((-1), uIAccordion1.getMaxHeight());
      assertFalse(uIAccordion1.isModal());
      assertFalse(uIAccordion1.isListMode());
      assertEquals((-1), uIAccordion1.getSelectedIndex());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, false);
      uIPanel0.fg_color = 1;
      UIPanel uIPanel1 = (UIPanel)uIPanel0.getSelectedItem();
      assertFalse(uIPanel1.isListMode());
      assertEquals((-1), uIPanel1.getSelectedIndex());
      assertTrue(uIPanel1.isModal());
      assertEquals((-1), uIPanel1.getMaxHeight());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, false);
      uIPanel0.setBg_color(1);
      UIPanel uIPanel1 = (UIPanel)uIPanel0.getSelectedItem();
      assertTrue(uIPanel1.isModal());
      assertFalse(uIPanel1.isListMode());
      assertEquals((-1), uIPanel1.getSelectedIndex());
      assertEquals((-1), uIPanel1.getMaxHeight());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(false, false);
      assertEquals((-1), uIPanel0.getMaxHeight());
      
      uIPanel0.setMaxHeight(1);
      int int0 = uIPanel0.getMaxHeight();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      assertEquals((-1), uIPanel0.getMaxHeight());
      
      uIPanel0.setMaxHeight(1);
      int int0 = uIPanel0.getHeight((Graphics) null);
      assertEquals(1, uIPanel0.getMaxHeight());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      assertEquals(0, uIPanel0.getFirstVisible());
      
      uIPanel0.setFirstVisible(1);
      int int0 = uIPanel0.getFirstVisible();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      assertEquals(0, uIPanel0.getFirstVisible());
      
      uIPanel0.setFirstVisible((-1));
      int int0 = uIPanel0.getFirstVisible();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      // Undeclared exception!
      try { 
        uIAccordion0.updateChildren();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      UIHLayout uIHLayout0 = new UIHLayout(1);
      uIAccordion0.insertSpareItem(uIHLayout0, 0);
      // Undeclared exception!
      try { 
        uIAccordion0.setSelectedItem(uIHLayout0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      UIHLayout uIHLayout0 = new UIHLayout(1);
      UIItem uIItem0 = uIHLayout0.getSelectedItem();
      uIAccordion0.insertSpareItem(uIItem0, 0);
      uIItem0.selected = true;
      // Undeclared exception!
      try { 
        uIAccordion0.removeItemAt(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      // Undeclared exception!
      try { 
        uIAccordion0.removeItemAt(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      UILabel uILabel0 = new UILabel("");
      // Undeclared exception!
      try { 
        uIAccordion0.removeItem(uILabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIAccordion$AccordionItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      uIPanel0.setItems((Vector) null);
      // Undeclared exception!
      try { 
        uIPanel0.removeAllItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(false, false);
      // Undeclared exception!
      try { 
        uIPanel0.paint((Graphics) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UITextPanel uITextPanel0 = new UITextPanel();
      // Undeclared exception!
      try { 
        uITextPanel0.insertItemAt((UIItem) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      // Undeclared exception!
      try { 
        uIPanel0.drawScrollBar((Graphics) null, 0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(false, false);
      // Undeclared exception!
      try { 
        uIPanel0.computeRealHeight((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      // Undeclared exception!
      try { 
        uIAccordion0.addItem((UIItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UICanvas", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(false, false);
      assertEquals((-1), uIPanel0.getSelectedIndex());
      
      uIPanel0.setSelectedIndex((-1));
      assertFalse(uIPanel0.isListMode());
      assertFalse(uIPanel0.isModal());
      assertEquals((-1), uIPanel0.getMaxHeight());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      uIAccordion0.removeItemAt((-1));
      assertFalse(uIAccordion0.isModal());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isListMode());
      assertEquals((-1), uIAccordion0.getMaxHeight());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(false, false);
      uIPanel0.setDirty(true);
      assertEquals((-1), uIPanel0.getMaxHeight());
      assertFalse(uIPanel0.isModal());
      assertFalse(uIPanel0.isListMode());
      assertEquals((-1), uIPanel0.getSelectedIndex());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      uIPanel0.setScreen((UIScreen) null);
      assertFalse(uIPanel0.isModal());
      assertEquals((-1), uIPanel0.getSelectedIndex());
      assertFalse(uIPanel0.isListMode());
      assertEquals((-1), uIPanel0.getMaxHeight());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, true);
      Vector<Integer> vector0 = new Vector<Integer>();
      uIPanel0.setItems(vector0);
      Integer integer0 = new Integer(0);
      vector0.add(integer0);
      // Undeclared exception!
      try { 
        uIPanel0.contains(uIPanel0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to it.yup.ui.UIItem
         //
         verifyException("it.yup.ui.UIPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      
      UIHLayout uIHLayout0 = new UIHLayout(0);
      uIAccordion0.insertSpareItem(uIHLayout0, 0);
      boolean boolean0 = uIAccordion0.contains(uIHLayout0);
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, true);
      boolean boolean0 = uIPanel0.contains(uIPanel0);
      assertTrue(uIPanel0.isModal());
      assertEquals((-1), uIPanel0.getSelectedIndex());
      assertTrue(uIPanel0.isListMode());
      assertEquals((-1), uIPanel0.getMaxHeight());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, false);
      assertEquals((-1), uIPanel0.getSelectedIndex());
      
      uIPanel0.selectedIdx = 0;
      uIPanel0.getSelectedItem();
      assertEquals((-1), uIPanel0.getMaxHeight());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      UIHLayout uIHLayout0 = new UIHLayout(0);
      uIAccordion0.insertSpareItem(uIHLayout0, 0);
      uIAccordion0.setSelectedItem(uIHLayout0);
      assertTrue(uIHLayout0.isSelected());
      assertEquals(0, uIAccordion0.getSelectedIndex());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      uIAccordion0.setSelectedIndex((-2));
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isListMode());
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertFalse(uIAccordion0.isModal());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UITextPanel uITextPanel0 = new UITextPanel();
      uITextPanel0.selectedIdx = 1;
      uITextPanel0.removeAllItems();
      assertEquals((-1), uITextPanel0.getSelectedIndex());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      UITextPanel uITextPanel0 = new UITextPanel();
      UIVLayout uIVLayout0 = new UIVLayout(0, 0);
      uITextPanel0.insertItemAt(uIVLayout0, 1);
      assertEquals((-1), uITextPanel0.getMaxHeight());
      assertFalse(uITextPanel0.isModal());
      assertEquals((-1), uITextPanel0.getSelectedIndex());
      assertFalse(uITextPanel0.isListMode());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      String[] stringArray0 = new String[0];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      uIPanel0.insertItemAt(uIRadioButtons0, (-1));
      assertEquals((-1), uIPanel0.getMaxHeight());
      assertFalse(uIPanel0.isModal());
      assertEquals((-1), uIPanel0.getSelectedIndex());
      assertFalse(uIPanel0.isListMode());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      UIHLayout uIHLayout0 = new UIHLayout(0);
      uIAccordion0.insertSpareItem(uIHLayout0, 0);
      uIAccordion0.removeItemAt(0);
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isListMode());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      UITextPanel uITextPanel0 = new UITextPanel();
      uITextPanel0.removeItemAt(1);
      assertEquals((-1), uITextPanel0.getSelectedIndex());
      assertFalse(uITextPanel0.isListMode());
      assertEquals((-1), uITextPanel0.getMaxHeight());
      assertFalse(uITextPanel0.isModal());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, true);
      int int0 = uIPanel0.removeItem(uIPanel0);
      assertTrue(uIPanel0.isListMode());
      assertEquals((-1), uIPanel0.getSelectedIndex());
      assertEquals((-1), int0);
      assertTrue(uIPanel0.isModal());
      assertEquals((-1), uIPanel0.getMaxHeight());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      uIAccordion0.setMaxHeight((-2));
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertFalse(uIAccordion0.isModal());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isListMode());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      UIGauge uIGauge0 = new UIGauge("", true, 0, 0);
      uIPanel0.addItem(uIGauge0);
      assertEquals((-1), uIPanel0.getSelectedIndex());
      
      uIPanel0.setSelected(true);
      assertEquals(0, uIPanel0.getSelectedIndex());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, false);
      assertEquals((-1), uIPanel0.getSelectedIndex());
      
      uIPanel0.selectedIdx = 0;
      uIPanel0.setSelected(true);
      assertFalse(uIPanel0.isListMode());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, true);
      uIPanel0.setSelected(true);
      assertEquals((-1), uIPanel0.getSelectedIndex());
      assertTrue(uIPanel0.isListMode());
      assertEquals((-1), uIPanel0.getMaxHeight());
      assertTrue(uIPanel0.isModal());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      uIPanel0.setSelected(false);
      assertEquals((-1), uIPanel0.getMaxHeight());
      assertFalse(uIPanel0.isModal());
      assertEquals((-1), uIPanel0.getSelectedIndex());
      assertFalse(uIPanel0.isListMode());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(false, true);
      // Undeclared exception!
      try { 
        uIPanel0.keyPressed(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UICanvas", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      boolean boolean0 = uIPanel0.isDirty();
      assertEquals((-1), uIPanel0.getMaxHeight());
      assertTrue(boolean0);
      assertFalse(uIPanel0.isModal());
      assertEquals((-1), uIPanel0.getSelectedIndex());
      assertFalse(uIPanel0.isListMode());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      assertEquals((-1), uIPanel0.getMaxHeight());
      
      uIPanel0.setMaxHeight(0);
      int int0 = uIPanel0.getHeight((Graphics) null);
      assertEquals(0, uIPanel0.getMaxHeight());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      // Undeclared exception!
      try { 
        uIPanel0.getHeight((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      Vector<UICheckbox> vector0 = new Vector<UICheckbox>();
      vector0.add((UICheckbox) null);
      uIPanel0.setItems(vector0);
      // Undeclared exception!
      try { 
        uIPanel0.setScreen((UIScreen) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, true);
      Vector<Integer> vector0 = new Vector<Integer>();
      uIPanel0.setItems(vector0);
      Integer integer0 = new Integer(0);
      vector0.add(integer0);
      // Undeclared exception!
      try { 
        uIPanel0.setSelected(true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to it.yup.ui.UIItem
         //
         verifyException("it.yup.ui.UIPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, true);
      boolean boolean0 = uIPanel0.isModal();
      assertEquals((-1), uIPanel0.getSelectedIndex());
      assertTrue(boolean0);
      assertTrue(uIPanel0.isListMode());
      assertEquals((-1), uIPanel0.getMaxHeight());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, true);
      int int0 = uIPanel0.getFirstVisible();
      assertEquals((-1), uIPanel0.getSelectedIndex());
      assertEquals(0, int0);
      assertTrue(uIPanel0.isModal());
      assertTrue(uIPanel0.isListMode());
      assertEquals((-1), uIPanel0.getMaxHeight());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, true);
      boolean boolean0 = uIPanel0.isListMode();
      assertEquals((-1), uIPanel0.getSelectedIndex());
      assertTrue(uIPanel0.isModal());
      assertEquals((-1), uIPanel0.getMaxHeight());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      int int0 = uIPanel0.getSelectedIndex();
      assertFalse(uIPanel0.isListMode());
      assertEquals((-1), int0);
      assertEquals((-1), uIPanel0.getMaxHeight());
      assertFalse(uIPanel0.isModal());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(false, false);
      uIPanel0.setListMode(false);
      assertEquals((-1), uIPanel0.getMaxHeight());
      assertFalse(uIPanel0.isModal());
      assertFalse(uIPanel0.isListMode());
      assertEquals((-1), uIPanel0.getSelectedIndex());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, true);
      boolean boolean0 = uIPanel0.isFocusable();
      assertEquals((-1), uIPanel0.getMaxHeight());
      assertTrue(boolean0);
      assertTrue(uIPanel0.isListMode());
      assertTrue(uIPanel0.isModal());
      assertEquals((-1), uIPanel0.getSelectedIndex());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(true, true);
      uIPanel0.getItems();
      assertEquals((-1), uIPanel0.getMaxHeight());
      assertTrue(uIPanel0.isListMode());
      assertTrue(uIPanel0.isModal());
      assertEquals((-1), uIPanel0.getSelectedIndex());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      uIPanel0.setModal(false);
      assertFalse(uIPanel0.isModal());
      assertEquals((-1), uIPanel0.getSelectedIndex());
      assertFalse(uIPanel0.isListMode());
      assertEquals((-1), uIPanel0.getMaxHeight());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel();
      UIHLayout uIHLayout0 = new UIHLayout(0);
      uIPanel0.addItem(uIHLayout0);
      // Undeclared exception!
      try { 
        uIPanel0.updateChildren();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }
}
