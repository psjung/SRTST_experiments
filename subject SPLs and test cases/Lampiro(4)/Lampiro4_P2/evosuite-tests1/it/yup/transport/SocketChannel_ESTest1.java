/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 00:46:16 KST 2018
 */

package it.yup.transport;

import static org.junit.Assert.assertEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.util.Timer;
import java.util.Vector;

import javax.microedition.io.StreamConnection;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import it.yup.util.Utils;
import it.yup.xml.Element;
import it.yup.xmlstream.AccountRegistration;
import it.yup.xmlstream.BasicXmlStream;
import it.yup.xmlstream.EventQuery;
import it.yup.xmlstream.EventQueryRegistration;
import it.yup.xmlstream.SocketStream;
import static org.evosuite.runtime.EvoAssertions.*;
@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class SocketChannel_ESTest1 extends SocketChannel_ESTest_scaffolding1 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SocketChannel socketChannel0 = new SocketChannel("!NnTt'8f=E*uh3;", (TransportListener) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-33);
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-17);
      byteArray0[4] = (byte) (-93);
      socketChannel0.sendContent(byteArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SocketChannel socketChannel0 = new SocketChannel("NGDj^6mj](Kv", (TransportListener) null);
      socketChannel0.exiting = true;
      socketChannel0.close();
      socketChannel0.getInputStream();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-103);
      byteArray0[1] = (byte) (-91);
      byteArray0[2] = (byte)18;
      socketChannel0.sendContent(byteArray0);
  }
}
