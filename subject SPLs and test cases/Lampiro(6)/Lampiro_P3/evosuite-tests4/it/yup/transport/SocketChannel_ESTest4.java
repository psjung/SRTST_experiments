/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 17:38:56 KST 2018
 */

package it.yup.transport;

import org.junit.Test;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import it.yup.transport.SocketChannel;
import it.yup.transport.TransportListener;
import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class SocketChannel_ESTest4 extends SocketChannel_ESTest_scaffolding4 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SocketChannel socketChannel0 = new SocketChannel("", (TransportListener) null);
      boolean boolean0 = socketChannel0.isOpen();
      assertFalse(boolean0);
      assertEquals(300000L, socketChannel0.KEEP_ALIVE);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SocketChannel socketChannel0 = new SocketChannel("", (TransportListener) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1);
      SocketChannel.UTFReader socketChannel_UTFReader0 = socketChannel0.new UTFReader(bufferedInputStream0);
      char[] charArray0 = new char[3];
      try { 
        socketChannel_UTFReader0.read(charArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unsupported method
         //
         verifyException("it.yup.transport.SocketChannel$UTFReader", e);
      }
  }
}
