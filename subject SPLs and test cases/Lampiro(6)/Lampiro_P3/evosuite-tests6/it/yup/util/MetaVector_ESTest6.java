/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 15:09:05 KST 2018
 */

package it.yup.util;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.shaded.org.mockito.Mockito.mock;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNotSame;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.NoSuchElementException;
import java.util.Spliterator;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import java.util.stream.Stream;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class MetaVector_ESTest6 extends MetaVector_ESTest_scaffolding6 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Integer integer0 = new Integer(0);
      metaVector0.add(0, (Object) integer0);
      metaVector0.isEmpty();
      Object object0 = metaVector0.elementAt(0);
      metaVector0.firstElement();
      Vector<String> vector0 = new Vector<String>();
      metaVector0.retainAll(vector0);
      Stream stream0 = metaVector0.stream();
      metaVector0.lastIndexOf(object0, 0);
      metaVector0.contains(stream0);
      metaVector0.insertElementAt(integer0, 0);
      // Undeclared exception!
      try { 
        metaVector0.elementAt(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 1;
      MetaVector metaVector0 = new MetaVector(1, 1);
      Spliterator spliterator0 = metaVector0.spliterator();
      metaVector0.size();
      metaVector0.addElement(spliterator0);
      Object object0 = new Object();
      metaVector0.removeElement(object0);
      metaVector0.insertElementAt(spliterator0, 0);
      Enumeration enumeration0 = metaVector0.elements();
      metaVector0.setElementAt(object0, 0);
      metaVector0.size();
      metaVector0.contains(object0);
      metaVector0.removeElement(spliterator0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) spliterator0;
      objectArray0[1] = (Object) enumeration0;
      objectArray0[2] = (Object) spliterator0;
      objectArray0[3] = object0;
      objectArray0[4] = (Object) spliterator0;
      objectArray0[5] = (Object) enumeration0;
      Object object1 = new Object();
      objectArray0[6] = object1;
      objectArray0[7] = object0;
      objectArray0[8] = (Object) spliterator0;
      metaVector0.copyInto(objectArray0);
      metaVector0.removeElementAt(0);
      // Undeclared exception!
      try { 
        metaVector0.firstElement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 1;
      MetaVector metaVector0 = new MetaVector(1, 1);
      Spliterator spliterator0 = metaVector0.spliterator();
      metaVector0.size();
      metaVector0.addElement(spliterator0);
      Object object0 = new Object();
      metaVector0.removeElement(object0);
      metaVector0.insertElementAt(spliterator0, 0);
      Enumeration enumeration0 = metaVector0.elements();
      metaVector0.setElementAt(object0, 0);
      metaVector0.size();
      metaVector0.isEmpty();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) spliterator0;
      objectArray0[1] = (Object) enumeration0;
      objectArray0[2] = (Object) spliterator0;
      objectArray0[3] = object0;
      objectArray0[4] = (Object) spliterator0;
      objectArray0[5] = (Object) enumeration0;
      Object object1 = new Object();
      objectArray0[6] = object1;
      objectArray0[7] = object0;
      objectArray0[8] = (Object) spliterator0;
      metaVector0.copyInto(objectArray0);
      metaVector0.removeElementAt(0);
      Object object2 = metaVector0.firstElement();
      metaVector0.contains(object2);
      // Undeclared exception!
      try { 
        metaVector0.elementAt(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) "");
      Object object0 = metaVector0.clone();
      vector0.add(object0);
      vector0.add((Object) "");
      vector0.add((Object) "");
      vector0.add((Object) metaVector0);
      vector0.remove((Object) "");
      vector0.add((Object) metaVector0);
      metaVector0.addElement(vector0);
      metaVector0.firstElement();
      metaVector0.indexOf((Object) "");
      metaVector0.lastIndexOf((Object) vector0);
      // Undeclared exception!
      try { 
        metaVector0.copyInto((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Integer integer0 = new Integer(0);
      metaVector0.add(0, (Object) integer0);
      metaVector0.lastIndexOf((Object) "", 0);
      metaVector0.isEmpty();
      Object object0 = metaVector0.elementAt(0);
      metaVector0.setElementAt("", 0);
      Stream stream0 = metaVector0.stream();
      metaVector0.lastIndexOf(object0, 0);
      metaVector0.contains(stream0);
      // Undeclared exception!
      try { 
        metaVector0.insertElementAt(integer0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) "");
      metaVector0.isEmpty();
      vector0.add((Object) "");
      vector0.add((Object) metaVector0);
      vector0.remove((Object) "");
      vector0.add((Object) metaVector0);
      metaVector0.addElement(vector0);
      metaVector0.firstElement();
      metaVector0.remove((Object) "");
      metaVector0.indexOf((Object) "");
      metaVector0.removeAllElements();
      metaVector0.copyInto((Object[]) null);
      Integer integer0 = new Integer(0);
      metaVector0.contains(integer0);
      // Undeclared exception!
      try { 
        metaVector0.firstElement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Integer integer0 = new Integer(0);
      metaVector0.add(0, (Object) integer0);
      metaVector0.lastIndexOf((Object) "", 0);
      metaVector0.isEmpty();
      metaVector0.elementAt(0);
      // Undeclared exception!
      try { 
        metaVector0.setElementAt("", (-12));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Integer integer0 = new Integer(0);
      metaVector0.add(0, (Object) integer0);
      metaVector0.lastIndexOf((Object) "", 0);
      metaVector0.isEmpty();
      metaVector0.elementAt(0);
      metaVector0.setElementAt("", 0);
      metaVector0.stream();
      int int0 = new Integer(0);
      metaVector0.toString();
      int int1 = (-1816);
      // Undeclared exception!
      try { 
        metaVector0.removeElementAt((-1816));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      vector0.add((Object) "");
      vector0.add((Object) "");
      vector0.add((Object) "");
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      metaVector0.replaceAll(unaryOperator0);
      vector0.add((Object) metaVector0);
      vector0.add((Object) metaVector0);
      metaVector0.addElement(vector0);
      metaVector0.firstElement();
      metaVector0.indexOf((Object) "");
      metaVector0.removeAllElements();
      metaVector0.copyInto((Object[]) null);
      // Undeclared exception!
      try { 
        metaVector0.firstElement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) metaVector0);
      vector0.add((Object) metaVector0);
      metaVector0.addElement(vector0);
      metaVector0.firstElement();
      metaVector0.indexOf((Object) "");
      metaVector0.removeAllElements();
      metaVector0.copyInto((Object[]) null);
      // Undeclared exception!
      try { 
        metaVector0.firstElement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(1, 1);
      Spliterator spliterator0 = metaVector0.spliterator();
      metaVector0.size();
      metaVector0.addElement(spliterator0);
      Object object0 = new Object();
      metaVector0.removeElement(object0);
      metaVector0.insertElementAt(spliterator0, 1);
      Enumeration enumeration0 = metaVector0.elements();
      metaVector0.setElementAt(object0, 1);
      metaVector0.size();
      metaVector0.isEmpty();
      metaVector0.removeElement(spliterator0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) spliterator0;
      objectArray0[1] = (Object) enumeration0;
      objectArray0[2] = (Object) spliterator0;
      objectArray0[3] = object0;
      objectArray0[4] = (Object) spliterator0;
      objectArray0[5] = (Object) enumeration0;
      Object object1 = new Object();
      objectArray0[6] = object1;
      objectArray0[7] = object0;
      metaVector0.copyInto(objectArray0);
      assertEquals(9, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(1, 1);
      Spliterator spliterator0 = metaVector0.spliterator();
      metaVector0.size();
      metaVector0.addElement(spliterator0);
      Object object0 = new Object();
      boolean boolean0 = metaVector0.removeElement(object0);
      metaVector0.insertElementAt(spliterator0, 0);
      metaVector0.setElementAt(object0, 0);
      int int0 = metaVector0.lastIndexOf((Object) spliterator0, 0);
      assertEquals(1, int0);
      
      int int1 = metaVector0.size();
      assertEquals(2, int1);
      
      boolean boolean1 = metaVector0.isEmpty();
      assertTrue(boolean1 == boolean0);
      
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) spliterator0;
      objectArray0[2] = (Object) spliterator0;
      objectArray0[3] = object0;
      objectArray0[4] = (Object) spliterator0;
      Object object1 = new Object();
      objectArray0[6] = object1;
      objectArray0[7] = object0;
      objectArray0[8] = (Object) spliterator0;
      metaVector0.copyInto(objectArray0);
      Integer integer0 = new Integer((-1400));
      metaVector0.setElementAt(integer0, 0);
      Integer integer1 = new Integer(2);
      int int2 = metaVector0.indexOf((Object) integer1, 1);
      assertEquals((-1), int2);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Integer integer0 = new Integer(0);
      metaVector0.add(0, (Object) integer0);
      metaVector0.lastIndexOf((Object) "", 0);
      metaVector0.isEmpty();
      Object object0 = metaVector0.elementAt(0);
      metaVector0.setElementAt("", 0);
      metaVector0.stream();
      // Undeclared exception!
      try { 
        metaVector0.lastIndexOf(object0, 1228);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      metaVector0.add(0, (Object) "IlIi;bhb^");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      metaVector0.forEach(consumer0);
      metaVector0.stream();
      metaVector0.lastIndexOf((Object) null);
      metaVector0.iterator();
      metaVector0.lastIndexOf((Object) "IlIi;bhb^", 0);
      metaVector0.firstElement();
      metaVector0.lastIndexOf((Object) "", (-1));
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      metaVector0.replaceAll(unaryOperator0);
      metaVector0.removeElement(metaVector0);
      metaVector0.removeAllElements();
      assertEquals(10, metaVector0.capacity());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(2066);
      Integer integer0 = new Integer(2066);
      metaVector0.addElement(integer0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) metaVector0;
      objectArray0[1] = (Object) metaVector0;
      objectArray0[2] = (Object) integer0;
      metaVector0.copyInto(objectArray0);
      metaVector0.elements();
      metaVector0.toString();
      metaVector0.indexOf((Object) "Multivector:  2066");
      metaVector0.firstElement();
      Vector<Integer> vector0 = new Vector<Integer>(652);
      // Undeclared exception!
      try { 
        metaVector0.insertElementAt(vector0, (-3357));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(1);
      Integer integer0 = new Integer(1);
      metaVector0.addElement(integer0);
      metaVector0.elements();
      String string0 = metaVector0.toString();
      assertEquals("Multivector:  1", string0);
      
      int int0 = metaVector0.indexOf((Object) "Multivector:  1");
      assertEquals((-1), int0);
      
      // Undeclared exception!
      try { 
        metaVector0.elementAt((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(1);
      Integer integer0 = new Integer(1);
      metaVector0.addElement(integer0);
      metaVector0.elements();
      String string0 = metaVector0.toString();
      assertEquals("Multivector:  1", string0);
      
      int int0 = metaVector0.indexOf((Object) "Multivector:  1");
      assertEquals((-1), int0);
      
      Object object0 = metaVector0.lastElement();
      int int1 = metaVector0.lastIndexOf(object0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = (-1215);
      MetaVector metaVector0 = new MetaVector(1774, (-1215));
      Integer integer0 = new Integer((-1215));
      metaVector0.addElement(integer0);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      metaVector0.replaceAll(unaryOperator0);
      UnaryOperator.identity();
      metaVector0.replaceAll(unaryOperator0);
      metaVector0.size();
      Object object0 = metaVector0.clone();
      // Undeclared exception!
      try { 
        metaVector0.setElementAt(object0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 1);
      Enumeration enumeration0 = metaVector0.elements();
      metaVector0.insertElementAt(enumeration0, 0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) enumeration0;
      objectArray0[1] = (Object) enumeration0;
      objectArray0[2] = (Object) metaVector0;
      Object object0 = metaVector0.firstElement();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) enumeration0;
      objectArray0[5] = (Object) metaVector0;
      objectArray0[6] = (Object) enumeration0;
      Object object1 = new Object();
      objectArray0[7] = object1;
      metaVector0.copyInto(objectArray0);
      assertEquals(8, objectArray0.length);
      
      metaVector0.lastElement();
      // Undeclared exception!
      try { 
        metaVector0.elementAt(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(1769);
      int int0 = 0;
      Integer integer0 = new Integer(0);
      metaVector0.insertElementAt(integer0, 0);
      // Undeclared exception!
      try { 
        metaVector0.removeElementAt(617);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      metaVector0.add(0, (Object) "IlIi;bhb^");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      metaVector0.forEach(consumer0);
      metaVector0.stream();
      metaVector0.lastIndexOf((Object) null);
      metaVector0.iterator();
      metaVector0.firstElement();
      metaVector0.lastIndexOf((Object) "", (-1));
      Object object0 = metaVector0.clone();
      metaVector0.removeElement(object0);
      metaVector0.removeAllElements();
      assertNotSame(metaVector0, object0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      assertEquals(10, metaVector0.capacity());
      
      metaVector0.isEmpty();
      metaVector0.lastIndexOf((Object) "Multivector: ");
      Integer integer0 = new Integer((-2259));
      metaVector0.addElement(integer0);
      int int0 = 1450;
      Integer integer1 = new Integer(1450);
      // Undeclared exception!
      try { 
        metaVector0.lastIndexOf((Object) integer1, 1450);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      Object object0 = null;
      int int0 = 1496;
      Integer integer0 = new Integer(1496);
      metaVector0.setSize(0);
      // Undeclared exception!
      try { 
        metaVector0.indexOf((Object) integer0, 1496);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector$MultiVectorEnumeration", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 27;
      MetaVector metaVector0 = new MetaVector(27);
      MetaVector metaVector1 = new MetaVector(0, 0);
      metaVector1.parallelStream();
      String string0 = "F93uwn~<FI";
      metaVector1.contains("F93uwn~<FI");
      metaVector0.addElement(metaVector1);
      Object[] objectArray0 = new Object[0];
      metaVector0.copyInto(objectArray0);
      metaVector0.removeElement("F93uwn~<FI");
      int int1 = 3395;
      // Undeclared exception!
      try { 
        metaVector0.elementAt(3395);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(1, 1);
      Spliterator spliterator0 = metaVector0.spliterator();
      metaVector0.size();
      metaVector0.addElement(spliterator0);
      Object object0 = new Object();
      metaVector0.removeElement(object0);
      metaVector0.insertElementAt(spliterator0, 0);
      Enumeration enumeration0 = metaVector0.elements();
      metaVector0.setElementAt(object0, 0);
      metaVector0.size();
      metaVector0.isEmpty();
      metaVector0.removeElement(spliterator0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) spliterator0;
      objectArray0[1] = (Object) enumeration0;
      objectArray0[2] = (Object) spliterator0;
      objectArray0[3] = object0;
      objectArray0[4] = (Object) spliterator0;
      objectArray0[5] = (Object) enumeration0;
      Object object1 = new Object();
      objectArray0[6] = object1;
      objectArray0[7] = object0;
      objectArray0[8] = (Object) spliterator0;
      metaVector0.copyInto(objectArray0);
      assertEquals(10, metaVector0.capacity());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      int int0 = (-2551);
      Integer integer0 = new Integer((-2551));
      // Undeclared exception!
      try { 
        metaVector0.insertElementAt(integer0, (-2551));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) "");
      vector0.add((Object) "");
      vector0.add((Object) "");
      vector0.add((Object) metaVector0);
      vector0.remove((Object) "");
      vector0.add((Object) metaVector0);
      metaVector0.addElement(vector0);
      metaVector0.firstElement();
      metaVector0.indexOf((Object) "");
      metaVector0.removeAllElements();
      metaVector0.copyInto((Object[]) null);
      // Undeclared exception!
      try { 
        metaVector0.firstElement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.spliterator();
      String string0 = "NJh aP=^-!l->7";
      int int0 = 1343;
      // Undeclared exception!
      try { 
        metaVector0.removeElementAt(1343);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      Object[] objectArray0 = new Object[4];
      metaVector0.insertElementAt((Object) null, 0);
      objectArray0[0] = (Object) metaVector0;
      objectArray0[1] = (Object) metaVector0;
      objectArray0[2] = (Object) metaVector0;
      objectArray0[3] = (Object) metaVector0;
      metaVector0.copyInto(objectArray0);
      metaVector0.lastIndexOf((Object) null, 0);
      Enumeration enumeration0 = metaVector0.elements();
      assertNotNull(enumeration0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Integer integer0 = new Integer(0);
      metaVector0.lastIndexOf((Object) integer0, 0);
      // Undeclared exception!
      try { 
        metaVector0.removeElementAt(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(1);
      Integer integer0 = new Integer(1);
      metaVector0.addElement((Object) null);
      metaVector0.elements();
      String string0 = metaVector0.toString();
      assertEquals("Multivector: ", string0);
      
      int int0 = metaVector0.indexOf((Object) "Multivector: ");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(2539);
      MetaVector metaVector1 = new MetaVector(2539, 0);
      int int0 = metaVector0.lastIndexOf((Object) metaVector1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, (-578));
      metaVector0.isEmpty();
      Enumeration enumeration0 = metaVector0.elements();
      assertNotNull(enumeration0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      boolean boolean0 = metaVector0.contains((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MetaVector metaVector0 = null;
      try {
        metaVector0 = new MetaVector((-1700), (-1700));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1700
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(1438);
      metaVector0.listIterator();
      metaVector0.size();
      MetaVector metaVector1 = new MetaVector();
      metaVector1.ensureCapacity(1438);
      metaVector1.removeAll(metaVector0);
      metaVector0.addElement(metaVector1);
      // Undeclared exception!
      try { 
        metaVector0.firstElement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = 583;
      MetaVector metaVector0 = new MetaVector(583);
      int int1 = 0;
      MetaVector metaVector1 = new MetaVector();
      int int2 = 0;
      // Undeclared exception!
      try { 
        metaVector1.elementAt(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(1594, 1594);
      metaVector0.removeAllElements();
      metaVector0.isEmpty();
      MetaVector metaVector1 = new MetaVector();
      metaVector0.addElement(metaVector1);
      // Undeclared exception!
      try { 
        metaVector0.firstElement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      int int0 = 0;
      metaVector0.size();
      MetaVector metaVector1 = new MetaVector(0, 0);
      // Undeclared exception!
      try { 
        metaVector1.lastIndexOf((Object) metaVector0, 225);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(1, 1);
      metaVector0.removeElement("");
      Integer integer0 = new Integer(1);
      metaVector0.removeElement(integer0);
      metaVector0.toString();
      Integer integer1 = new Integer(1);
      // Undeclared exception!
      try { 
        metaVector0.insertElementAt(integer1, 3953);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MetaVector metaVector0 = null;
      try {
        metaVector0 = new MetaVector((-2917));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2917
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.size();
      // Undeclared exception!
      try { 
        metaVector0.lastElement();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector$MultiVectorEnumeration", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      Integer integer0 = new Integer(2828);
      // Undeclared exception!
      try { 
        metaVector0.lastIndexOf((Object) integer0, 2828);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 1939);
      MetaVector metaVector1 = new MetaVector(1939);
      boolean boolean0 = metaVector0.remove((Object) metaVector1);
      assertFalse(boolean0);
      
      Vector<String> vector0 = new Vector<String>();
      int int0 = metaVector0.indexOf((Object) vector0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(534, 0);
      metaVector0.removeAllElements();
      // Undeclared exception!
      try { 
        metaVector0.insertElementAt((Object) null, 534);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      MetaVector metaVector1 = new MetaVector(0);
      metaVector0.insertElementAt(metaVector1, 0);
      assertTrue(metaVector1.equals((Object)metaVector0));
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(1720);
      // Undeclared exception!
      try { 
        metaVector0.lastElement();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector$MultiVectorEnumeration", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      int int0 = metaVector0.indexOf((Object) "", (-3884));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) metaVector0;
      metaVector0.setSize(0);
      objectArray0[1] = (Object) metaVector0;
      objectArray0[2] = (Object) metaVector0;
      objectArray0[3] = (Object) metaVector0;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      linkedList0.add(integer0);
      linkedList0.add((Integer) null);
      linkedList0.clear();
      metaVector0.retainAll(linkedList0);
      objectArray0[4] = (Object) metaVector0;
      objectArray0[5] = (Object) metaVector0;
      objectArray0[6] = (Object) metaVector0;
      objectArray0[7] = (Object) metaVector0;
      objectArray0[8] = (Object) metaVector0;
      metaVector0.copyInto(objectArray0);
      // Undeclared exception!
      try { 
        metaVector0.setElementAt((Object) null, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      MetaVector metaVector1 = new MetaVector(1);
      // Undeclared exception!
      try { 
        metaVector0.setElementAt(metaVector1, (-296));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, (-367));
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) metaVector0;
      objectArray0[1] = (Object) metaVector0;
      objectArray0[2] = (Object) metaVector0;
      metaVector0.copyInto(objectArray0);
      assertEquals(3, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(1961, 1961);
      // Undeclared exception!
      try { 
        metaVector0.elementAt(1961);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) "");
      vector0.add((Object) "");
      vector0.add((Object) "");
      vector0.add((Object) metaVector0);
      metaVector0.isEmpty();
      vector0.add((Object) metaVector0);
      metaVector0.addElement(vector0);
      metaVector0.firstElement();
      metaVector0.indexOf((Object) "");
      metaVector0.removeAllElements();
      metaVector0.copyInto((Object[]) null);
      // Undeclared exception!
      try { 
        metaVector0.firstElement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) "D");
      vector0.add((Object) "D");
      vector0.add((Object) "D");
      vector0.add((Object) metaVector0);
      metaVector0.addElement(vector0);
      metaVector0.firstElement();
      metaVector0.indexOf((Object) "");
      metaVector0.removeAllElements();
      metaVector0.copyInto((Object[]) null);
      // Undeclared exception!
      try { 
        metaVector0.firstElement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      metaVector0.isEmpty();
      MetaVector metaVector1 = new MetaVector(1063);
      metaVector1.elements();
      metaVector1.contains(metaVector0);
      metaVector1.listIterator();
      metaVector1.spliterator();
      metaVector0.removeAll(metaVector1);
      metaVector0.removeAllElements();
      metaVector0.insertElementAt("", 0);
      Object object0 = metaVector0.lastElement();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      Object object0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        metaVector0.setElementAt((Object) null, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(1454);
      MetaVector metaVector1 = new MetaVector(1454);
      metaVector0.addAll((Collection) metaVector1);
      MetaVector metaVector2 = new MetaVector();
      metaVector2.elements();
      metaVector0.addAll((Collection) metaVector2);
      metaVector0.toString();
      int int0 = 0;
      MetaVector metaVector3 = new MetaVector(0);
      metaVector3.setSize(337);
      // Undeclared exception!
      try { 
        metaVector0.insertElementAt(metaVector3, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      MetaVector metaVector0 = null;
      try {
        metaVector0 = new MetaVector((-827), (-827));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -827
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Integer integer0 = new Integer(0);
      metaVector0.add(0, (Object) integer0);
      metaVector0.isEmpty();
      Object object0 = metaVector0.elementAt(0);
      Stream stream0 = metaVector0.stream();
      metaVector0.lastIndexOf(object0, 0);
      metaVector0.contains(stream0);
      metaVector0.insertElementAt(integer0, 0);
      metaVector0.toString();
      int int0 = (-1816);
      // Undeclared exception!
      try { 
        metaVector0.removeElementAt((-1816));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      metaVector0.add(0, (Object) "IlIi;bhb^");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      metaVector0.forEach(consumer0);
      metaVector0.stream();
      metaVector0.lastIndexOf((Object) null);
      metaVector0.iterator();
      metaVector0.firstElement();
      metaVector0.lastIndexOf((Object) "", (-1));
      MetaVector metaVector1 = (MetaVector)metaVector0.clone();
      metaVector1.containsAll(metaVector0);
      metaVector0.removeElement(metaVector1);
      metaVector0.removeAllElements();
      assertEquals(10, metaVector0.capacity());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int int0 = 1;
      MetaVector metaVector0 = new MetaVector(1, 1);
      Spliterator spliterator0 = metaVector0.spliterator();
      metaVector0.size();
      metaVector0.addElement(spliterator0);
      Object object0 = new Object();
      metaVector0.removeElement(object0);
      metaVector0.insertElementAt(spliterator0, 0);
      Enumeration enumeration0 = metaVector0.elements();
      metaVector0.setElementAt(object0, 0);
      metaVector0.size();
      metaVector0.isEmpty();
      metaVector0.removeElement(spliterator0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) spliterator0;
      objectArray0[1] = (Object) enumeration0;
      objectArray0[2] = (Object) spliterator0;
      objectArray0[3] = object0;
      objectArray0[4] = (Object) spliterator0;
      objectArray0[5] = (Object) enumeration0;
      Object object1 = new Object();
      objectArray0[6] = object1;
      objectArray0[7] = object0;
      objectArray0[8] = (Object) spliterator0;
      metaVector0.copyInto(objectArray0);
      metaVector0.removeElementAt(0);
      // Undeclared exception!
      try { 
        metaVector0.firstElement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }
}
