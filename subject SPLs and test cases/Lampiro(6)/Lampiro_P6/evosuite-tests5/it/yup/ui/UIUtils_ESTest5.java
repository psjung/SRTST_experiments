/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 18:01:43 KST 2018
 */

package it.yup.ui;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNotSame;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import javax.microedition.lcdui.Image;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class UIUtils_ESTest5 extends UIUtils_ESTest_scaffolding5 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[3];
      int int0 = (-526);
      intArray0[0] = (-526);
      intArray0[1] = 1904;
      intArray0[2] = (-2181);
      int int1 = 0;
      int int2 = 0;
      // Undeclared exception!
      try { 
        UIUtils.rescalaArray(intArray0, intArray0, 0, 3438, 2446, 774, 0, 0, 774);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-2009);
      intArray0[1] = (-3920);
      UIUtils.rescalaArray(intArray0, intArray0, (-3920), (-3920), (-2009), (-2009), 2423, (-2009), (-3920));
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {(-2009), (-3920)}, intArray0);
      
      UIUtils.rescalaArray(intArray0, intArray0, (-2009), 50, (-4), (-3920), 2423, 32, (-3920));
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {(-2009), (-3920)}, intArray0);
      
      UIUtils.rescalaArray(intArray0, intArray0, (-2009), 30, (-3920), 111, 14, (-4), 1776);
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {(-2009), (-3920)}, intArray0);
      
      // Undeclared exception!
      try { 
        UIUtils.rescalaArray((int[]) null, (int[]) null, (-3920), 21, 2423, 3657, 21, 3657, (-4));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 1330;
      intArray0[1] = 993;
      intArray0[2] = (-1514);
      intArray0[3] = 554;
      intArray0[4] = (-3231);
      intArray0[5] = 0;
      intArray0[6] = (-1391);
      UIUtils.rescalaArray(intArray0, intArray0, (-937), 4020, 1255, (-1514), 38, 4020, 4020);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {1330, 993, (-1514), 554, (-3231), 0, (-1391)}, intArray0);
      
      UIMenu uIMenu0 = UIUtils.easyMenu((String) null, 111, 49, 1467, (UIItem) null);
      assertNotNull(uIMenu0);
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertFalse(uIMenu0.isSelected());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals((-1), uIMenu0.getSelectedIndex());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertFalse(uIMenu0.isOpenedState());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getFg_color());
      assertEquals(49, uIMenu0.getAbsoluteY());
      assertEquals(1467, uIMenu0.getWidth());
      assertEquals(111, uIMenu0.getAbsoluteX());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getType());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getGradientColor());
      
      UIMenu uIMenu1 = UIUtils.easyMenu("", 0, 219, (-410), (UIItem) uIMenu0);
      assertFalse(uIMenu1.equals((Object)uIMenu0));
      assertNotNull(uIMenu1);
      assertNotSame(uIMenu0, uIMenu1);
      assertNotSame(uIMenu1, uIMenu0);
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals(11322072, uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals((-1), uIMenu0.getSelectedIndex());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertTrue(uIMenu0.isSelected());
      assertFalse(uIMenu0.isOpenedState());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getFg_color());
      assertEquals(49, uIMenu0.getAbsoluteY());
      assertEquals(1467, uIMenu0.getWidth());
      assertEquals(111, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getType());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertFalse(uIMenu1.isOpenedState());
      assertEquals((-1), uIMenu1.getGradientSelectedColor());
      assertEquals(0, uIMenu1.getType());
      assertTrue(uIMenu1.isAutoClose());
      assertEquals((-1), uIMenu1.getFg_color());
      assertTrue(uIMenu1.isFocusable());
      assertEquals((-1), uIMenu1.getBg_color());
      assertEquals((-1), uIMenu1.getWidth());
      assertFalse(uIMenu1.isSelected());
      assertEquals((-1), uIMenu1.getGradientColor());
      assertEquals(0, uIMenu1.getAbsoluteX());
      assertEquals(219, uIMenu1.getAbsoluteY());
      assertEquals(8947848, uIMenu1.getSelectedColor());
      assertEquals(0, uIMenu1.getLayoutWidth());
      assertEquals(0, uIMenu1.getSelectedIndex());
      assertEquals(0, uIMenu1.getLayoutHeight());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UIUtils uIUtils0 = new UIUtils();
      assertNotNull(uIUtils0);
      
      UIMenu uIMenu0 = UIUtils.easyMenu("", 0, 0, 0, (UIItem) null);
      assertNotNull(uIMenu0);
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals((-1), uIMenu0.getSelectedIndex());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals(0, uIMenu0.getType());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getFg_color());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals((-1), uIMenu0.getGradientColor());
      
      UIAccordion uIAccordion0 = new UIAccordion();
      assertNotNull(uIAccordion0);
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertEquals(0, uIAccordion0.getFirstVisible());
      assertFalse(uIAccordion0.isModal());
      assertEquals((-1), uIAccordion0.getFg_color());
      assertEquals((-1), uIAccordion0.getWidth());
      assertEquals((-1), uIAccordion0.getBg_color());
      assertTrue(uIAccordion0.isFocusable());
      assertEquals((-1), uIAccordion0.getLabelGradientColor());
      assertEquals((-1), uIAccordion0.getGradientColor());
      assertFalse(uIAccordion0.isOneOpen());
      assertEquals(11184810, uIAccordion0.getLabelColor());
      assertEquals(0, uIAccordion0.getLayoutWidth());
      assertEquals(12303291, uIAccordion0.getSepColor());
      assertEquals((-1), uIAccordion0.getGradientSelectedColor());
      assertEquals(0, uIAccordion0.getType());
      assertEquals(8947848, uIAccordion0.getSelectedColor());
      assertFalse(uIAccordion0.isSelected());
      assertEquals(0, uIAccordion0.getLayoutHeight());
      assertTrue(uIAccordion0.isDirty());
      assertEquals(2, uIAccordion0.getSepSize());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isListMode());
      
      Image image0 = uIAccordion0.openImage;
      assertNull(image0);
      
      // Undeclared exception!
      try { 
        UIUtils.imageResize((Image) null, (-2866), (-2866));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UIUtils uIUtils0 = new UIUtils();
      assertNotNull(uIUtils0);
      
      UICheckbox uICheckbox0 = new UICheckbox("");
      assertNotNull(uICheckbox0);
      assertFalse(uICheckbox0.isChecked());
      assertEquals(0, uICheckbox0.getLayoutWidth());
      assertFalse(uICheckbox0.isSelected());
      assertEquals((-1), uICheckbox0.getGradientSelectedColor());
      assertEquals(0, uICheckbox0.getLayoutHeight());
      assertEquals(8947848, uICheckbox0.getSelectedColor());
      assertEquals((-1), uICheckbox0.getFg_color());
      assertEquals((-1), uICheckbox0.getImgAnchorPoint());
      assertTrue(uICheckbox0.isFocusable());
      assertEquals((-1), uICheckbox0.getWidth());
      assertEquals(0, uICheckbox0.getType());
      assertEquals((-1), uICheckbox0.getBg_color());
      assertFalse(uICheckbox0.isFlip());
      assertEquals(20, uICheckbox0.getAnchorPoint());
      assertFalse(uICheckbox0.isWrappable());
      assertEquals((-1), uICheckbox0.getGradientColor());
      assertEquals("", uICheckbox0.getText());
      
      UIMenu uIMenu0 = UIUtils.easyMenu("", (-2910), (-2910), (-2910), (UIItem) uICheckbox0);
      assertNotNull(uIMenu0);
      assertFalse(uICheckbox0.isChecked());
      assertEquals(11322072, uICheckbox0.getBg_color());
      assertEquals(0, uICheckbox0.getLayoutWidth());
      assertEquals((-1), uICheckbox0.getGradientSelectedColor());
      assertEquals(0, uICheckbox0.getLayoutHeight());
      assertEquals(8947848, uICheckbox0.getSelectedColor());
      assertTrue(uICheckbox0.isSelected());
      assertEquals((-1), uICheckbox0.getFg_color());
      assertEquals((-1), uICheckbox0.getImgAnchorPoint());
      assertTrue(uICheckbox0.isFocusable());
      assertEquals((-1), uICheckbox0.getWidth());
      assertEquals(0, uICheckbox0.getType());
      assertFalse(uICheckbox0.isFlip());
      assertEquals(20, uICheckbox0.getAnchorPoint());
      assertFalse(uICheckbox0.isWrappable());
      assertEquals((-1), uICheckbox0.getGradientColor());
      assertEquals("", uICheckbox0.getText());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getFg_color());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(0, uIMenu0.getType());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals(0, uIMenu0.getSelectedIndex());
      
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uIMenu0, (-341));
      assertNotNull(uIHLayout0);
      assertFalse(uICheckbox0.isChecked());
      assertEquals(11322072, uICheckbox0.getBg_color());
      assertEquals(0, uICheckbox0.getLayoutWidth());
      assertEquals((-1), uICheckbox0.getGradientSelectedColor());
      assertEquals(0, uICheckbox0.getLayoutHeight());
      assertEquals(8947848, uICheckbox0.getSelectedColor());
      assertTrue(uICheckbox0.isSelected());
      assertEquals((-1), uICheckbox0.getFg_color());
      assertEquals((-1), uICheckbox0.getImgAnchorPoint());
      assertTrue(uICheckbox0.isFocusable());
      assertEquals((-1), uICheckbox0.getWidth());
      assertEquals(0, uICheckbox0.getType());
      assertFalse(uICheckbox0.isFlip());
      assertEquals(20, uICheckbox0.getAnchorPoint());
      assertFalse(uICheckbox0.isWrappable());
      assertEquals((-1), uICheckbox0.getGradientColor());
      assertEquals("", uICheckbox0.getText());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getFg_color());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-341), uIMenu0.getLayoutWidth());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(0, uIMenu0.getType());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertFalse(uIHLayout0.isGroup());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals(0, uIHLayout0.getType());
      assertFalse(uIHLayout0.isSelected());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertTrue(uIHLayout0.isFocusable());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertEquals((-1), uIHLayout0.getWidth());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      UIUtils.rescalaArray(intArray0, intArray0, 0, 0, 0, 0, 0, 3715, (-1162));
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {0, 0}, intArray0);
      
      UIUtils.rescalaArray(intArray0, intArray0, (-2957), 0, (-1031), 255, 0, 2954, 0);
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {0, 0}, intArray0);
      
      UIUtils uIUtils0 = new UIUtils();
      assertNotNull(uIUtils0);
      
      Image image0 = Image.createImage("ra)FC$'?3$EW");
      assertNull(image0);
      
      // Undeclared exception!
      try { 
        UIUtils.imageResize((Image) null, 255, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = UIUtils.colorize(16481280, 121);
      assertEquals(16784180, int0);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 16481280;
      intArray0[1] = 16784180;
      intArray0[2] = 16481280;
      intArray0[3] = 16784180;
      intArray0[4] = 16481280;
      intArray0[5] = 121;
      intArray0[6] = 0;
      int int1 = 0;
      int int2 = 119;
      // Undeclared exception!
      UIUtils.rescalaArray(intArray0, intArray0, 0, 722, 0, 16784180, 16784180, 119, 2248);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = UIUtils.colorize(1553, 1553);
      assertEquals(260517505, int0);
      
      UIUtils uIUtils0 = new UIUtils();
      assertNotNull(uIUtils0);
      
      UILabel uILabel0 = new UILabel("mM?[` 0oq6c*-:S");
      assertNotNull(uILabel0);
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      assertEquals((-1), uILabel0.getWidth());
      assertEquals((-1), uILabel0.getFg_color());
      assertEquals(0, uILabel0.getLayoutHeight());
      assertEquals("mM?[` 0oq6c*-:S", uILabel0.getText());
      assertEquals((-1), uILabel0.getGradientColor());
      assertFalse(uILabel0.isWrappable());
      assertFalse(uILabel0.isFocusable());
      assertFalse(uILabel0.isFlip());
      assertEquals(0, uILabel0.getLayoutWidth());
      assertEquals(20, uILabel0.getAnchorPoint());
      assertFalse(uILabel0.isSelected());
      assertEquals((-1), uILabel0.getGradientSelectedColor());
      assertEquals(0, uILabel0.getType());
      assertEquals((-1), uILabel0.getBg_color());
      assertEquals(8947848, uILabel0.getSelectedColor());
      
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uILabel0, 5358);
      assertNotNull(uIHLayout0);
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      assertEquals((-1), uILabel0.getWidth());
      assertEquals(1, uILabel0.getAnchorPoint());
      assertEquals((-1), uILabel0.getFg_color());
      assertEquals(0, uILabel0.getLayoutHeight());
      assertEquals("mM?[` 0oq6c*-:S", uILabel0.getText());
      assertEquals((-1), uILabel0.getGradientColor());
      assertFalse(uILabel0.isWrappable());
      assertFalse(uILabel0.isFocusable());
      assertFalse(uILabel0.isFlip());
      assertFalse(uILabel0.isSelected());
      assertEquals((-1), uILabel0.getGradientSelectedColor());
      assertEquals(0, uILabel0.getType());
      assertEquals((-1), uILabel0.getBg_color());
      assertEquals(5358, uILabel0.getLayoutWidth());
      assertEquals(8947848, uILabel0.getSelectedColor());
      assertFalse(uIHLayout0.isFocusable());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertFalse(uIHLayout0.isGroup());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals(0, uIHLayout0.getType());
      assertFalse(uIHLayout0.isSelected());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      
      UIMenu uIMenu0 = UIUtils.easyMenu("", 5358, 5358, 260517505, (UIItem) uILabel0, "mM?[` 0oq6c*-:S", "socket://");
      assertNotNull(uIMenu0);
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      assertTrue(uILabel0.isFocusable());
      assertEquals((-1), uILabel0.getWidth());
      assertEquals(1, uILabel0.getAnchorPoint());
      assertTrue(uILabel0.isSelected());
      assertEquals((-1), uILabel0.getFg_color());
      assertEquals(0, uILabel0.getLayoutHeight());
      assertEquals("mM?[` 0oq6c*-:S", uILabel0.getText());
      assertEquals((-1), uILabel0.getGradientColor());
      assertFalse(uILabel0.isWrappable());
      assertFalse(uILabel0.isFlip());
      assertEquals(11322072, uILabel0.getBg_color());
      assertEquals((-1), uILabel0.getGradientSelectedColor());
      assertEquals(0, uILabel0.getType());
      assertEquals(5358, uILabel0.getLayoutWidth());
      assertEquals(8947848, uILabel0.getSelectedColor());
      assertEquals((-1), uIMenu0.getFg_color());
      assertTrue(uIMenu0.isAutoClose());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals(260517505, uIMenu0.getWidth());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals(0, uIMenu0.getType());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertEquals(5358, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals(5358, uIMenu0.getAbsoluteX());
      
      UIMenu uIMenu1 = UIUtils.easyMenu("", 4, 1553, 5358, (UIItem) uIHLayout0, "socket://", "");
      assertFalse(uIMenu1.equals((Object)uIMenu0));
      assertNotNull(uIMenu1);
      assertNotSame(uIMenu1, uIMenu0);
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      assertTrue(uILabel0.isFocusable());
      assertEquals((-1), uILabel0.getWidth());
      assertEquals(1, uILabel0.getAnchorPoint());
      assertTrue(uILabel0.isSelected());
      assertEquals((-1), uILabel0.getFg_color());
      assertEquals(0, uILabel0.getLayoutHeight());
      assertEquals("mM?[` 0oq6c*-:S", uILabel0.getText());
      assertEquals((-1), uILabel0.getGradientColor());
      assertFalse(uILabel0.isWrappable());
      assertFalse(uILabel0.isFlip());
      assertEquals(11322072, uILabel0.getBg_color());
      assertEquals((-1), uILabel0.getGradientSelectedColor());
      assertEquals(0, uILabel0.getType());
      assertEquals(5358, uILabel0.getLayoutWidth());
      assertEquals(8947848, uILabel0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertTrue(uIHLayout0.isSelected());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertFalse(uIHLayout0.isGroup());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertTrue(uIHLayout0.isFocusable());
      assertEquals(0, uIHLayout0.getType());
      assertEquals(11322072, uIHLayout0.getBg_color());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertTrue(uIMenu1.isFocusable());
      assertEquals(0, uIMenu1.getLayoutHeight());
      assertEquals((-1), uIMenu1.getGradientColor());
      assertEquals(1553, uIMenu1.getAbsoluteY());
      assertEquals(0, uIMenu1.getSelectedIndex());
      assertEquals(0, uIMenu1.getLayoutWidth());
      assertEquals(4, uIMenu1.getAbsoluteX());
      assertFalse(uIMenu1.isOpenedState());
      assertEquals((-1), uIMenu1.getGradientSelectedColor());
      assertEquals((-1), uIMenu1.getFg_color());
      assertEquals((-1), uIMenu1.getBg_color());
      assertEquals(5358, uIMenu1.getWidth());
      assertTrue(uIMenu1.isAutoClose());
      assertEquals(8947848, uIMenu1.getSelectedColor());
      assertEquals(0, uIMenu1.getType());
      assertFalse(uIMenu1.isSelected());
      
      // Undeclared exception!
      try { 
        UIUtils.imageResize((Image) null, 260517505, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UISeparator uISeparator0 = new UISeparator(784, 784);
      assertNotNull(uISeparator0);
      assertEquals((-1), uISeparator0.getWidth());
      assertEquals((-1), uISeparator0.getGradientColor());
      assertEquals(0, uISeparator0.getLayoutHeight());
      assertFalse(uISeparator0.isFocusable());
      assertEquals(8947848, uISeparator0.getSelectedColor());
      assertEquals((-1), uISeparator0.getGradientSelectedColor());
      assertEquals(0, uISeparator0.getLayoutWidth());
      assertFalse(uISeparator0.isSelected());
      assertEquals(0, uISeparator0.getType());
      assertEquals(784, uISeparator0.getFg_color());
      assertEquals((-1), uISeparator0.getBg_color());
      
      boolean boolean0 = uISeparator0.isDirty();
      assertEquals((-1), uISeparator0.getWidth());
      assertEquals((-1), uISeparator0.getGradientColor());
      assertEquals(0, uISeparator0.getLayoutHeight());
      assertFalse(uISeparator0.isFocusable());
      assertEquals(8947848, uISeparator0.getSelectedColor());
      assertEquals((-1), uISeparator0.getGradientSelectedColor());
      assertEquals(0, uISeparator0.getLayoutWidth());
      assertFalse(uISeparator0.isSelected());
      assertEquals(0, uISeparator0.getType());
      assertEquals(784, uISeparator0.getFg_color());
      assertEquals((-1), uISeparator0.getBg_color());
      assertTrue(boolean0);
      
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 784;
      intArray0[2] = 784;
      intArray0[3] = 784;
      intArray0[4] = 784;
      intArray0[5] = 784;
      intArray0[6] = 784;
      intArray0[7] = 784;
      uISeparator0.coors = intArray0;
      assertEquals((-1), uISeparator0.getWidth());
      assertEquals((-1), uISeparator0.getGradientColor());
      assertEquals(0, uISeparator0.getLayoutHeight());
      assertFalse(uISeparator0.isFocusable());
      assertEquals(8947848, uISeparator0.getSelectedColor());
      assertEquals((-1), uISeparator0.getGradientSelectedColor());
      assertEquals(0, uISeparator0.getLayoutWidth());
      assertFalse(uISeparator0.isSelected());
      assertEquals(0, uISeparator0.getType());
      assertEquals(784, uISeparator0.getFg_color());
      assertEquals((-1), uISeparator0.getBg_color());
      
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uISeparator0, (-2533));
      assertNotNull(uIHLayout0);
      assertEquals((-1), uISeparator0.getWidth());
      assertEquals((-1), uISeparator0.getGradientColor());
      assertEquals(0, uISeparator0.getLayoutHeight());
      assertEquals((-2533), uISeparator0.getLayoutWidth());
      assertFalse(uISeparator0.isFocusable());
      assertEquals(8947848, uISeparator0.getSelectedColor());
      assertEquals((-1), uISeparator0.getGradientSelectedColor());
      assertFalse(uISeparator0.isSelected());
      assertEquals(0, uISeparator0.getType());
      assertEquals(784, uISeparator0.getFg_color());
      assertEquals((-1), uISeparator0.getBg_color());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertFalse(uIHLayout0.isGroup());
      assertFalse(uIHLayout0.isFocusable());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals(0, uIHLayout0.getType());
      assertFalse(uIHLayout0.isSelected());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      
      uIHLayout0.setLayoutHeight(0);
      assertEquals((-1), uISeparator0.getWidth());
      assertEquals((-1), uISeparator0.getGradientColor());
      assertEquals(0, uISeparator0.getLayoutHeight());
      assertEquals((-2533), uISeparator0.getLayoutWidth());
      assertFalse(uISeparator0.isFocusable());
      assertEquals(8947848, uISeparator0.getSelectedColor());
      assertEquals((-1), uISeparator0.getGradientSelectedColor());
      assertFalse(uISeparator0.isSelected());
      assertEquals(0, uISeparator0.getType());
      assertEquals(784, uISeparator0.getFg_color());
      assertEquals((-1), uISeparator0.getBg_color());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertFalse(uIHLayout0.isGroup());
      assertFalse(uIHLayout0.isFocusable());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals(0, uIHLayout0.getType());
      assertFalse(uIHLayout0.isSelected());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      
      UIHLayout uIHLayout1 = UIUtils.easyCenterLayout(uIHLayout0, (-2533));
      assertFalse(uIHLayout1.equals((Object)uIHLayout0));
      assertNotNull(uIHLayout1);
      assertNotSame(uIHLayout0, uIHLayout1);
      assertNotSame(uIHLayout1, uIHLayout0);
      assertEquals((-1), uISeparator0.getWidth());
      assertEquals((-1), uISeparator0.getGradientColor());
      assertEquals(0, uISeparator0.getLayoutHeight());
      assertEquals((-2533), uISeparator0.getLayoutWidth());
      assertFalse(uISeparator0.isFocusable());
      assertEquals(8947848, uISeparator0.getSelectedColor());
      assertEquals((-1), uISeparator0.getGradientSelectedColor());
      assertFalse(uISeparator0.isSelected());
      assertEquals(0, uISeparator0.getType());
      assertEquals(784, uISeparator0.getFg_color());
      assertEquals((-1), uISeparator0.getBg_color());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertFalse(uIHLayout0.isGroup());
      assertFalse(uIHLayout0.isFocusable());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals((-2533), uIHLayout0.getLayoutWidth());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals(0, uIHLayout0.getType());
      assertFalse(uIHLayout0.isSelected());
      assertFalse(uIHLayout1.isSelected());
      assertEquals(0, uIHLayout1.getType());
      assertEquals((-1), uIHLayout1.getBg_color());
      assertEquals(8947848, uIHLayout1.getSelectedColor());
      assertEquals(0, uIHLayout1.getLayoutHeight());
      assertEquals((-1), uIHLayout1.getGradientSelectedColor());
      assertFalse(uIHLayout1.isGroup());
      assertEquals((-1), uIHLayout1.getGradientColor());
      assertFalse(uIHLayout1.isFocusable());
      assertEquals((-1), uIHLayout1.getFg_color());
      assertEquals(0, uIHLayout1.getLayoutWidth());
      assertEquals((-1), uIHLayout1.getWidth());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 0, 0);
      assertNotNull(uIGauge0);
      assertEquals((-1), uIGauge0.getBg_color());
      assertEquals(8947848, uIGauge0.getSelectedColor());
      assertEquals(0, uIGauge0.getLayoutHeight());
      assertEquals((-1), uIGauge0.getGradientColor());
      assertFalse(uIGauge0.isSelected());
      assertEquals("", uIGauge0.getLabel());
      assertTrue(uIGauge0.isFocusable());
      assertEquals(10, uIGauge0.getOffset());
      assertEquals((-1), uIGauge0.getFg_color());
      assertEquals(0, uIGauge0.getMaxValue());
      assertEquals(0, uIGauge0.getType());
      assertTrue(uIGauge0.isInteractive());
      assertEquals(0, uIGauge0.getValue());
      assertEquals((-1), uIGauge0.getGradientSelectedColor());
      assertEquals(0, uIGauge0.getLayoutWidth());
      assertEquals((-1), uIGauge0.getWidth());
      
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uIGauge0, 0);
      assertNotNull(uIHLayout0);
      assertEquals((-1), uIGauge0.getBg_color());
      assertEquals(8947848, uIGauge0.getSelectedColor());
      assertEquals(0, uIGauge0.getLayoutHeight());
      assertEquals((-1), uIGauge0.getGradientColor());
      assertFalse(uIGauge0.isSelected());
      assertEquals("", uIGauge0.getLabel());
      assertTrue(uIGauge0.isFocusable());
      assertEquals(10, uIGauge0.getOffset());
      assertEquals((-1), uIGauge0.getFg_color());
      assertEquals(0, uIGauge0.getMaxValue());
      assertEquals(0, uIGauge0.getType());
      assertTrue(uIGauge0.isInteractive());
      assertEquals(0, uIGauge0.getValue());
      assertEquals((-1), uIGauge0.getGradientSelectedColor());
      assertEquals(0, uIGauge0.getLayoutWidth());
      assertEquals((-1), uIGauge0.getWidth());
      assertTrue(uIHLayout0.isFocusable());
      assertEquals(0, uIHLayout0.getType());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertFalse(uIHLayout0.isSelected());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertFalse(uIHLayout0.isGroup());
      
      int int0 = UIUtils.medColor(0, 0);
      assertEquals(0, int0);
      
      UIUtils uIUtils0 = new UIUtils();
      assertNotNull(uIUtils0);
      
      UIMenu uIMenu0 = UIUtils.easyMenu("", 0, 0, 0, (UIItem) uIGauge0, "", "y)46?N~oRGW3AN");
      assertNotNull(uIMenu0);
      assertEquals(8947848, uIGauge0.getSelectedColor());
      assertEquals(0, uIGauge0.getLayoutHeight());
      assertEquals((-1), uIGauge0.getGradientColor());
      assertEquals("", uIGauge0.getLabel());
      assertTrue(uIGauge0.isSelected());
      assertTrue(uIGauge0.isFocusable());
      assertEquals(10, uIGauge0.getOffset());
      assertEquals((-1), uIGauge0.getFg_color());
      assertEquals(0, uIGauge0.getMaxValue());
      assertEquals(0, uIGauge0.getType());
      assertTrue(uIGauge0.isInteractive());
      assertEquals(0, uIGauge0.getValue());
      assertEquals((-1), uIGauge0.getGradientSelectedColor());
      assertEquals(0, uIGauge0.getLayoutWidth());
      assertEquals(11322072, uIGauge0.getBg_color());
      assertEquals((-1), uIGauge0.getWidth());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertFalse(uIMenu0.isOpenedState());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals(0, uIMenu0.getType());
      assertEquals((-1), uIMenu0.getFg_color());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getGradientColor());
      
      UIMenu uIMenu1 = UIUtils.easyMenu("", 0, 0, 0, (UIItem) uIHLayout0);
      assertFalse(uIMenu1.equals((Object)uIMenu0));
      assertNotNull(uIMenu1);
      assertNotSame(uIMenu1, uIMenu0);
      assertEquals(8947848, uIGauge0.getSelectedColor());
      assertEquals(0, uIGauge0.getLayoutHeight());
      assertEquals((-1), uIGauge0.getGradientColor());
      assertEquals("", uIGauge0.getLabel());
      assertTrue(uIGauge0.isSelected());
      assertTrue(uIGauge0.isFocusable());
      assertEquals(10, uIGauge0.getOffset());
      assertEquals((-1), uIGauge0.getFg_color());
      assertEquals(0, uIGauge0.getMaxValue());
      assertEquals(0, uIGauge0.getType());
      assertTrue(uIGauge0.isInteractive());
      assertEquals(0, uIGauge0.getValue());
      assertEquals((-1), uIGauge0.getGradientSelectedColor());
      assertEquals(0, uIGauge0.getLayoutWidth());
      assertEquals(11322072, uIGauge0.getBg_color());
      assertEquals((-1), uIGauge0.getWidth());
      assertTrue(uIHLayout0.isFocusable());
      assertEquals(0, uIHLayout0.getType());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals(11322072, uIHLayout0.getBg_color());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertFalse(uIHLayout0.isGroup());
      assertTrue(uIHLayout0.isSelected());
      assertEquals(8947848, uIMenu1.getSelectedColor());
      assertEquals(0, uIMenu1.getAbsoluteY());
      assertFalse(uIMenu1.isSelected());
      assertEquals(0, uIMenu1.getLayoutHeight());
      assertEquals((-1), uIMenu1.getGradientColor());
      assertEquals(0, uIMenu1.getSelectedIndex());
      assertEquals(0, uIMenu1.getLayoutWidth());
      assertEquals((-1), uIMenu1.getWidth());
      assertFalse(uIMenu1.isOpenedState());
      assertEquals((-1), uIMenu1.getGradientSelectedColor());
      assertEquals(0, uIMenu1.getType());
      assertTrue(uIMenu1.isFocusable());
      assertEquals(0, uIMenu1.getAbsoluteX());
      assertEquals((-1), uIMenu1.getFg_color());
      assertEquals((-1), uIMenu1.getBg_color());
      assertTrue(uIMenu1.isAutoClose());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = UIUtils.colorize(0, 0);
      assertEquals(0, int0);
      
      UICombobox uICombobox0 = null;
      try {
        uICombobox0 = new UICombobox("", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIScreen", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 858;
      int int1 = 0;
      UIButton uIButton0 = new UIButton("<\"*=\"g9*I");
      assertNotNull(uIButton0);
      assertEquals((-1), uIButton0.getGradientSelectedColor());
      assertFalse(uIButton0.isFlip());
      assertFalse(uIButton0.isWrappable());
      assertEquals(0, uIButton0.getType());
      assertEquals(0, uIButton0.getLayoutWidth());
      assertEquals((-1), uIButton0.getBg_color());
      assertEquals((-1), uIButton0.getWidth());
      assertFalse(uIButton0.isSelected());
      assertEquals((-1), uIButton0.getGradientColor());
      assertTrue(uIButton0.isFocusable());
      assertEquals(1, uIButton0.getAnchorPoint());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertEquals(0, uIButton0.getLayoutHeight());
      assertEquals(2, uIButton0.getHPadding());
      assertFalse(uIButton0.isPressed());
      assertEquals((-1), uIButton0.getFg_color());
      assertEquals("<\"*=\"g9*I", uIButton0.getText());
      assertEquals(8947848, uIButton0.getSelectedColor());
      
      uIButton0.setContainer((UIIContainer) null);
      assertEquals((-1), uIButton0.getGradientSelectedColor());
      assertFalse(uIButton0.isFlip());
      assertFalse(uIButton0.isWrappable());
      assertEquals(0, uIButton0.getType());
      assertEquals(0, uIButton0.getLayoutWidth());
      assertEquals((-1), uIButton0.getBg_color());
      assertEquals((-1), uIButton0.getWidth());
      assertFalse(uIButton0.isSelected());
      assertEquals((-1), uIButton0.getGradientColor());
      assertTrue(uIButton0.isFocusable());
      assertEquals(1, uIButton0.getAnchorPoint());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertEquals(0, uIButton0.getLayoutHeight());
      assertEquals(2, uIButton0.getHPadding());
      assertFalse(uIButton0.isPressed());
      assertEquals((-1), uIButton0.getFg_color());
      assertEquals("<\"*=\"g9*I", uIButton0.getText());
      assertEquals(8947848, uIButton0.getSelectedColor());
      
      // Undeclared exception!
      try { 
        UIUtils.easyMenu("<\"*=\"g9*I", 858, 858, 0, (UIItem) uIButton0, "", " $yM?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 57;
      int int1 = 122;
      int int2 = UIUtils.medColor(57, 122);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(89, int2);
      
      int int3 = 16711680;
      int int4 = UIUtils.colorize(57, 16711680);
      assertFalse(int4 == int2);
      assertFalse(int4 == int1);
      assertFalse(int4 == int3);
      assertFalse(int4 == int0);
      assertEquals((-567975305), int4);
      
      UIItem uIItem0 = null;
      // Undeclared exception!
      try { 
        UIUtils.easyCenterLayout((UIItem) null, 16711680);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIHLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = UIUtils.medColor(0, 5907);
      assertEquals(2825, int0);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 2825;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 2825;
      // Undeclared exception!
      try { 
        UIUtils.rescalaArray(intArray0, intArray0, (-2363), (-630), 2825, 3070, 2825, (-4383), 2825);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -12379150
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = UIUtils.colorize(117, (-1925));
      assertEquals((-2135), int0);
      
      int int1 = UIUtils.medColor(1867, 0);
      assertFalse(int1 == int0);
      assertEquals(805, int1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = UIUtils.medColor(1786, 1786);
      assertEquals(1786, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = UIUtils.colorize(1375, 0);
      assertEquals(1375, int0);
      
      int int1 = UIUtils.colorize((-70), 1375);
      assertFalse(int1 == int0);
      assertEquals(16778094, int1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 32;
      intArray0[1] = 0;
      UIUtils.rescalaArray(intArray0, intArray0, (-805), 32, (-805), (-653), (-691), 0, 3685);
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {32, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = UIUtils.colorize(98, 98);
      assertEquals(16382459, int0);
      
      int[] intArray0 = new int[5];
      intArray0[0] = 16382459;
      intArray0[1] = 904;
      intArray0[2] = 16382459;
      intArray0[3] = 16382459;
      intArray0[4] = 98;
      UIUtils.rescalaArray(intArray0, intArray0, 0, 29, 904, 0, 16382459, 904, 16382459);
      assertEquals(5, intArray0.length);
      assertArrayEquals(new int[] {16382459, 904, 16382459, 16382459, 98}, intArray0);
      
      UIUtils.rescalaArray(intArray0, intArray0, 29, 1559, 0, 98, 0, 1, (-1683));
      assertEquals(5, intArray0.length);
      assertArrayEquals(new int[] {16382459, 904, 16382459, 16382459, 98}, intArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 1203;
      intArray0[2] = 0;
      intArray0[3] = 3173;
      UIUtils.rescalaArray(intArray0, intArray0, 0, (-1), 0, 404, 0, 3173, 10);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {0, 1203, 0, 3173}, intArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UIUtils uIUtils0 = new UIUtils();
      assertNotNull(uIUtils0);
      
      // Undeclared exception!
      try { 
        UIUtils.easyMenu(";^LQb", 2258739, 2258739, 2258739, (UIItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UIButton uIButton0 = new UIButton("");
      assertNotNull(uIButton0);
      assertFalse(uIButton0.isSelected());
      assertEquals(8947848, uIButton0.getSelectedColor());
      assertEquals(1, uIButton0.getAnchorPoint());
      assertEquals(0, uIButton0.getLayoutWidth());
      assertEquals((-1), uIButton0.getWidth());
      assertEquals(0, uIButton0.getLayoutHeight());
      assertEquals((-1), uIButton0.getBg_color());
      assertTrue(uIButton0.isFocusable());
      assertFalse(uIButton0.isPressed());
      assertEquals(2, uIButton0.getHPadding());
      assertEquals((-1), uIButton0.getGradientSelectedColor());
      assertEquals("", uIButton0.getText());
      assertEquals(0, uIButton0.getType());
      assertFalse(uIButton0.isWrappable());
      assertEquals((-1), uIButton0.getFg_color());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertEquals((-1), uIButton0.getGradientColor());
      assertFalse(uIButton0.isFlip());
      
      UIMenu uIMenu0 = UIUtils.easyMenu("", 1118, (-4891), (-1187), (UIItem) uIButton0, "", "");
      assertNotNull(uIMenu0);
      assertEquals(8947848, uIButton0.getSelectedColor());
      assertEquals(11322072, uIButton0.getBg_color());
      assertEquals(1, uIButton0.getAnchorPoint());
      assertEquals(0, uIButton0.getLayoutWidth());
      assertEquals((-1), uIButton0.getWidth());
      assertEquals(0, uIButton0.getLayoutHeight());
      assertTrue(uIButton0.isFocusable());
      assertFalse(uIButton0.isPressed());
      assertEquals(2, uIButton0.getHPadding());
      assertTrue(uIButton0.isSelected());
      assertEquals((-1), uIButton0.getGradientSelectedColor());
      assertEquals("", uIButton0.getText());
      assertEquals(0, uIButton0.getType());
      assertFalse(uIButton0.isWrappable());
      assertEquals((-1), uIButton0.getFg_color());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertEquals((-1), uIButton0.getGradientColor());
      assertFalse(uIButton0.isFlip());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(0, uIMenu0.getType());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals(1118, uIMenu0.getAbsoluteX());
      assertTrue(uIMenu0.isFocusable());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals((-1), uIMenu0.getFg_color());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertEquals(0, uIMenu0.getLayoutWidth());
      
      int int0 = UIUtils.colorize((-4530), 1118);
      assertEquals(16823304, int0);
      
      uIMenu0.selectedColor = (-4891);
      assertEquals(8947848, uIButton0.getSelectedColor());
      assertEquals(11322072, uIButton0.getBg_color());
      assertEquals(1, uIButton0.getAnchorPoint());
      assertEquals(0, uIButton0.getLayoutWidth());
      assertEquals((-1), uIButton0.getWidth());
      assertEquals(0, uIButton0.getLayoutHeight());
      assertTrue(uIButton0.isFocusable());
      assertFalse(uIButton0.isPressed());
      assertEquals(2, uIButton0.getHPadding());
      assertTrue(uIButton0.isSelected());
      assertEquals((-1), uIButton0.getGradientSelectedColor());
      assertEquals("", uIButton0.getText());
      assertEquals(0, uIButton0.getType());
      assertFalse(uIButton0.isWrappable());
      assertEquals((-1), uIButton0.getFg_color());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertEquals((-1), uIButton0.getGradientColor());
      assertFalse(uIButton0.isFlip());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(0, uIMenu0.getType());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals(1118, uIMenu0.getAbsoluteX());
      assertTrue(uIMenu0.isFocusable());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals((-1), uIMenu0.getFg_color());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertEquals(0, uIMenu0.getLayoutWidth());
      
      int int1 = UIUtils.medColor(2730, 0);
      assertFalse(int1 == int0);
      assertEquals(1365, int1);
      
      uIMenu0.firstVisibleIndex = 16823304;
      assertEquals(8947848, uIButton0.getSelectedColor());
      assertEquals(11322072, uIButton0.getBg_color());
      assertEquals(1, uIButton0.getAnchorPoint());
      assertEquals(0, uIButton0.getLayoutWidth());
      assertEquals((-1), uIButton0.getWidth());
      assertEquals(0, uIButton0.getLayoutHeight());
      assertTrue(uIButton0.isFocusable());
      assertFalse(uIButton0.isPressed());
      assertEquals(2, uIButton0.getHPadding());
      assertTrue(uIButton0.isSelected());
      assertEquals((-1), uIButton0.getGradientSelectedColor());
      assertEquals("", uIButton0.getText());
      assertEquals(0, uIButton0.getType());
      assertFalse(uIButton0.isWrappable());
      assertEquals((-1), uIButton0.getFg_color());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertEquals((-1), uIButton0.getGradientColor());
      assertFalse(uIButton0.isFlip());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(0, uIMenu0.getType());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals(1118, uIMenu0.getAbsoluteX());
      assertTrue(uIMenu0.isFocusable());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals((-1), uIMenu0.getFg_color());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertEquals(0, uIMenu0.getLayoutWidth());
      
      int int2 = (-88);
      // Undeclared exception!
      try { 
        UIUtils.imageResize((Image) null, 0, (-88));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UIUtils uIUtils0 = new UIUtils();
      assertNotNull(uIUtils0);
      
      UIMenu uIMenu0 = UIUtils.easyMenu("", 2597, 1141, 2597, (UIItem) null, "", (String) null);
      assertNotNull(uIMenu0);
      assertEquals(0, uIMenu0.getType());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals(2597, uIMenu0.getAbsoluteX());
      assertEquals(1141, uIMenu0.getAbsoluteY());
      assertEquals((-1), uIMenu0.getFg_color());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals(2597, uIMenu0.getWidth());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals((-1), uIMenu0.getSelectedIndex());
      assertTrue(uIMenu0.isFocusable());
      assertEquals(0, uIMenu0.getLayoutWidth());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = UIUtils.medColor(0, 0);
      assertEquals(0, int0);
      
      UIMenu uIMenu0 = new UIMenu("");
      assertNotNull(uIMenu0);
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getFg_color());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getType());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertFalse(uIMenu0.isSelected());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals((-1), uIMenu0.getSelectedIndex());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertFalse(uIMenu0.isOpenedState());
      
      UIMenu uIMenu1 = UIUtils.easyMenu("", 0, 0, 0, (UIItem) uIMenu0);
      assertFalse(uIMenu1.equals((Object)uIMenu0));
      assertNotNull(uIMenu1);
      assertNotSame(uIMenu0, uIMenu1);
      assertNotSame(uIMenu1, uIMenu0);
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getFg_color());
      assertEquals(0, uIMenu0.getType());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals(11322072, uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals((-1), uIMenu0.getSelectedIndex());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertTrue(uIMenu0.isSelected());
      assertFalse(uIMenu0.isOpenedState());
      assertFalse(uIMenu1.isOpenedState());
      assertEquals(0, uIMenu1.getLayoutWidth());
      assertTrue(uIMenu1.isFocusable());
      assertEquals((-1), uIMenu1.getWidth());
      assertEquals((-1), uIMenu1.getGradientColor());
      assertEquals((-1), uIMenu1.getBg_color());
      assertTrue(uIMenu1.isAutoClose());
      assertEquals((-1), uIMenu1.getFg_color());
      assertEquals(0, uIMenu1.getSelectedIndex());
      assertEquals(0, uIMenu1.getLayoutHeight());
      assertEquals(0, uIMenu1.getAbsoluteY());
      assertEquals(0, uIMenu1.getAbsoluteX());
      assertEquals(0, uIMenu1.getType());
      assertFalse(uIMenu1.isSelected());
      assertEquals((-1), uIMenu1.getGradientSelectedColor());
      assertEquals(8947848, uIMenu1.getSelectedColor());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Image image0 = UIMenu.menuImage;
      assertNull(image0);
      
      // Undeclared exception!
      try { 
        UIUtils.imageResize((Image) null, 2020, 2020);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 3502;
      intArray0[1] = 36;
      intArray0[2] = 118;
      intArray0[3] = (-1486);
      // Undeclared exception!
      try { 
        UIUtils.rescalaArray(intArray0, intArray0, (-1486), 118, 118, 3502, 118, (-303), 3502);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1060988
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 59;
      UIUtils.rescalaArray(intArray0, intArray0, 155, 0, 59, 0, 59, 3422, 377);
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {0, 59}, intArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UIButton uIButton0 = new UIButton("");
      assertNotNull(uIButton0);
      assertEquals((-1), uIButton0.getGradientSelectedColor());
      assertFalse(uIButton0.isFlip());
      assertEquals(2, uIButton0.getHPadding());
      assertEquals(0, uIButton0.getLayoutWidth());
      assertFalse(uIButton0.isPressed());
      assertEquals(0, uIButton0.getLayoutHeight());
      assertEquals(1, uIButton0.getAnchorPoint());
      assertEquals((-1), uIButton0.getWidth());
      assertEquals((-1), uIButton0.getGradientColor());
      assertEquals(8947848, uIButton0.getSelectedColor());
      assertFalse(uIButton0.isWrappable());
      assertFalse(uIButton0.isSelected());
      assertEquals("", uIButton0.getText());
      assertEquals(0, uIButton0.getType());
      assertEquals((-1), uIButton0.getBg_color());
      assertEquals((-1), uIButton0.getFg_color());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertTrue(uIButton0.isFocusable());
      
      uIButton0.bg_color = (-4891);
      assertEquals((-1), uIButton0.getGradientSelectedColor());
      assertFalse(uIButton0.isFlip());
      assertEquals(2, uIButton0.getHPadding());
      assertEquals(0, uIButton0.getLayoutWidth());
      assertFalse(uIButton0.isPressed());
      assertEquals(0, uIButton0.getLayoutHeight());
      assertEquals(1, uIButton0.getAnchorPoint());
      assertEquals((-1), uIButton0.getWidth());
      assertEquals((-1), uIButton0.getGradientColor());
      assertEquals(8947848, uIButton0.getSelectedColor());
      assertEquals((-4891), uIButton0.getBg_color());
      assertFalse(uIButton0.isWrappable());
      assertFalse(uIButton0.isSelected());
      assertEquals("", uIButton0.getText());
      assertEquals(0, uIButton0.getType());
      assertEquals((-1), uIButton0.getFg_color());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertTrue(uIButton0.isFocusable());
      
      int int0 = UIUtils.colorize((-4530), 1118);
      assertEquals(16823304, int0);
      
      int int1 = UIUtils.medColor(2730, 0);
      assertFalse(int1 == int0);
      assertEquals(1365, int1);
      
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uIButton0, (-88));
      assertNotNull(uIHLayout0);
      assertEquals((-88), uIButton0.getLayoutWidth());
      assertEquals((-1), uIButton0.getGradientSelectedColor());
      assertFalse(uIButton0.isFlip());
      assertEquals(2, uIButton0.getHPadding());
      assertFalse(uIButton0.isPressed());
      assertEquals(0, uIButton0.getLayoutHeight());
      assertEquals(1, uIButton0.getAnchorPoint());
      assertEquals((-1), uIButton0.getWidth());
      assertEquals((-1), uIButton0.getGradientColor());
      assertEquals(8947848, uIButton0.getSelectedColor());
      assertEquals((-4891), uIButton0.getBg_color());
      assertFalse(uIButton0.isWrappable());
      assertFalse(uIButton0.isSelected());
      assertEquals("", uIButton0.getText());
      assertEquals(0, uIButton0.getType());
      assertEquals((-1), uIButton0.getFg_color());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertTrue(uIButton0.isFocusable());
      assertFalse(uIHLayout0.isSelected());
      assertEquals(0, uIHLayout0.getType());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertTrue(uIHLayout0.isFocusable());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertFalse(uIHLayout0.isGroup());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals(0, uIHLayout0.getLayoutWidth());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = UIUtils.colorize((-1020), 0);
      assertEquals(16776196, int0);
      
      int[] intArray0 = new int[3];
      intArray0[0] = 2083;
      intArray0[1] = 732;
      intArray0[2] = 0;
      // Undeclared exception!
      try { 
        UIUtils.rescalaArray(intArray0, intArray0, 16776196, 805, 4490, 16776196, 732, 805, (-603));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -484683
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UIUtils uIUtils0 = new UIUtils();
      assertNotNull(uIUtils0);
      
      UIGauge uIGauge0 = new UIGauge("", false, 2704, 59);
      assertNotNull(uIGauge0);
      assertEquals(10, uIGauge0.getOffset());
      assertEquals(0, uIGauge0.getType());
      assertEquals(0, uIGauge0.getLayoutWidth());
      assertEquals(2704, uIGauge0.getMaxValue());
      assertEquals((-1), uIGauge0.getGradientSelectedColor());
      assertEquals(8947848, uIGauge0.getSelectedColor());
      assertEquals(0, uIGauge0.getLayoutHeight());
      assertFalse(uIGauge0.isInteractive());
      assertEquals((-1), uIGauge0.getFg_color());
      assertEquals("", uIGauge0.getLabel());
      assertEquals((-1), uIGauge0.getBg_color());
      assertEquals((-1), uIGauge0.getWidth());
      assertFalse(uIGauge0.isSelected());
      assertFalse(uIGauge0.isFocusable());
      assertEquals(59, uIGauge0.getValue());
      assertEquals((-1), uIGauge0.getGradientColor());
      
      UIMenu uIMenu0 = UIUtils.easyMenu("", 13421772, 13421772, 994, (UIItem) uIGauge0, "", "");
      assertNotNull(uIMenu0);
      assertEquals(10, uIGauge0.getOffset());
      assertEquals(0, uIGauge0.getType());
      assertEquals(11322072, uIGauge0.getBg_color());
      assertEquals(0, uIGauge0.getLayoutWidth());
      assertEquals(2704, uIGauge0.getMaxValue());
      assertEquals((-1), uIGauge0.getGradientSelectedColor());
      assertEquals(8947848, uIGauge0.getSelectedColor());
      assertEquals(0, uIGauge0.getLayoutHeight());
      assertTrue(uIGauge0.isSelected());
      assertTrue(uIGauge0.isFocusable());
      assertFalse(uIGauge0.isInteractive());
      assertEquals((-1), uIGauge0.getFg_color());
      assertEquals("", uIGauge0.getLabel());
      assertEquals((-1), uIGauge0.getWidth());
      assertEquals(59, uIGauge0.getValue());
      assertEquals((-1), uIGauge0.getGradientColor());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals(994, uIMenu0.getWidth());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(0, uIMenu0.getType());
      assertEquals((-1), uIMenu0.getFg_color());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals(13421772, uIMenu0.getAbsoluteY());
      assertEquals(13421772, uIMenu0.getAbsoluteX());
      assertTrue(uIMenu0.isFocusable());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      
      UIMenu uIMenu1 = UIUtils.easyMenu((String) null, (-79), 0, 0, (UIItem) null, (String) null, (String) null);
      assertFalse(uIMenu1.equals((Object)uIMenu0));
      assertNotNull(uIMenu1);
      assertNotSame(uIMenu1, uIMenu0);
      assertEquals(0, uIMenu1.getLayoutWidth());
      assertEquals(0, uIMenu1.getAbsoluteX());
      assertEquals(0, uIMenu1.getAbsoluteY());
      assertFalse(uIMenu1.isSelected());
      assertEquals(8947848, uIMenu1.getSelectedColor());
      assertEquals((-1), uIMenu1.getWidth());
      assertEquals((-1), uIMenu1.getSelectedIndex());
      assertFalse(uIMenu1.isOpenedState());
      assertEquals(0, uIMenu1.getLayoutHeight());
      assertEquals((-1), uIMenu1.getFg_color());
      assertTrue(uIMenu1.isAutoClose());
      assertEquals((-1), uIMenu1.getGradientSelectedColor());
      assertEquals((-1), uIMenu1.getGradientColor());
      assertEquals((-1), uIMenu1.getBg_color());
      assertEquals(0, uIMenu1.getType());
      assertTrue(uIMenu1.isFocusable());
      
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[3] = 0;
      intArray0[4] = 2704;
      intArray0[5] = 2704;
      intArray0[6] = (-3730);
      intArray0[7] = (-1076);
      intArray0[8] = 57;
      int[] intArray1 = new int[0];
      assertFalse(intArray1.equals((Object)intArray0));
      
      // Undeclared exception!
      try { 
        UIUtils.rescalaArray(intArray0, intArray1, 0, (-1076), 622, 2704, (-1076), (-5622), 1733);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      assertNotNull(uIAccordion0);
      assertEquals(12303291, uIAccordion0.getSepColor());
      assertEquals(11184810, uIAccordion0.getLabelColor());
      assertFalse(uIAccordion0.isOneOpen());
      assertEquals((-1), uIAccordion0.getLabelGradientColor());
      assertEquals(0, uIAccordion0.getLayoutHeight());
      assertTrue(uIAccordion0.isFocusable());
      assertEquals((-1), uIAccordion0.getWidth());
      assertEquals(0, uIAccordion0.getLayoutWidth());
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertFalse(uIAccordion0.isModal());
      assertEquals(0, uIAccordion0.getFirstVisible());
      assertEquals((-1), uIAccordion0.getFg_color());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isListMode());
      assertEquals((-1), uIAccordion0.getGradientColor());
      assertEquals((-1), uIAccordion0.getBg_color());
      assertEquals(0, uIAccordion0.getType());
      assertEquals(8947848, uIAccordion0.getSelectedColor());
      assertEquals((-1), uIAccordion0.getGradientSelectedColor());
      assertEquals(2, uIAccordion0.getSepSize());
      assertFalse(uIAccordion0.isSelected());
      assertTrue(uIAccordion0.isDirty());
      
      UIAccordion uIAccordion1 = (UIAccordion)uIAccordion0.getSelectedItem();
      assertNotNull(uIAccordion1);
      assertSame(uIAccordion0, uIAccordion1);
      assertSame(uIAccordion1, uIAccordion0);
      assertEquals(12303291, uIAccordion0.getSepColor());
      assertEquals(11184810, uIAccordion0.getLabelColor());
      assertFalse(uIAccordion0.isOneOpen());
      assertEquals((-1), uIAccordion0.getLabelGradientColor());
      assertEquals(0, uIAccordion0.getLayoutHeight());
      assertTrue(uIAccordion0.isFocusable());
      assertEquals((-1), uIAccordion0.getWidth());
      assertEquals(0, uIAccordion0.getLayoutWidth());
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertFalse(uIAccordion0.isModal());
      assertEquals(0, uIAccordion0.getFirstVisible());
      assertEquals((-1), uIAccordion0.getFg_color());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isListMode());
      assertEquals((-1), uIAccordion0.getGradientColor());
      assertEquals((-1), uIAccordion0.getBg_color());
      assertEquals(0, uIAccordion0.getType());
      assertEquals(8947848, uIAccordion0.getSelectedColor());
      assertEquals((-1), uIAccordion0.getGradientSelectedColor());
      assertEquals(2, uIAccordion0.getSepSize());
      assertFalse(uIAccordion0.isSelected());
      assertTrue(uIAccordion0.isDirty());
      assertEquals((-1), uIAccordion1.getMaxHeight());
      assertFalse(uIAccordion1.isModal());
      assertEquals((-1), uIAccordion1.getSelectedIndex());
      assertFalse(uIAccordion1.isListMode());
      assertEquals((-1), uIAccordion1.getFg_color());
      assertEquals((-1), uIAccordion1.getGradientColor());
      assertEquals(0, uIAccordion1.getLayoutHeight());
      assertTrue(uIAccordion1.isFocusable());
      assertEquals((-1), uIAccordion1.getWidth());
      assertEquals(0, uIAccordion1.getLayoutWidth());
      assertEquals(0, uIAccordion1.getFirstVisible());
      assertFalse(uIAccordion1.isOneOpen());
      assertEquals(12303291, uIAccordion1.getSepColor());
      assertEquals(11184810, uIAccordion1.getLabelColor());
      assertEquals((-1), uIAccordion1.getLabelGradientColor());
      assertEquals((-1), uIAccordion1.getGradientSelectedColor());
      assertEquals(0, uIAccordion1.getType());
      assertEquals(8947848, uIAccordion1.getSelectedColor());
      assertFalse(uIAccordion1.isSelected());
      assertEquals((-1), uIAccordion1.getBg_color());
      assertTrue(uIAccordion1.isDirty());
      assertEquals(2, uIAccordion1.getSepSize());
      
      int int0 = 139;
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uIAccordion1, 139);
      assertNotNull(uIHLayout0);
      assertSame(uIAccordion0, uIAccordion1);
      assertSame(uIAccordion1, uIAccordion0);
      assertEquals(12303291, uIAccordion0.getSepColor());
      assertEquals(11184810, uIAccordion0.getLabelColor());
      assertFalse(uIAccordion0.isOneOpen());
      assertEquals((-1), uIAccordion0.getLabelGradientColor());
      assertEquals(0, uIAccordion0.getLayoutHeight());
      assertTrue(uIAccordion0.isFocusable());
      assertEquals((-1), uIAccordion0.getWidth());
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertFalse(uIAccordion0.isModal());
      assertEquals(0, uIAccordion0.getFirstVisible());
      assertEquals((-1), uIAccordion0.getFg_color());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isListMode());
      assertEquals((-1), uIAccordion0.getGradientColor());
      assertEquals((-1), uIAccordion0.getBg_color());
      assertEquals(0, uIAccordion0.getType());
      assertEquals(8947848, uIAccordion0.getSelectedColor());
      assertEquals(139, uIAccordion0.getLayoutWidth());
      assertEquals((-1), uIAccordion0.getGradientSelectedColor());
      assertEquals(2, uIAccordion0.getSepSize());
      assertFalse(uIAccordion0.isSelected());
      assertTrue(uIAccordion0.isDirty());
      assertEquals((-1), uIAccordion1.getMaxHeight());
      assertFalse(uIAccordion1.isModal());
      assertEquals((-1), uIAccordion1.getSelectedIndex());
      assertFalse(uIAccordion1.isListMode());
      assertEquals((-1), uIAccordion1.getFg_color());
      assertEquals((-1), uIAccordion1.getGradientColor());
      assertEquals(0, uIAccordion1.getLayoutHeight());
      assertTrue(uIAccordion1.isFocusable());
      assertEquals((-1), uIAccordion1.getWidth());
      assertEquals(0, uIAccordion1.getFirstVisible());
      assertFalse(uIAccordion1.isOneOpen());
      assertEquals(12303291, uIAccordion1.getSepColor());
      assertEquals(11184810, uIAccordion1.getLabelColor());
      assertEquals((-1), uIAccordion1.getLabelGradientColor());
      assertEquals(139, uIAccordion1.getLayoutWidth());
      assertEquals((-1), uIAccordion1.getGradientSelectedColor());
      assertEquals(0, uIAccordion1.getType());
      assertEquals(8947848, uIAccordion1.getSelectedColor());
      assertFalse(uIAccordion1.isSelected());
      assertEquals((-1), uIAccordion1.getBg_color());
      assertTrue(uIAccordion1.isDirty());
      assertEquals(2, uIAccordion1.getSepSize());
      assertFalse(uIHLayout0.isGroup());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertFalse(uIHLayout0.isSelected());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertTrue(uIHLayout0.isFocusable());
      assertEquals(0, uIHLayout0.getType());
      
      int int1 = UIUtils.colorize(139, 139);
      assertFalse(int1 == int0);
      assertEquals(23290668, int1);
      
      int int2 = 1266;
      int int3 = UIUtils.medColor(1266, 1266);
      assertFalse(int3 == int1);
      assertTrue(int3 == int2);
      assertFalse(int3 == int0);
      assertEquals(1266, int3);
      
      int int4 = (-1178);
      // Undeclared exception!
      try { 
        UIUtils.easyMenu("pPY I/rT;D(ri$w$-N", (-1178), 0, 0, (UIItem) uIAccordion0, "pPY I/rT;D(ri$w$-N", "pPY I/rT;D(ri$w$-N");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Image image0 = UIMenu.menuImage;
      assertNull(image0);
      
      // Undeclared exception!
      try { 
        UIUtils.imageResize((Image) null, 116, 116);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Image image0 = UIMenu.menuImage;
      assertNull(image0);
      
      // Undeclared exception!
      try { 
        UIUtils.imageResize((Image) null, 108, 108);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      assertNotNull(uIAccordion0);
      assertFalse(uIAccordion0.isSelected());
      assertTrue(uIAccordion0.isDirty());
      assertEquals(0, uIAccordion0.getLayoutHeight());
      assertEquals(2, uIAccordion0.getSepSize());
      assertEquals(11184810, uIAccordion0.getLabelColor());
      assertEquals(8947848, uIAccordion0.getSelectedColor());
      assertEquals((-1), uIAccordion0.getGradientColor());
      assertFalse(uIAccordion0.isListMode());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertEquals((-1), uIAccordion0.getBg_color());
      assertEquals((-1), uIAccordion0.getFg_color());
      assertEquals(0, uIAccordion0.getType());
      assertEquals((-1), uIAccordion0.getGradientSelectedColor());
      assertEquals((-1), uIAccordion0.getLabelGradientColor());
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertFalse(uIAccordion0.isModal());
      assertFalse(uIAccordion0.isOneOpen());
      assertEquals(0, uIAccordion0.getFirstVisible());
      assertEquals(12303291, uIAccordion0.getSepColor());
      assertEquals(0, uIAccordion0.getLayoutWidth());
      assertEquals((-1), uIAccordion0.getWidth());
      assertTrue(uIAccordion0.isFocusable());
      
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uIAccordion0, (-2858));
      assertNotNull(uIHLayout0);
      assertFalse(uIAccordion0.isSelected());
      assertTrue(uIAccordion0.isDirty());
      assertEquals(0, uIAccordion0.getLayoutHeight());
      assertEquals(2, uIAccordion0.getSepSize());
      assertEquals(11184810, uIAccordion0.getLabelColor());
      assertEquals(8947848, uIAccordion0.getSelectedColor());
      assertEquals((-1), uIAccordion0.getGradientColor());
      assertFalse(uIAccordion0.isListMode());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertEquals((-2858), uIAccordion0.getLayoutWidth());
      assertEquals((-1), uIAccordion0.getBg_color());
      assertEquals((-1), uIAccordion0.getFg_color());
      assertEquals(0, uIAccordion0.getType());
      assertEquals((-1), uIAccordion0.getGradientSelectedColor());
      assertEquals((-1), uIAccordion0.getLabelGradientColor());
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertFalse(uIAccordion0.isModal());
      assertFalse(uIAccordion0.isOneOpen());
      assertEquals(0, uIAccordion0.getFirstVisible());
      assertEquals(12303291, uIAccordion0.getSepColor());
      assertEquals((-1), uIAccordion0.getWidth());
      assertTrue(uIAccordion0.isFocusable());
      assertTrue(uIHLayout0.isFocusable());
      assertEquals(0, uIHLayout0.getType());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertFalse(uIHLayout0.isSelected());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertFalse(uIHLayout0.isGroup());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertEquals((-1), uIHLayout0.getWidth());
      
      UIMenu uIMenu0 = UIUtils.easyMenu("", 2701, 1031, 106, (UIItem) uIHLayout0);
      assertNotNull(uIMenu0);
      assertFalse(uIAccordion0.isSelected());
      assertTrue(uIAccordion0.isDirty());
      assertEquals(0, uIAccordion0.getLayoutHeight());
      assertEquals(2, uIAccordion0.getSepSize());
      assertEquals(11184810, uIAccordion0.getLabelColor());
      assertEquals(8947848, uIAccordion0.getSelectedColor());
      assertEquals((-1), uIAccordion0.getGradientColor());
      assertFalse(uIAccordion0.isListMode());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertEquals((-2858), uIAccordion0.getLayoutWidth());
      assertEquals((-1), uIAccordion0.getBg_color());
      assertEquals((-1), uIAccordion0.getFg_color());
      assertEquals(0, uIAccordion0.getType());
      assertEquals((-1), uIAccordion0.getGradientSelectedColor());
      assertEquals((-1), uIAccordion0.getLabelGradientColor());
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertFalse(uIAccordion0.isModal());
      assertFalse(uIAccordion0.isOneOpen());
      assertEquals(0, uIAccordion0.getFirstVisible());
      assertEquals(12303291, uIAccordion0.getSepColor());
      assertEquals((-1), uIAccordion0.getWidth());
      assertTrue(uIAccordion0.isFocusable());
      assertTrue(uIHLayout0.isFocusable());
      assertEquals(0, uIHLayout0.getType());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertFalse(uIHLayout0.isGroup());
      assertTrue(uIHLayout0.isSelected());
      assertEquals(11322072, uIHLayout0.getBg_color());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals(1031, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getType());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals(106, uIMenu0.getWidth());
      assertEquals((-1), uIMenu0.getFg_color());
      assertTrue(uIMenu0.isAutoClose());
      assertFalse(uIMenu0.isOpenedState());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals(2701, uIMenu0.getAbsoluteX());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-2009);
      intArray0[1] = (-3920);
      UIUtils.rescalaArray(intArray0, intArray0, (-3920), (-3920), (-2009), (-2009), (-2009), (-2009), (-3920));
      UIUtils.rescalaArray(intArray0, intArray0, (-2009), 50, (-4), (-3920), (-3920), 32, (-3920));
      UIUtils.rescalaArray(intArray0, intArray0, (-2009), 30, (-3920), 111, 14, (-4), 1776);
      UIUtils.rescalaArray(intArray0, intArray0, (-3920), 21, (-3920), 3657, 21, 3657, (-4));
      assertEquals(2, intArray0.length);
  }
}
