/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 18:34:28 KST 2018
 */

package it.yup.xml;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.fail;

import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.xmlpull.v1.XmlSerializer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class KXmlSerializer_ESTest5 extends KXmlSerializer_ESTest_scaffolding5 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter();
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      kXmlSerializer0.flush();
      assertEquals(0, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter();
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      kXmlSerializer0.entityRef("");
      assertEquals(0, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter();
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      kXmlSerializer0.endDocument();
      assertEquals(0, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter();
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      kXmlSerializer0.docdecl("");
      assertEquals(0, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter(0);
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      kXmlSerializer0.comment((String) null);
      assertEquals(0, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter();
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      kXmlSerializer0.cdsect("");
      assertEquals(0, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter();
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      kXmlSerializer0.startTag("", "");
      kXmlSerializer0.text("");
      assertEquals(1, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter(0);
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      kXmlSerializer0.startTag("6", (String) null);
      kXmlSerializer0.getNamespace();
      assertEquals(1, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        kXmlSerializer0.text(charArray0, 0, 2);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      Boolean boolean0 = new Boolean((String) null);
      // Undeclared exception!
      try { 
        kXmlSerializer0.startDocument("", boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      int int0 = kXmlSerializer0.getDepth();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter(0);
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      kXmlSerializer0.setPrefix("", "");
      assertNull(kXmlSerializer0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      kXmlSerializer0.getName();
      assertEquals(0, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter(0);
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      XmlSerializer xmlSerializer0 = kXmlSerializer0.startTag("", (String) null);
      xmlSerializer0.getName();
      assertEquals(1, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      kXmlSerializer0.getNamespace();
      assertEquals(0, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter(0);
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      kXmlSerializer0.startTag("", (String) null);
      kXmlSerializer0.getNamespace();
      assertEquals(1, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter(0);
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      XmlSerializer xmlSerializer0 = kXmlSerializer0.startTag("6", (String) null);
      // Undeclared exception!
      try { 
        xmlSerializer0.endTag("", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // </{}null> does not match start
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.endTag((String) null, "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.endTag("", (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter(0);
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      kXmlSerializer0.startTag("", (String) null);
      // Undeclared exception!
      try { 
        kXmlSerializer0.attribute((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.attribute("", "", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal position for attribute
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      kXmlSerializer0.getPrefix("I", true);
      // Undeclared exception!
      try { 
        kXmlSerializer0.startTag("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.startTag((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter();
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      Boolean boolean0 = new Boolean(true);
      kXmlSerializer0.startDocument("", boolean0);
      assertEquals(0, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter();
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      Boolean boolean0 = new Boolean(false);
      kXmlSerializer0.startDocument("", boolean0);
      assertEquals(0, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter();
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      kXmlSerializer0.startDocument((String) null, (Boolean) null);
      assertEquals(0, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.setOutput((OutputStream) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(pipedOutputStream0);
      try { 
        kXmlSerializer0.setOutput((OutputStream) filterOutputStream0, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      kXmlSerializer0.setPrefix("", (String) null);
      assertNull(kXmlSerializer0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      kXmlSerializer0.setPrefix((String) null, "");
      assertNull(kXmlSerializer0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.setFeature((String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unsupported Feature
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter();
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      String string0 = kXmlSerializer0.getPrefix("", true);
      assertEquals("", string0);
      assertEquals(0, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter(0);
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      kXmlSerializer0.startTag("6uLYF@FG[j", (String) null);
      kXmlSerializer0.getPrefix("6uLYF@FG[j", false);
      assertEquals(1, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      boolean boolean0 = kXmlSerializer0.getFeature("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter(0);
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      XmlSerializer xmlSerializer0 = kXmlSerializer0.text("");
      assertEquals(0, xmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      char[] charArray0 = new char[24];
      // Undeclared exception!
      try { 
        kXmlSerializer0.text(charArray0, 0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.ignorableWhitespace(">");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter(0);
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      XmlSerializer xmlSerializer0 = kXmlSerializer0.startTag("", (String) null);
      xmlSerializer0.attribute("", "", "<");
      assertEquals(1, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      char[] charArray0 = new char[5];
      charArray0[1] = '\'';
      // Undeclared exception!
      try { 
        kXmlSerializer0.text(charArray0, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.text("\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      StringWriter stringWriter0 = new StringWriter(0);
      kXmlSerializer0.setOutput((Writer) stringWriter0);
      XmlSerializer xmlSerializer0 = kXmlSerializer0.startTag("6", (String) null);
      xmlSerializer0.processingInstruction((String) null);
      assertEquals(1, kXmlSerializer0.getDepth());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      kXmlSerializer0.ignorableWhitespace("");
      assertNull(kXmlSerializer0.getNamespace());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.comment("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.getProperty("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unsupported property
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.endDocument();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        kXmlSerializer0.setProperty("", object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unsupported Property:java.lang.Object@4fbcb69d
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.processingInstruction((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      char[] charArray0 = new char[5];
      XmlSerializer xmlSerializer0 = kXmlSerializer0.text(charArray0, 0, 0);
      assertSame(kXmlSerializer0, xmlSerializer0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.docdecl("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.cdsect("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      String string0 = kXmlSerializer0.getPrefix("", false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      KXmlSerializer kXmlSerializer0 = new KXmlSerializer();
      // Undeclared exception!
      try { 
        kXmlSerializer0.entityRef("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.KXmlSerializer", e);
      }
  }
}
