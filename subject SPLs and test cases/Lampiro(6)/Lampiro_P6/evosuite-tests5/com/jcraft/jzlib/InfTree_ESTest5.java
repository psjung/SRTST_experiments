/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 17:02:49 KST 2018
 */

package com.jcraft.jzlib;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jcraft.jzlib.InfTree;
import com.jcraft.jzlib.ZStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class InfTree_ESTest5 extends InfTree_ESTest_scaffolding5 {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InfTree infTree0 = new InfTree();
      int[] intArray0 = new int[6];
      ZStream zStream0 = new ZStream();
      infTree0.inflate_trees_dynamic(1, 0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, zStream0);
      // Undeclared exception!
      try { 
        infTree0.inflate_trees_bits(intArray0, (int[]) null, (int[]) null, (int[]) null, zStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[4];
      int[][] intArray1 = new int[4][4];
      InfTree.inflate_trees_fixed(intArray0, intArray0, intArray1, intArray1, (ZStream) null);
      InfTree infTree0 = new InfTree();
      // Undeclared exception!
      try { 
        infTree0.inflate_trees_dynamic(1, 0, intArray0, intArray1[0], intArray0, intArray0, intArray0, intArray1[0], (ZStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[2];
      int[][] intArray1 = new int[0][4];
      // Undeclared exception!
      try { 
        InfTree.inflate_trees_fixed(intArray0, intArray0, intArray1, intArray1, (ZStream) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InfTree infTree0 = new InfTree();
      int[] intArray0 = new int[3];
      ZStream zStream0 = new ZStream();
      infTree0.hn = intArray0;
      // Undeclared exception!
      try { 
        infTree0.inflate_trees_bits(intArray0, intArray0, intArray0, intArray0, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[4];
      int[][] intArray1 = new int[4][4];
      InfTree.inflate_trees_fixed(intArray0, intArray0, intArray1, intArray1, (ZStream) null);
      InfTree infTree0 = new InfTree();
      // Undeclared exception!
      try { 
        infTree0.inflate_trees_dynamic(1, 0, intArray0, intArray1[0], intArray0, intArray0, intArray0, intArray0, (ZStream) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      InfTree infTree0 = new InfTree();
      int[] intArray0 = new int[20];
      infTree0.inflate_trees_bits(intArray0, intArray0, intArray0, intArray0, zStream0);
      // Undeclared exception!
      try { 
        infTree0.inflate_trees_dynamic(0, 0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, zStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      int[] intArray0 = new int[23];
      InfTree infTree0 = new InfTree();
      infTree0.r = intArray0;
      int[][] intArray1 = new int[1][9];
      InfTree.inflate_trees_fixed(infTree0.r, infTree0.r, intArray1, intArray1, zStream0);
      // Undeclared exception!
      try { 
        infTree0.inflate_trees_bits(intArray0, intArray0, intArray0, intArray0, zStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      InfTree infTree0 = new InfTree();
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      ZStream zStream0 = new ZStream();
      int int0 = infTree0.inflate_trees_dynamic(1, 0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, zStream0);
      assertArrayEquals(new int[] {0, 1, 0, 192, 1, 0}, intArray0);
      assertEquals((-3), int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      int[] intArray0 = new int[6];
      ZStream zStream0 = new ZStream();
      // Undeclared exception!
      try { 
        InfTree.inflate_trees_fixed((int[]) null, intArray0, (int[][]) null, (int[][]) null, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfTree", e);
      }
  }
}
