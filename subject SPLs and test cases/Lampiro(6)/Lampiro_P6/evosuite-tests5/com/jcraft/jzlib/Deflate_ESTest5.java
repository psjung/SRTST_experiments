/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 16:52:36 KST 2018
 */

package com.jcraft.jzlib;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jcraft.jzlib.Deflate;
import com.jcraft.jzlib.ZStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class Deflate_ESTest5 extends Deflate_ESTest_scaffolding5 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
      
      int int0 = deflate0.deflate(zStream0, 1);
      assertEquals((-2), int0);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      deflate0.send_bits(0, (-4));
      // Undeclared exception!
      try { 
        deflate0._tr_stored_block(0, 0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      
      int int0 = deflate0.deflateInit(zStream0, 0);
      assertEquals(0, int0);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      
      boolean boolean0 = deflate0._tr_tally(2, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.putShortMSB((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_out);
      
      int int0 = deflate0.deflateInit(zStream0, 0);
      assertEquals(0, int0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.avail_out);
      
      deflate0.copy_block(0, 1, true);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      short[] shortArray0 = new short[7];
      shortArray0[1] = (short)1;
      deflate0.send_tree(shortArray0, 0);
      assertArrayEquals(new short[] {(short)0, (short)1, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray0);
      assertEquals(7, shortArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      deflate0.send_all_trees(0, 0, (-1));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      short[] shortArray0 = new short[6];
      shortArray0[1] = (short)1;
      deflate0.scan_tree(shortArray0, (short)0);
      assertArrayEquals(new short[] {(short)0, (short)1, (short)0, (short) (-1), (short)0, (short)0}, shortArray0);
      assertEquals(6, shortArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      short[] shortArray0 = new short[8];
      byte[] byteArray0 = new byte[2];
      boolean boolean0 = Deflate.smaller(shortArray0, (short)0, 1, byteArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
      assertEquals(8, shortArray0.length);
      assertEquals(2, byteArray0.length);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      deflate0.tr_init();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      short[] shortArray0 = new short[7];
      deflate0.send_tree(shortArray0, 0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray0);
      assertEquals(7, shortArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      short[] shortArray0 = new short[4];
      deflate0.send_code(0, shortArray0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0}, shortArray0);
      assertEquals(4, shortArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      deflate0.init_block();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      deflate0.bi_windup();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      short[] shortArray0 = new short[9];
      deflate0.bl_tree = shortArray0;
      // Undeclared exception!
      try { 
        deflate0.tr_init();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        Deflate.smaller((short[]) null, 0, 0, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      short[] shortArray0 = new short[7];
      // Undeclared exception!
      try { 
        Deflate.smaller(shortArray0, (short)4, (short)0, (byte[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.send_tree((short[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      short[] shortArray0 = new short[1];
      // Undeclared exception!
      try { 
        deflate0.send_code(0, shortArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.send_bits(0, 17);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      short[] shortArray0 = new short[6];
      // Undeclared exception!
      try { 
        deflate0.scan_tree(shortArray0, (short)2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.put_short(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.put_byte((byte[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.put_byte((byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      short[] shortArray0 = new short[9];
      // Undeclared exception!
      try { 
        deflate0.pqdownheap(shortArray0, 573);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 573
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.lm_init();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.fill_window();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
      
      // Undeclared exception!
      try { 
        deflate0.deflateReset(zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.deflateInit2((ZStream) null, 0, 0, 0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.deflateInit((ZStream) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.deflate((ZStream) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.avail_in);
      
      int int0 = deflate0.deflateInit(zStream0, 0);
      assertEquals(0, int0);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0L, zStream0.total_in);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.avail_in);
      
      // Undeclared exception!
      try { 
        deflate0.copy_block(0, 513, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      short[] shortArray0 = new short[9];
      // Undeclared exception!
      try { 
        deflate0.compress_block(shortArray0, shortArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 512
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0._tr_tally(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0._tr_stored_block(0, 0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0._tr_flush_block(0, 0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
      
      int int0 = deflate0.deflate(zStream0, (-1));
      assertEquals((-2), int0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.next_out_index);
      
      int int0 = deflate0.deflate(zStream0, 5);
      assertEquals((-2), int0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.next_out_index);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      
      int int0 = deflate0.deflateSetDictionary(zStream0, (byte[]) null, 0);
      assertEquals((-2), int0);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      int int0 = deflate0.deflateParams((ZStream) null, 0, 3);
      assertEquals((-2), int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      int int0 = deflate0.deflateParams((ZStream) null, 10, 0);
      assertEquals((-2), int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.deflateParams((ZStream) null, (-1), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      int int0 = deflate0.deflateParams((ZStream) null, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      int int0 = deflate0.deflateEnd();
      assertEquals((-2), int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.next_in_index);
      
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      int int0 = deflate0.deflateInit(zStream0, (byte)10);
      assertEquals((-2), int0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.next_in_index);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      
      int int0 = zStream0.deflateInit((-2), true);
      assertEquals((-2), int0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.adler);
      assertEquals(0L, zStream0.total_out);
      
      int int0 = zStream0.deflateInit(0, 16, false);
      assertEquals((-2), int0);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.adler);
      assertEquals(0L, zStream0.total_out);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      
      int int0 = deflate0.deflateInit(zStream0, 0, 0);
      assertEquals((-2), int0);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.adler);
      assertEquals(0L, zStream0.total_out);
      
      int int0 = deflate0.deflateInit2(zStream0, 0, 0, 0, 10, 0);
      assertEquals((-2), int0);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.adler);
      assertEquals(0L, zStream0.total_out);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      
      int int0 = deflate0.deflateInit2(zStream0, 0, 0, 0, 0, 0);
      assertEquals((-2), int0);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      
      int int0 = zStream0.deflateInit(0, true);
      assertEquals(0, int0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.longest_match(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      ZStream zStream0 = new ZStream();
      assertNotNull(zStream0);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.avail_in);
      
      int int0 = deflate0.deflateInit(zStream0, 0);
      assertEquals(0, int0);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0L, zStream0.total_in);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.avail_in);
      
      int int1 = deflate0.longest_match(0);
      assertTrue(int1 == int0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.deflate_fast(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      deflate0.strstart = (-263);
      // Undeclared exception!
      try { 
        deflate0.deflate_slow(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      deflate0.strstart = (-1);
      // Undeclared exception!
      try { 
        deflate0.deflate_slow(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      assertNotNull(deflate0);
      
      // Undeclared exception!
      try { 
        deflate0.deflate_stored(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      ZStream zStream0 = new ZStream();
      deflate0.deflateInit(zStream0, 0);
      // Undeclared exception!
      try { 
        deflate0.flush_block_only(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      deflate0.bi_flush();
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      // Undeclared exception!
      try { 
        deflate0._tr_align();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      deflate0.set_data_type();
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      // Undeclared exception!
      try { 
        deflate0.send_all_trees(138, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      short[] shortArray0 = new short[6];
      shortArray0[1] = (short) (-1);
      // Undeclared exception!
      try { 
        deflate0.send_tree(shortArray0, (short)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      // Undeclared exception!
      try { 
        deflate0.build_bl_tree();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Tree", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      short[] shortArray0 = new short[4];
      shortArray0[1] = (short) (-1);
      deflate0.scan_tree(shortArray0, 0);
      assertArrayEquals(new short[] {(short)0, (short) (-1), (short)0, (short) (-1)}, shortArray0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      short[] shortArray0 = new short[4];
      deflate0.pqdownheap(shortArray0, 1);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0}, shortArray0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      short[] shortArray0 = new short[7];
      deflate0.pqdownheap(shortArray0, 0);
      assertArrayEquals(new short[] {(short)0, (short)0, (short)0, (short)0, (short)0, (short)0, (short)0}, shortArray0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Deflate.Config deflate_Config0 = new Deflate.Config(0, 0, 0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      // Undeclared exception!
      try { 
        deflate0.copy_block(0, 0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      // Undeclared exception!
      try { 
        deflate0.compress_block((short[]) null, (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      // Undeclared exception!
      try { 
        deflate0.send_all_trees(0, 0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Deflate deflate0 = new Deflate();
      // Undeclared exception!
      try { 
        deflate0.deflateInit((ZStream) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.Deflate", e);
      }
  }
}
