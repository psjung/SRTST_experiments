/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 17:13:09 KST 2018
 */

package com.jcraft.jzlib;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jcraft.jzlib.InfBlocks;
import com.jcraft.jzlib.InfCodes;
import com.jcraft.jzlib.ZStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class InfCodes_ESTest4 extends InfCodes_ESTest_scaffolding4 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertNotNull(zStream0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, object0, 0);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(1L, zStream0.adler);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertNotNull(infBlocks0);
      
      InfCodes infCodes0 = infBlocks0.codes;
      assertNotNull(infCodes0);
      
      int[] intArray0 = new int[1];
      infCodes0.init(0, 0, intArray0, 1, intArray0, 0, zStream0);
      assertEquals(1, intArray0.length);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(1L, zStream0.adler);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertArrayEquals(new int[] {0}, intArray0);
      
      infBlocks0.bitk = 20;
      // Undeclared exception!
      try { 
        infCodes0.inflate_fast(0, 0, intArray0, 0, intArray0, 0, infBlocks0, zStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0L, zStream0.adler);
      assertNotNull(zStream0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, object0, 0);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
      assertEquals(1L, zStream0.adler);
      assertNotNull(infBlocks0);
      
      InfCodes infCodes0 = infBlocks0.codes;
      assertNotNull(infCodes0);
      
      int[] intArray0 = new int[1];
      infBlocks0.bitk = 21;
      // Undeclared exception!
      try { 
        infCodes0.inflate_fast(0, 0, intArray0, 0, intArray0, 0, infBlocks0, zStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      ZStream zStream0 = new ZStream();
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0L, zStream0.adler);
      assertNotNull(zStream0);
      
      int[] intArray0 = new int[9];
      infCodes0.len = 1;
      InfBlocks infBlocks0 = new InfBlocks(zStream0, infCodes0, 0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(1L, zStream0.adler);
      assertNotNull(infBlocks0);
      
      // Undeclared exception!
      try { 
        infCodes0.inflate_fast(0, 0, intArray0, 0, intArray0, 0, infBlocks0, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      ZStream zStream0 = new ZStream();
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.adler);
      assertNotNull(zStream0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      zStream0.next_in_index = 1;
      int[] intArray0 = new int[9];
      InfBlocks infBlocks0 = new InfBlocks(zStream0, object0, 0);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(1, zStream0.next_in_index);
      assertEquals(1L, zStream0.adler);
      assertNotNull(infBlocks0);
      
      // Undeclared exception!
      try { 
        infCodes0.inflate_fast(0, 0, intArray0, 0, intArray0, 0, infBlocks0, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertNotNull(zStream0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, object0, 0);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertNotNull(infBlocks0);
      
      InfCodes infCodes0 = infBlocks0.codes;
      assertNotNull(infCodes0);
      
      int[] intArray0 = new int[1];
      zStream0.avail_in = 1;
      // Undeclared exception!
      try { 
        infCodes0.inflate_fast(0, 0, intArray0, 0, intArray0, 0, infBlocks0, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      int[] intArray0 = new int[2];
      ZStream zStream0 = new ZStream();
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
      assertNotNull(zStream0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, (Object) null, 0);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
      assertNotNull(infBlocks0);
      
      // Undeclared exception!
      try { 
        infCodes0.inflate_fast(0, 0, intArray0, 0, intArray0, 1, infBlocks0, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      ZStream zStream0 = new ZStream();
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertNotNull(zStream0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, infCodes0, 0);
      assertEquals(1L, zStream0.adler);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertNotNull(infBlocks0);
      
      // Undeclared exception!
      try { 
        infCodes0.inflate_fast(0, 0, infCodes0.tree, (-1), infCodes0.tree, 0, infBlocks0, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      ZStream zStream0 = new ZStream();
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0L, zStream0.adler);
      assertNotNull(zStream0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      int[] intArray0 = new int[9];
      InfBlocks infBlocks0 = new InfBlocks(zStream0, object0, 0);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(1L, zStream0.adler);
      assertNotNull(infBlocks0);
      
      // Undeclared exception!
      try { 
        infCodes0.inflate_fast(1, 0, intArray0, 0, intArray0, 0, infBlocks0, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertNotNull(zStream0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, "", 0);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(1L, zStream0.adler);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertNotNull(infBlocks0);
      
      InfCodes infCodes0 = infBlocks0.codes;
      assertNotNull(infCodes0);
      
      infCodes0.init((-641), 0, (int[]) null, 0, (int[]) null, 0, zStream0);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(1L, zStream0.adler);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      
      byte[] byteArray0 = new byte[7];
      zStream0.next_out = byteArray0;
      int[] intArray0 = new int[1];
      int int0 = infCodes0.proc(infBlocks0, zStream0, (byte)0);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(1L, zStream0.adler);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, int0);
      
      // Undeclared exception!
      try { 
        infCodes0.inflate_fast(0, 0, (int[]) null, 0, intArray0, 0, infBlocks0, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertNotNull(zStream0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, zStream0, 0);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertEquals(1L, zStream0.adler);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertNotNull(infBlocks0);
      
      InfCodes infCodes0 = infBlocks0.codes;
      assertNotNull(infCodes0);
      
      int[] intArray0 = new int[4];
      InfBlocks infBlocks1 = new InfBlocks(zStream0, (Object) null, 0);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertEquals(1L, zStream0.adler);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertNotNull(infBlocks1);
      assertFalse(infBlocks1.equals((Object)infBlocks0));
      
      infBlocks1.bitb = 1;
      // Undeclared exception!
      try { 
        infCodes0.inflate_fast(0, 0, intArray0, 0, intArray0, 0, infBlocks1, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      ZStream zStream0 = new ZStream();
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.total_in);
      assertNotNull(zStream0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      int[] intArray0 = new int[9];
      InfBlocks infBlocks0 = new InfBlocks(zStream0, object0, 0);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.total_in);
      assertNotNull(infBlocks0);
      
      // Undeclared exception!
      try { 
        infCodes0.inflate_fast(0, 1, intArray0, 0, intArray0, 0, infBlocks0, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      ZStream zStream0 = new ZStream();
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
      assertNotNull(zStream0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, object0, 258);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(1L, zStream0.adler);
      assertEquals(0L, zStream0.total_out);
      assertNotNull(infBlocks0);
      
      // Undeclared exception!
      try { 
        infCodes0.proc(infBlocks0, zStream0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertNotNull(zStream0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, zStream0, 0);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(1L, zStream0.adler);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertNotNull(infBlocks0);
      
      InfCodes infCodes0 = infBlocks0.codes;
      assertNotNull(infCodes0);
      
      int[] intArray0 = new int[4];
      infCodes0.init(0, 0, intArray0, 0, intArray0, 1, zStream0);
      assertEquals(4, intArray0.length);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(1L, zStream0.adler);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      
      InfBlocks infBlocks1 = new InfBlocks(zStream0, (Object) null, 258);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(1L, zStream0.adler);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertNotNull(infBlocks1);
      assertFalse(infBlocks1.equals((Object)infBlocks0));
      
      // Undeclared exception!
      try { 
        infCodes0.proc(infBlocks1, zStream0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      infCodes0.need = 1;
      ZStream zStream0 = new ZStream();
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertNotNull(zStream0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, object0, 258);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertNotNull(infBlocks0);
      
      // Undeclared exception!
      try { 
        infCodes0.proc(infBlocks0, zStream0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertNotNull(zStream0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, zStream0, 0);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertNotNull(infBlocks0);
      
      InfCodes infCodes0 = infBlocks0.codes;
      assertNotNull(infCodes0);
      
      int[] intArray0 = new int[4];
      infCodes0.init(0, 0, intArray0, (-1), intArray0, 0, zStream0);
      assertEquals(4, intArray0.length);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      
      InfBlocks infBlocks1 = new InfBlocks(zStream0, (Object) null, 258);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertNotNull(infBlocks1);
      assertFalse(infBlocks1.equals((Object)infBlocks0));
      
      // Undeclared exception!
      try { 
        infCodes0.proc(infBlocks1, zStream0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      ZStream zStream0 = new ZStream();
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertNotNull(zStream0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, object0, 259);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertNotNull(infBlocks0);
      
      // Undeclared exception!
      try { 
        infCodes0.proc(infBlocks0, zStream0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      infCodes0.get = (-1);
      ZStream zStream0 = new ZStream();
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertNotNull(zStream0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, infCodes0, 0);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_in);
      assertNotNull(infBlocks0);
      
      // Undeclared exception!
      try { 
        infCodes0.proc(infBlocks0, zStream0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      infCodes0.len = 1;
      ZStream zStream0 = new ZStream();
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_in);
      assertNotNull(zStream0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, infCodes0, 0);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.total_in);
      assertNotNull(infBlocks0);
      
      // Undeclared exception!
      try { 
        infCodes0.proc(infBlocks0, zStream0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      int[] intArray0 = new int[6];
      ZStream zStream0 = new ZStream();
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_out_index);
      assertNotNull(zStream0);
      
      infCodes0.init(0, 0, intArray0, 0, intArray0, 1, zStream0);
      assertEquals(6, intArray0.length);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_out_index);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0}, intArray0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, zStream0, 0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.total_out);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.next_out_index);
      assertNotNull(infBlocks0);
      
      // Undeclared exception!
      try { 
        infCodes0.inflate_fast(0, 0, intArray0, 0, intArray0, 0, infBlocks0, zStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jcraft.jzlib.InfCodes", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      int[] intArray0 = new int[7];
      int[] intArray1 = new int[6];
      assertFalse(intArray1.equals((Object)intArray0));
      
      ZStream zStream0 = new ZStream();
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertNotNull(zStream0);
      
      infCodes0.init(0, 0, intArray0, 0, intArray1, 0, zStream0);
      assertEquals(7, intArray0.length);
      assertEquals(6, intArray1.length);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0}, intArray1);
      assertFalse(intArray0.equals((Object)intArray1));
      assertFalse(intArray1.equals((Object)intArray0));
      assertNotSame(intArray0, intArray1);
      assertNotSame(intArray1, intArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      assertNotNull(infCodes0);
      
      int[] intArray0 = new int[6];
      ZStream zStream0 = new ZStream();
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.adler);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertNotNull(zStream0);
      
      infCodes0.init(0, (-1), intArray0, 0, intArray0, 0, zStream0);
      assertEquals(6, intArray0.length);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0, zStream0.avail_out);
      assertEquals(0L, zStream0.adler);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_in);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0L, zStream0.adler);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertNotNull(zStream0);
      
      InfBlocks infBlocks0 = new InfBlocks(zStream0, "", 0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertNotNull(infBlocks0);
      
      InfCodes infCodes0 = infBlocks0.codes;
      assertNotNull(infCodes0);
      
      infCodes0.init((-641), 0, (int[]) null, 0, (int[]) null, 0, zStream0);
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      
      byte[] byteArray0 = new byte[7];
      zStream0.next_out = byteArray0;
      int int0 = infCodes0.proc(infBlocks0, zStream0, (byte) (-1));
      assertEquals(0L, zStream0.total_in);
      assertEquals(0, zStream0.next_out_index);
      assertEquals(1L, zStream0.adler);
      assertEquals(0, zStream0.avail_in);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_out);
      assertEquals(0, zStream0.avail_out);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      Object object0 = new Object();
      InfBlocks infBlocks0 = new InfBlocks(zStream0, object0, 0);
      InfCodes infCodes0 = infBlocks0.codes;
      int[] intArray0 = new int[9];
      intArray0[0] = 608;
      infBlocks0.bitk = 20;
      infCodes0.inflate_fast(0, 0, intArray0, 0, intArray0, 0, infBlocks0, zStream0);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      Object object0 = new Object();
      InfBlocks infBlocks0 = new InfBlocks(zStream0, object0, 0);
      InfCodes infCodes0 = infBlocks0.codes;
      int[] intArray0 = new int[9];
      intArray0[0] = 576;
      infBlocks0.bitk = 20;
      infCodes0.inflate_fast(0, 0, intArray0, 0, intArray0, 0, infBlocks0, zStream0);
      assertEquals(0, zStream0.next_in_index);
      assertEquals(0L, zStream0.total_in);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ZStream zStream0 = new ZStream();
      Object object0 = new Object();
      InfBlocks infBlocks0 = new InfBlocks(zStream0, object0, 0);
      InfCodes infCodes0 = infBlocks0.codes;
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      infBlocks0.bitk = 20;
      // Undeclared exception!
      infCodes0.inflate_fast(0, 0, intArray0, 0, intArray0, 0, infBlocks0, zStream0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InfCodes infCodes0 = new InfCodes();
      ZStream zStream0 = new ZStream();
      infCodes0.free(zStream0);
      assertEquals(0, zStream0.next_out_index);
  }
}
