/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 15:30:29 KST 2018
 */

package it.yup.ui;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.fail;

import java.util.Vector;

import javax.microedition.lcdui.Font;
import javax.microedition.lcdui.Graphics;
import javax.microedition.lcdui.Image;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class UILabel_ESTest4 extends UILabel_ESTest_scaffolding4 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UIButton uIButton0 = new UIButton("");
      uIButton0.setText("");
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertFalse(uIButton0.isFlip());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UILabel uILabel0 = new UILabel("h");
      uILabel0.getText();
      assertFalse(uILabel0.isWrappable());
      assertFalse(uILabel0.isFlip());
      assertEquals(20, uILabel0.getAnchorPoint());
      assertEquals((-1), uILabel0.getImgAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      uILabel0.getText();
      assertFalse(uILabel0.isWrappable());
      assertFalse(uILabel0.isFlip());
      assertEquals(20, uILabel0.getAnchorPoint());
      assertEquals((-1), uILabel0.getImgAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      
      uILabel0.setImgAnchorPoint(1);
      int int0 = uILabel0.getImgAnchorPoint();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UILabel uILabel0 = new UILabel((String) null);
      // Undeclared exception!
      try { 
        uILabel0.paint((Graphics) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UIButton uIButton0 = new UIButton("");
      // Undeclared exception!
      try { 
        uIButton0.getTextWidth("", (Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      uIButton0.setImg((Image) null);
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertFalse(uIButton0.isFlip());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      uIButton0.setWrappable(false, 0);
      assertEquals(0, uIButton0.getWidth());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      uILabel0.setWrappable(true, 0);
      assertEquals(0, uILabel0.getWidth());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UICombobox uICombobox0 = null;
      try {
        uICombobox0 = new UICombobox("5", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIScreen", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UILabel uILabel0 = new UILabel("Z ");
      // Undeclared exception!
      try { 
        uILabel0.computeTextLines((Font) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UIButton uIButton0 = new UIButton("");
      uIButton0.computeTextLines((Font) null, 0);
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertFalse(uIButton0.isFlip());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      boolean boolean0 = uIButton0.isFlip();
      assertFalse(boolean0);
      assertEquals((-1), uIButton0.getImgAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      int int0 = uIButton0.getImgAnchorPoint();
      assertFalse(uIButton0.isFlip());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "u");
      // Undeclared exception!
      try { 
        uIButton0.computeTextLines((Font) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      boolean boolean0 = uIButton0.isWrappable();
      assertFalse(boolean0);
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertFalse(uIButton0.isFlip());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox("");
      assertEquals(20, uICheckbox0.getAnchorPoint());
      
      uICheckbox0.setAnchorPoint(0);
      int int0 = uICheckbox0.getAnchorPoint();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      uIButton0.getFont();
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertFalse(uIButton0.isFlip());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UILabel uILabel0 = new UILabel((Image) null);
      // Undeclared exception!
      try { 
        uILabel0.getHeight((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      // Undeclared exception!
      try { 
        uIButton0.paintTextLine((Graphics) null, "", 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UIButton uIButton0 = new UIButton((String) null);
      uIButton0.getText();
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertFalse(uIButton0.isFlip());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UILabel uILabel0 = new UILabel((Image) null, "");
      uILabel0.setFont((Font) null);
      assertEquals(20, uILabel0.getAnchorPoint());
      assertFalse(uILabel0.isFlip());
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      assertFalse(uILabel0.isWrappable());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UILabel uILabel0 = new UILabel((String) null);
      uILabel0.setTextLines((Vector) null);
      assertFalse(uILabel0.isWrappable());
      assertEquals(20, uILabel0.getAnchorPoint());
      assertFalse(uILabel0.isFlip());
      assertEquals((-1), uILabel0.getImgAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      uILabel0.getImg();
      assertEquals(20, uILabel0.getAnchorPoint());
      assertFalse(uILabel0.isFlip());
      assertFalse(uILabel0.isWrappable());
      assertEquals((-1), uILabel0.getImgAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      uIButton0.setFlip(false);
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertFalse(uIButton0.isFlip());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      int int0 = uIButton0.getAnchorPoint();
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertFalse(uIButton0.isFlip());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      uIButton0.getTextLines();
      assertFalse(uIButton0.isFlip());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
  }
}
