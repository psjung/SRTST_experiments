/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 15:47:25 KST 2018
 */

package it.yup.ui;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.fail;

import javax.microedition.lcdui.Image;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class UIUtils_ESTest4 extends UIUtils_ESTest_scaffolding4 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UIButton uIButton0 = new UIButton("");
      UIUtils.easyMenu("", 0, 0, (-1), (UIItem) uIButton0, "", "");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UIButton uIButton0 = new UIButton("");
      UIUtils.easyMenu("", 0, (-1), 0, (UIItem) uIButton0, "", "");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UIButton uIButton0 = new UIButton("");
      UIUtils.easyMenu("", (-1), 0, 0, (UIItem) uIButton0, "", "");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[8];
      UIUtils.rescalaArray(intArray0, intArray0, 0, 2, 1, 2, 0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        UIUtils.rescalaArray(intArray0, intArray0, 0, 0, 1, 1, (-1), 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[8];
      UIUtils.rescalaArray(intArray0, intArray0, 0, 0, 2, 1, 0, 0, 0);
      assertEquals(8, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[3];
      UIUtils.rescalaArray(intArray0, intArray0, 1, 0, 1, 1, 0, 0, 0);
      assertEquals(3, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UIUtils.rescalaArray((int[]) null, (int[]) null, 0, 0, (-1), 1, 0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[2];
      UIUtils.rescalaArray(intArray0, intArray0, 0, 0, 0, (-1), 0, 0, 0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = UIUtils.medColor(0, (-1));
      assertEquals(8355711, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UIMenu uIMenu0 = UIUtils.easyMenu("", 0, 0, 0, (UIItem) null, "", "");
      UIMenu uIMenu1 = UIUtils.easyMenu("", 0, 0, 1, (UIItem) uIMenu0, "", "");
      assertEquals(1, uIMenu1.getWidth());
      assertEquals(0, uIMenu1.getAbsoluteX());
      assertEquals(0, uIMenu1.getAbsoluteY());
      assertEquals((-1), uIMenu0.getWidth());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UISeparator uISeparator0 = new UISeparator(0, 0);
      UIMenu uIMenu0 = UIUtils.easyMenu("", 0, 1, 0, (UIItem) uISeparator0, "", "");
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals(1, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getAbsoluteX());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[3];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      UIMenu uIMenu0 = UIUtils.easyMenu("", 1, 0, 0, (UIItem) uIRadioButtons0, "", "");
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals(1, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getAbsoluteY());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = UIUtils.colorize(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = UIUtils.colorize(1, (-200));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[8];
      // Undeclared exception!
      try { 
        UIUtils.rescalaArray(intArray0, (int[]) null, 0, 0, 1, 1, 0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        UIUtils.rescalaArray(intArray0, intArray0, 0, 0, 1, 1, 0, (-1), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        UIUtils.imageResize((Image) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uILabel0, 0);
      // Undeclared exception!
      try { 
        UIUtils.easyMenu("v", 0, 0, 0, (UIItem) uIHLayout0, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UIButton uIButton0 = new UIButton("");
      // Undeclared exception!
      try { 
        UIUtils.easyMenu("e", 0, 0, 0, (UIItem) uIButton0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        UIUtils.easyCenterLayout((UIItem) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIHLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, (String) null);
      UIMenu uIMenu0 = UIUtils.easyMenu("", 0, 0, 0, (UIItem) uIButton0);
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals((-1), uIMenu0.getWidth());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = UIUtils.medColor(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UIButton uIButton0 = new UIButton("");
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uIButton0, 0);
      assertEquals(0, uIButton0.getType());
      assertEquals(1, uIButton0.getAnchorPoint());
      assertFalse(uIHLayout0.isGroup());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uIAccordion0, 0);
      assertFalse(uIHLayout0.isGroup());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UIMenu uIMenu0 = UIUtils.easyMenu((String) null, 0, 0, 1, (UIItem) null);
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals(1, uIMenu0.getWidth());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UIMenu uIMenu0 = UIUtils.easyMenu((String) null, 0, 1, 0, (UIItem) null);
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals(1, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getAbsoluteX());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UIMenu uIMenu0 = UIUtils.easyMenu((String) null, 1, 0, 0, (UIItem) null);
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(1, uIMenu0.getAbsoluteX());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = UIUtils.colorize(0, 1);
      assertEquals(131586, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UIUtils uIUtils0 = new UIUtils();
  }
}
