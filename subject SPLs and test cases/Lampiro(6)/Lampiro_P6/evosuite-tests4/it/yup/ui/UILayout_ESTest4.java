/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 15:32:34 KST 2018
 */

package it.yup.ui;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import javax.microedition.lcdui.Graphics;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class UILayout_ESTest4 extends UILayout_ESTest_scaffolding4 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UIHLayout uIHLayout0 = new UIHLayout(0);
      uIHLayout0.setSelectedIndex(1);
      assertTrue(uIHLayout0.isGroup());
      assertFalse(uIHLayout0.isFocusable());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[8];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      int int0 = uIRadioButtons0.traverseFocusable(9, true);
      assertTrue(uIRadioButtons0.isGroup());
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[6];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
      
      uIRadioButtons0.selectedIndex = 1;
      uIRadioButtons0.updateChildren();
      assertTrue(uIRadioButtons0.isGroup());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UIVLayout uIVLayout0 = new UIVLayout(0, 0);
      UIVLayout uIVLayout1 = (UIVLayout)uIVLayout0.getSelectedItem();
      assertTrue(uIVLayout1.isGroup());
      assertFalse(uIVLayout1.isFocusable());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[6];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      uIRadioButtons0.setLayoutWidth((-1));
      UIRadioButtons uIRadioButtons1 = (UIRadioButtons)uIRadioButtons0.getSelectedItem();
      assertEquals(0, uIRadioButtons1.getType());
      assertTrue(uIRadioButtons1.isGroup());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[6];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      uIRadioButtons0.bg_color = 1;
      UIRadioButtons uIRadioButtons1 = (UIRadioButtons)uIRadioButtons0.getSelectedItem();
      assertTrue(uIRadioButtons1.isGroup());
      assertEquals(0, uIRadioButtons1.getType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UIVLayout uIVLayout0 = new UIVLayout(1, 0);
      // Undeclared exception!
      try { 
        uIVLayout0.updateChildren();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UIVLayout uIVLayout0 = new UIVLayout(1, 0);
      // Undeclared exception!
      try { 
        uIVLayout0.traverseFocusable(0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[1];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      // Undeclared exception!
      try { 
        uIRadioButtons0.traverseFocusable(1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("it.yup.ui.UILayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UIHLayout uIHLayout0 = new UIHLayout(1);
      // Undeclared exception!
      try { 
        uIHLayout0.setSelected(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UIHLayout uIHLayout0 = new UIHLayout(1);
      // Undeclared exception!
      try { 
        uIHLayout0.setDirty(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UIHLayout uIHLayout0 = new UIHLayout(1);
      // Undeclared exception!
      try { 
        uIHLayout0.setBg_color(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UIHLayout uIHLayout0 = new UIHLayout(1);
      // Undeclared exception!
      try { 
        uIHLayout0.isFocusable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UIHLayout uIHLayout0 = new UIHLayout(1);
      // Undeclared exception!
      try { 
        uIHLayout0.isDirty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[5];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      // Undeclared exception!
      try { 
        uIRadioButtons0.getItem(5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("it.yup.ui.UILayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UIVLayout uIVLayout0 = new UIVLayout(0, 0);
      // Undeclared exception!
      try { 
        uIVLayout0.keyPressed(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UICanvas", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[7];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      uIRadioButtons0.setBg_color(0);
      assertEquals(0, uIRadioButtons0.getBg_color());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[6];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      UISeparator uISeparator0 = new UISeparator(0);
      boolean boolean0 = uIRadioButtons0.contains(uISeparator0);
      assertFalse(boolean0);
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
      assertTrue(uIRadioButtons0.isGroup());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[6];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      uIRadioButtons0.setSelectedItem((UIItem) null);
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
      assertTrue(uIRadioButtons0.isGroup());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UIVLayout uIVLayout0 = new UIVLayout(0, 0);
      uIVLayout0.setSelectedIndex(0);
      assertFalse(uIVLayout0.isFocusable());
      assertTrue(uIVLayout0.isGroup());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UIHLayout uIHLayout0 = new UIHLayout(0);
      uIHLayout0.setSelectedIndex((-1));
      assertFalse(uIHLayout0.isFocusable());
      assertTrue(uIHLayout0.isGroup());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[6];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
      
      uIRadioButtons0.selectedIndex = 6;
      uIRadioButtons0.getSelectedItem();
      assertTrue(uIRadioButtons0.isGroup());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[6];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
      
      uIRadioButtons0.selectedIndex = 0;
      UIItem uIItem0 = uIRadioButtons0.getSelectedItem();
      assertEquals(16, uIItem0.getLayoutHeight());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UIVLayout uIVLayout0 = new UIVLayout(0, 0);
      int int0 = uIVLayout0.traverseFocusable(0, true);
      assertEquals((-1), int0);
      assertTrue(uIVLayout0.isGroup());
      assertFalse(uIVLayout0.isFocusable());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[7];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      int int0 = uIRadioButtons0.traverseFocusable(0, true);
      assertEquals(0, int0);
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
      assertTrue(uIRadioButtons0.isGroup());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String[] stringArray0 = new String[6];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      int int0 = uIRadioButtons0.traverseFocusable((-1), false);
      assertTrue(uIRadioButtons0.isGroup());
      assertEquals(0, int0);
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UIVLayout uIVLayout0 = new UIVLayout(0, 0);
      UIItem[] uIItemArray0 = new UIItem[0];
      uIVLayout0.layoutItems = uIItemArray0;
      boolean boolean0 = uIVLayout0.isFocusable();
      assertFalse(boolean0);
      assertTrue(uIVLayout0.isGroup());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[3];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      boolean boolean0 = uIRadioButtons0.isFocusable();
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
      assertTrue(uIRadioButtons0.isGroup());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[5];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
      
      uIRadioButtons0.setSelectedIndex(0);
      uIRadioButtons0.updateChildren();
      assertTrue(uIRadioButtons0.isGroup());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[5];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      // Undeclared exception!
      try { 
        uIRadioButtons0.updateChildren();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("it.yup.ui.UILayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UIHLayout uIHLayout0 = new UIHLayout(0);
      boolean boolean0 = uIHLayout0.isDirty();
      assertTrue(uIHLayout0.isGroup());
      assertTrue(boolean0);
      assertFalse(uIHLayout0.isFocusable());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[6];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      uIRadioButtons0.setDirty(false);
      boolean boolean0 = uIRadioButtons0.isDirty();
      assertFalse(boolean0);
      assertTrue(uIRadioButtons0.isGroup());
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[6];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      boolean boolean0 = uIRadioButtons0.isDirty();
      assertTrue(boolean0);
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
      assertTrue(uIRadioButtons0.isGroup());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UIVLayout uIVLayout0 = new UIVLayout(1, 0);
      uIVLayout0.setScreen((UIScreen) null);
      assertTrue(uIVLayout0.isGroup());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[5];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      uIRadioButtons0.setScreen((UIScreen) null);
      assertTrue(uIRadioButtons0.isGroup());
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String[] stringArray0 = new String[6];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      uIRadioButtons0.setSelected(false);
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
      assertTrue(uIRadioButtons0.isGroup());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String[] stringArray0 = new String[6];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      uIRadioButtons0.setSelected(true);
      uIRadioButtons0.getSelectedItem();
      assertTrue(uIRadioButtons0.isSelected());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[5];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      assertTrue(uIRadioButtons0.isGroup());
      
      uIRadioButtons0.setGroup(false);
      boolean boolean0 = uIRadioButtons0.isGroup();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[6];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      boolean boolean0 = uIRadioButtons0.isGroup();
      assertTrue(boolean0);
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[5];
      UIRadioButtons uIRadioButtons0 = new UIRadioButtons(stringArray0);
      uIRadioButtons0.getItem(0);
      assertEquals((-1), uIRadioButtons0.getSelectedIndex());
      assertTrue(uIRadioButtons0.isGroup());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      UIVLayout uIVLayout0 = new UIVLayout(0, 0);
      // Undeclared exception!
      try { 
        uIVLayout0.drawSegmentedBorder((Graphics) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILayout", e);
      }
  }
}
