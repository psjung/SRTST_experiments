/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 15:26:38 KST 2018
 */

package it.yup.xml;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNotSame;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class Element_ESTest6 extends Element_ESTest_scaffolding6 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      String[][] stringArray0 = new String[1][6];
      String[] stringArray1 = new String[3];
      stringArray1[2] = " ";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.toXml();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Element element0 = new Element("", "");
      Element element1 = element0.addElement("", "");
      element1.nchildren = (int) (byte) (-1);
      element1.getText();
      assertNotSame(element1, element0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      String[][] stringArray0 = new String[1][6];
      String[] stringArray1 = new String[3];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      element0.children = (Object[]) stringArray1;
      // Undeclared exception!
      try { 
        element0.addText("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      String[][] stringArray0 = new String[1][6];
      String[] stringArray1 = new String[3];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      element0.children = (Object[]) stringArray1;
      // Undeclared exception!
      try { 
        element0.addElement(element0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "haaFp `_BO";
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "haaFp `_BO";
      objectArray0[1] = (Object) " xmlns='";
      objectArray0[2] = (Object) "haaFp `_BO";
      objectArray0[3] = (Object) "haaFp `_BO";
      objectArray0[4] = (Object) " xmlns='";
      String[][] stringArray0 = new String[1][6];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "haaFp `_BO";
      stringArray1[1] = " xmlns='";
      stringArray1[2] = " xmlns='";
      stringArray0[0] = stringArray1;
      Element element0 = new Element(" xmlns='", "haaFp `_BO", objectArray0, stringArray0);
      element0.attributes = stringArray0;
      element0.children = (Object[]) stringArray1;
      element0.ensureCapacity(0, (byte)0);
      String string1 = "i^WidE~spmUZ";
      // Undeclared exception!
      try { 
        element0.addElementAndContent("haaFp `_BO", "", ",J0/_Z<}ML{/F* h*F");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Element element0 = new Element("", "");
      element0.delAttribute("");
      element0.delAttribute("");
      assertEquals(0L, element0.queueTime);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Element element0 = new Element("", "");
      element0.delAttribute("");
      String string0 = element0.getAttribute("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Element element0 = new Element("", "");
      byte byte0 = (byte)127;
      element0.ensureCapacity(element0.maxWait, byte0);
      assertEquals(0L, element0.queueTime);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      String[][] stringArray0 = new String[2][7];
      String[] stringArray1 = new String[3];
      stringArray1[1] = "&apos;";
      stringArray1[2] = "F";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      String string0 = element0.getAttribute("&apos;");
      assertNotNull(string0);
      assertEquals("F", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "";
      Object object0 = new Object();
      objectArray0[1] = object0;
      String[][] stringArray0 = new String[1][0];
      String[] stringArray1 = new String[5];
      stringArray1[2] = "";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.toXml();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to it.yup.xml.Element
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      String[][] stringArray0 = new String[3][2];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.toXml();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Element element0 = new Element("", "");
      // Undeclared exception!
      try { 
        element0.setAttributes((String[]) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      objectArray0[7] = (Object) "";
      String[][] stringArray0 = new String[0][3];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      element0.nchildren = (int) (byte)9;
      // Undeclared exception!
      try { 
        element0.resetText();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) "";
      Object object0 = new Object();
      objectArray0[3] = object0;
      String[][] stringArray0 = new String[7][9];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.removeChild("", "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to it.yup.xml.Element
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      String[][] stringArray0 = new String[0][4];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      element0.nchildren = 5;
      // Undeclared exception!
      try { 
        element0.removeChild(element0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      String[][] stringArray0 = new String[9][3];
      Element element0 = new Element("", (String) null, objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.getText();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      String[][] stringArray0 = new String[1][6];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "";
      Element element0 = new Element("", "", objectArray0, stringArray0);
      element0.children = (Object[]) stringArray1;
      // Undeclared exception!
      try { 
        element0.getText();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      Object object0 = new Object();
      objectArray0[2] = object0;
      String[][] stringArray0 = new String[0][3];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.getChildrenByName("", "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to it.yup.xml.Element
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      String[][] stringArray0 = new String[1][6];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "";
      Element element0 = new Element("", "", objectArray0, stringArray0);
      element0.children = (Object[]) stringArray1;
      // Undeclared exception!
      try { 
        element0.getChildrenByName("", "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "t|_C!BZAP]vz";
      objectArray0[1] = (Object) "t|_C!BZAP]vz";
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "t|_C!BZAP]vz";
      objectArray0[4] = (Object) "Rt@N";
      objectArray0[5] = (Object) "t|_C!BZAP]vz";
      objectArray0[6] = (Object) "t|_C!BZAP]vz";
      String[][] stringArray0 = new String[2][7];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "t|_C!BZAP]vz";
      stringArray1[1] = "Rt@N";
      stringArray1[2] = "Rt@N";
      stringArray1[3] = "Rt@N";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[5];
      stringArray2[0] = "t|_C!BZAP]vz";
      stringArray2[1] = "t|_C!BZAP]vz";
      stringArray2[2] = "";
      stringArray2[3] = "Rt@N";
      stringArray2[4] = "Rt@N";
      stringArray0[1] = stringArray2;
      Element element0 = new Element("t|_C!BZAP]vz", "Rt@N", objectArray0, stringArray0);
      int int0 = 4537;
      element0.removeAllElements();
      element0.nchildren = int0;
      element0.attributes = stringArray0;
      // Undeclared exception!
      try { 
        element0.getChildren();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "";
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = objectArray0[0];
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) "";
      objectArray0[6] = (Object) "";
      objectArray0[7] = objectArray0[4];
      objectArray0[8] = (Object) "";
      String[][] stringArray0 = new String[7][8];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.getChildren();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to it.yup.xml.Element
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      Object object0 = new Object();
      objectArray0[2] = object0;
      String[][] stringArray0 = new String[8][6];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.getChildByName("", "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to it.yup.xml.Element
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      String[][] stringArray0 = new String[9][2];
      String[] stringArray1 = new String[0];
      stringArray0[0] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.getAttribute("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "&amp;";
      Element element0 = new Element("&amp;", "&apos;");
      int int0 = 0;
      int int1 = (-1069501632);
      int int2 = 0;
      byte byte0 = (byte)5;
      element0.ensureCapacity(int2, byte0);
      byte byte1 = (byte)16;
      element0.ensureCapacity(int1, byte1);
      byte byte2 = (byte) (-70);
      element0.ensureCapacity(int0, byte2);
      Element element1 = null;
      // Undeclared exception!
      try { 
        element0.addElement(element1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      String[][] stringArray0 = new String[5][0];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.clone();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Element element0 = new Element("", "");
      Element element1 = new Element(element0);
      element1.nchildren = 1;
      // Undeclared exception!
      try { 
        element1.addElement("", "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Element element0 = new Element("", "");
      Object[] objectArray0 = new Object[3];
      String[][] stringArrayArray0 = null;
      Element element1 = null;
      try {
        element1 = new Element(element0.name, element0.uri, objectArray0, stringArrayArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "";
      Object object0 = new Object();
      objectArray0[1] = object0;
      String[][] stringArray0 = new String[2][2];
      String[] stringArray1 = new String[3];
      stringArray0[0] = stringArray1;
      stringArray0[1] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      Element element1 = null;
      try {
        element1 = new Element(element0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to it.yup.xml.Element
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      String[][] stringArray0 = new String[3][1];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      element0.removeChild(element0);
      assertEquals(0, element0.maxWait);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      String[][] stringArray0 = new String[2][7];
      String[] stringArray1 = new String[3];
      stringArray1[1] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[9];
      stringArray2[1] = "F)DzLX|BM*[N";
      stringArray0[1] = stringArray2;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      element0.setAttribute("F)DzLX|BM*[N", "");
      assertEquals(0L, element0.queueTime);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      String[][] stringArray0 = new String[2][7];
      String[] stringArray1 = new String[3];
      stringArray1[1] = "";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.setAttribute("F", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      String[][] stringArray0 = new String[0][9];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      element0.addElement("", "");
      Element element1 = new Element(element0);
      assertEquals(0L, element1.queueTime);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      String[][] stringArray0 = new String[0][9];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      Element element1 = null;
      try {
        element1 = new Element(element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      String[][] stringArray0 = new String[4][0];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      Element element1 = null;
      try {
        element1 = new Element(element0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = "}[)8&Z";
      Element element0 = new Element("}[)8&Z", "http://");
      Element element1 = new Element(element0);
      element0.removeChild(element1);
      element0.getText();
      element0.toXml();
      String string1 = ">";
      // Undeclared exception!
      try { 
        element0.setAttribute(string1, string0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      String[][] stringArray0 = new String[1][6];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "h";
      stringArray1[2] = "";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.toXml();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      String[][] stringArray0 = new String[1][6];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.toXml();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Element element0 = new Element("", "Z");
      Element element1 = element0.addElement(element0.name, element0.uri);
      byte[] byteArray0 = element0.toXml();
      //  // Unstable assertion: assertEquals(29, byteArray0.length);
      //  // Unstable assertion: assertNotSame(element0, element1);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Element element0 = new Element("", "");
      Element element1 = element0.addElement(element0.name, element0.uri);
      byte[] byteArray0 = element0.toXml();
      //  // Unstable assertion: assertEquals(17, byteArray0.length);
      //  // Unstable assertion: assertNotSame(element0, element1);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Element element0 = new Element("", "");
      // Undeclared exception!
      try { 
        element0.setAttribute("", "");
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      String[][] stringArray0 = new String[1][6];
      String[] stringArray1 = new String[3];
      stringArray1[2] = "'";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.toXml();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = "$Z1NKNj&vI:#B";
      Element element0 = new Element("", "");
      // Undeclared exception!
      try { 
        element0.addText(string0);
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Element element0 = new Element("", "");
      // Undeclared exception!
      try { 
        element0.addText("\"");
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      String[][] stringArray0 = new String[0][3];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.resetText();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      String[][] stringArray0 = new String[0][9];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      Element element1 = element0.addElement("", "");
      element0.getText();
      assertNotSame(element0, element1);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = "Zc*fqMnUKG)+N";
      Element element0 = new Element("", "");
      // Undeclared exception!
      try { 
        element0.addText(string0);
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Element element0 = new Element("", "");
      Element element1 = element0.addElement(element0.uri, element0.name);
      Element[] elementArray0 = element0.getChildren();
      assertNotSame(element0, element1);
      assertEquals(1, elementArray0.length);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = "vnk|vzt[eoDhBI}a($/";
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "";
      String[][] stringArray0 = new String[3][2];
      String string1 = "%WxOD}";
      Element element0 = new Element("", "", objectArray0, stringArray0);
      element0.addElement("", "%WxOD}");
      Element[] elementArray0 = element0.getChildrenByName(string0, string1);
      assertEquals(0, elementArray0.length);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = "vnk|vzt[eoDhBI}a($/";
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "";
      String[][] stringArray0 = new String[3][2];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      Element element1 = element0.addElement("", "");
      Element[] elementArray0 = element0.getChildrenByName(string0, string0);
      assertEquals(0, elementArray0.length);
      assertNotSame(element0, element1);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = "vnk|vzt[eoDhBI}a($/";
      Object[] objectArray0 = new Object[1];
      String[][] stringArray0 = new String[3][2];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.getChildrenByName(string0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = "vnk|vzt[eoDhBI}a($/";
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "";
      String[][] stringArray0 = new String[3][2];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      Element element1 = element0.addElement("%WxOD}", "%WxOD}");
      Element element2 = element0.getChildByName(string0, element1.uri);
      assertNull(element2);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = "Zc*fqMnUKG)+N";
      Element element0 = new Element("", "");
      Element element1 = element0.addElement(string0, element0.name);
      Element element2 = element0.getChildByName(string0, string0);
      assertNotSame(element0, element1);
      assertNull(element2);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Element element0 = new Element("", "");
      // Undeclared exception!
      try { 
        element0.addElementAndContent(element0.name, element0.name, element0.name);
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = "";
      Element element0 = new Element("", "");
      Element element1 = new Element(element0);
      element0.removeAllElements();
      Element.array_inc = 0;
      // Undeclared exception!
      try { 
        element0.addElement(element1);
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      String[][] stringArray0 = new String[0][9];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      Element element1 = element0.addElement("", "");
      Element element2 = element0.removeChild(")", "");
      assertNull(element2);
      assertNotSame(element0, element1);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      String[][] stringArray0 = new String[0][9];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      Element element1 = element0.addElement("", "");
      Element element2 = element0.removeChild("", "");
      assertSame(element2, element1);
      assertNotNull(element2);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      String[][] stringArray0 = new String[0][9];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.removeChild("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Element element0 = new Element("", "");
      Object[] objectArray0 = new Object[0];
      element0.children = objectArray0;
      // Undeclared exception!
      try { 
        element0.addText("");
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      String[][] stringArray0 = new String[0][9];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.addElement(element0);
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = "kArGi[E,/1,1dF 0n";
      Object[] objectArray0 = new Object[8];
      String[][] stringArray0 = new String[0][3];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.addElementAndContent(element0.uri, string0, element0.uri);
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String string0 = null;
      Element element0 = new Element((String) null, (String) null);
      // Undeclared exception!
      try { 
        element0.addElementAndContent(string0, element0.name, element0.name);
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      String[][] stringArray0 = new String[2][7];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      Element element1 = element0.addElement((String) null, "");
      assertNotSame(element1, element0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      String[][] stringArray0 = new String[2][7];
      String[] stringArray1 = new String[3];
      stringArray1[1] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[9];
      stringArray2[1] = "";
      stringArray0[1] = stringArray2;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      element0.delAttribute("a");
      assertEquals(0L, element0.queueTime);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      String[][] stringArray0 = new String[2][7];
      String[] stringArray1 = new String[3];
      stringArray1[1] = "&apos;";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.delAttribute("&apos;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      String[][] stringArray0 = new String[0][3];
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.setAttribute("", "");
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String string0 = "5AqJ.{G olN%";
      String string1 = "sha1";
      Element element0 = new Element("5AqJ.{G olN%", "sha1");
      element0.clone();
      int int0 = 0;
      byte byte0 = (byte) (-46);
      element0.ensureCapacity(int0, byte0);
      int int1 = 1620;
      element0.queueTime = (long) int1;
      byte byte1 = (byte)0;
      String string2 = "R`;FL9bP";
      element0.uri = string2;
      element0.ensureCapacity(int1, byte1);
      String[] stringArray0 = new String[4];
      stringArray0[0] = element0.name;
      stringArray0[1] = string0;
      stringArray0[2] = element0.name;
      stringArray0[3] = element0.uri;
      // Undeclared exception!
      try { 
        element0.setAttributes(stringArray0, stringArray0);
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Element element0 = new Element("", "");
      Element.createUniqueId();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      // Undeclared exception!
      try { 
        element0.setAttributes(stringArray0, stringArray0);
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      String[][] stringArray0 = new String[2][7];
      String[] stringArray1 = new String[3];
      stringArray1[1] = "";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        element0.getAttribute(" ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String string0 = "P%6:zm3[`F\\)iE0+";
      Element element0 = new Element("", "");
      String string1 = element0.getAttribute(string0);
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Element element0 = new Element("", "");
      Element element1 = element0.addElement("", "");
      element0.removeChild(element1);
      assertFalse(element1.equals((Object)element0));
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Element element0 = new Element("~Nr |yR/&?o@U>'j!", "9Gykqz)|F^V");
      Element element1 = new Element(element0);
      element0.ensureCapacity((-732), (byte)46);
      // Undeclared exception!
      try { 
        element1.setAttribute("", "9Gykqz)|F^V");
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Element element0 = new Element("", "");
      element0.ensureCapacity(0, (byte)97);
      assertEquals(0L, element0.queueTime);
  }
}
