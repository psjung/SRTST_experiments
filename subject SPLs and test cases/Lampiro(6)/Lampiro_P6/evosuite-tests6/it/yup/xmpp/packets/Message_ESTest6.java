/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 16:14:38 KST 2018
 */

package it.yup.xmpp.packets;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import it.yup.xml.Element;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class Message_ESTest6 extends Message_ESTest_scaffolding6 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Message message0 = new Message("", "");
      message0.setBody("j");
      String string0 = message0.getBody();
      assertNotNull(string0);
      assertEquals("j", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Message message0 = new Message("", "");
      message0.addElement((Element) null);
      // Undeclared exception!
      try { 
        message0.setBody("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Element element0 = new Element("", "");
      Message message0 = new Message(element0);
      message0.addElement("", (String) null);
      // Undeclared exception!
      try { 
        message0.getErrorText();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Message message0 = new Message("", "");
      message0.addElement((String) null, (String) null);
      // Undeclared exception!
      try { 
        message0.getBody();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Message message0 = null;
      try {
        message0 = new Message((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      String[][] stringArray0 = new String[1][4];
      Element element0 = new Element("", (String) null, objectArray0, stringArray0);
      Message message0 = null;
      try {
        message0 = new Message(element0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      String[][] stringArray0 = new String[7][6];
      String[] stringArray1 = new String[1];
      stringArray0[2] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      Message message0 = null;
      try {
        message0 = new Message(element0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Message message0 = new Message("", "");
      String string0 = message0.getErrorText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Message message0 = new Message((String) null, (String) null);
      message0.addElementAndContent((String) null, "error", "");
      String string0 = message0.getErrorText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Message message0 = new Message("", "");
      String string0 = message0.getBody();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Message message0 = new Message("", "");
      message0.setBody("");
      String string0 = message0.getBody();
      assertNotNull(string0);
      assertEquals("", string0);
  }
}
