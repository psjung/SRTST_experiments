/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 16:16:00 KST 2018
 */

package it.yup.xmpp.packets;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import it.yup.xml.Element;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class Presence_ESTest6 extends Presence_ESTest_scaffolding6 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Presence presence0 = new Presence("", "", ":", 0);
      String string0 = presence0.getStatus();
      assertNotNull(string0);
      assertEquals(":", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Presence presence0 = new Presence();
      presence0.setShow("L");
      String string0 = presence0.getShow();
      assertEquals("L", string0);
      assertNotNull(string0);
      assertEquals(0, presence0.pType);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Presence presence0 = new Presence("", "", "", 1);
      int int0 = presence0.getPriority();
      assertEquals(1, int0);
      assertEquals(0, presence0.pType);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Presence presence0 = new Presence();
      presence0.setPriority((-1));
      int int0 = presence0.getPriority();
      assertEquals((-1), int0);
      assertEquals(0, presence0.pType);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Presence presence0 = new Presence();
      presence0.addText((String) null);
      // Undeclared exception!
      try { 
        presence0.setPriority(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Presence presence0 = new Presence("", "", "", "", 0);
      presence0.removeAllElements();
      presence0.addElement("", (String) null);
      // Undeclared exception!
      try { 
        presence0.getShow();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Presence presence0 = new Presence();
      presence0.addElement("", (String) null);
      // Undeclared exception!
      try { 
        presence0.getResource();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Presence presence0 = new Presence();
      presence0.addElement("", (String) null);
      // Undeclared exception!
      try { 
        presence0.getPriority();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Presence presence0 = null;
      try {
        presence0 = new Presence((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      String[][] stringArray0 = new String[6][6];
      String[] stringArray1 = new String[0];
      stringArray0[1] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      Presence presence0 = null;
      try {
        presence0 = new Presence(element0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Element element0 = new Element("", "");
      Presence presence0 = new Presence(element0);
      presence0.setStatus("");
      assertEquals(0, presence0.pType);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Presence presence0 = new Presence((String) null, (String) null, "", "", 0);
      String string0 = presence0.getStatus();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Presence presence0 = new Presence();
      presence0.setPriority(0);
      int int0 = presence0.getPriority();
      assertEquals(0, presence0.pType);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Presence presence0 = new Presence("", "", "", 0);
      String string0 = presence0.getShow();
      assertNotNull(string0);
      assertEquals(0, presence0.pType);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Presence presence0 = new Presence((String) null, "", (String) null, "", (-1));
      int int0 = presence0.getPriority();
      assertEquals(0, presence0.pType);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Presence presence0 = new Presence((String) null, (String) null, (String) null, (String) null, 0);
      presence0.addElementAndContent((String) null, (String) null, "");
      // Undeclared exception!
      try { 
        presence0.getStatus();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }
}
