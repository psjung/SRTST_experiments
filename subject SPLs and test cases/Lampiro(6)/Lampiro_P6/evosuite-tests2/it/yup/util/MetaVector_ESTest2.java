/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 11:46:10 KST 2018
 */

package it.yup.util;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.Enumeration;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Spliterator;
import java.util.function.Predicate;
import java.util.stream.Stream;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class MetaVector_ESTest2 extends MetaVector_ESTest_scaffolding2 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.add(0, (Object) null);
      // Undeclared exception!
      try { 
        metaVector0.setElementAt("", 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.add(0, (Object) null);
      // Undeclared exception!
      try { 
        metaVector0.removeElementAt(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      Integer integer0 = new Integer(0);
      int int0 = metaVector0.lastIndexOf((Object) integer0, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        metaVector0.insertElementAt(integer0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      Integer integer0 = new Integer(0);
      metaVector0.insertElementAt(integer0, 0);
      assertEquals(10, metaVector0.capacity());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      int int0 = metaVector0.indexOf((Object) null, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      MetaVector metaVector1 = new MetaVector();
      metaVector0.addElement(metaVector1);
      // Undeclared exception!
      try { 
        metaVector0.elementAt(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) metaVector0);
      metaVector0.insertElementAt(predicate0, 0);
      // Undeclared exception!
      try { 
        metaVector0.elementAt((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.removeAllElements();
      assertEquals(10, metaVector0.capacity());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      Integer integer0 = new Integer(0);
      int int0 = metaVector0.lastIndexOf((Object) integer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      Integer integer0 = new Integer(0);
      metaVector0.addElement(integer0);
      int int0 = metaVector0.indexOf((Object) integer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      int int0 = metaVector0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      metaVector0.add(0, (Object) null);
      int int0 = metaVector0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      metaVector0.insertElementAt((Object) null, 0);
      Object object0 = metaVector0.firstElement();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      Object object0 = metaVector0.firstElement();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      // Undeclared exception!
      try { 
        metaVector0.lastElement();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector$MultiVectorEnumeration", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MetaVector metaVector0 = null;
      try {
        metaVector0 = new MetaVector((-1), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MetaVector metaVector0 = null;
      try {
        metaVector0 = new MetaVector((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      Spliterator spliterator0 = metaVector0.spliterator();
      int int0 = metaVector0.indexOf((Object) spliterator0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      Enumeration enumeration0 = metaVector0.elements();
      assertNotNull(enumeration0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      String string0 = metaVector0.toString();
      assertEquals("Multivector:  ", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      MetaVector metaVector1 = new MetaVector(0, 0);
      metaVector1.add(0, (Object) metaVector0);
      List list0 = metaVector1.subList(0, 0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      MetaVector metaVector1 = new MetaVector(0, 0);
      metaVector0.add(0, (Object) metaVector1);
      // Undeclared exception!
      try { 
        metaVector0.setElementAt(metaVector1, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      // Undeclared exception!
      try { 
        metaVector0.setElementAt("", (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      MetaVector metaVector1 = new MetaVector(0, 0);
      metaVector0.add(0, (Object) metaVector1);
      // Undeclared exception!
      try { 
        metaVector0.setElementAt(metaVector1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.add(0, (Object) null);
      metaVector0.setElementAt("", 0);
      assertEquals(10, metaVector0.capacity());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      metaVector0.addElement("");
      // Undeclared exception!
      try { 
        metaVector0.removeElementAt((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      metaVector0.removeElementAt(0);
      assertEquals(10, metaVector0.capacity());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.add(0, (Object) null);
      boolean boolean0 = metaVector0.removeElement(metaVector0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.add(0, (Object) metaVector0);
      boolean boolean0 = metaVector0.removeElement(metaVector0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      Integer integer0 = new Integer(0);
      int int0 = metaVector0.lastIndexOf((Object) integer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        metaVector0.lastIndexOf((Object) integer0, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      Object object0 = metaVector0.lastElement();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.insertElementAt("", 0);
      boolean boolean0 = metaVector0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      // Undeclared exception!
      try { 
        metaVector0.insertElementAt((Object) null, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      metaVector0.add(0, (Object) null);
      metaVector0.insertElementAt((Object) null, 1);
      assertEquals(10, metaVector0.capacity());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      MetaVector metaVector1 = new MetaVector(0, 0);
      metaVector0.addElement(metaVector1);
      // Undeclared exception!
      try { 
        metaVector0.elementAt((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      // Undeclared exception!
      try { 
        metaVector0.elementAt(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      MetaVector metaVector1 = new MetaVector(0, 0);
      metaVector0.addElement(metaVector1);
      // Undeclared exception!
      try { 
        metaVector0.elementAt(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      Object object0 = metaVector0.elementAt(0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      Object[] objectArray0 = new Object[2];
      metaVector0.copyInto(objectArray0);
      assertEquals(2, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      Stream stream0 = metaVector0.stream();
      metaVector0.addElement(stream0);
      boolean boolean0 = metaVector0.contains(metaVector0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      // Undeclared exception!
      try { 
        metaVector0.indexOf((Object) metaVector0, 1);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector$MultiVectorEnumeration", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector();
      metaVector0.addElement("");
      Stream stream0 = metaVector0.stream();
      int int0 = metaVector0.indexOf((Object) stream0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      metaVector0.addElement((Object) null);
      boolean boolean0 = metaVector0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0, 0);
      MetaVector metaVector1 = new MetaVector(0);
      metaVector0.addElement(metaVector1);
      Object object0 = new Object();
      int int0 = metaVector0.lastIndexOf(object0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MetaVector metaVector0 = new MetaVector(0);
      // Undeclared exception!
      try { 
        metaVector0.firstElement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.util.MetaVector", e);
      }
  }
}
