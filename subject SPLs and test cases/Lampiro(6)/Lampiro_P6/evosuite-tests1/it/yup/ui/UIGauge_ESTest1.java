/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 00:58:20 KST 2018
 */

package it.yup.ui;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import javax.microedition.lcdui.Graphics;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import static org.evosuite.runtime.EvoAssertions.*;
@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class UIGauge_ESTest1 extends UIGauge_ESTest_scaffolding1 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 0, 0);
      assertTrue(uIGauge0.isFocusable());
      
      uIGauge0.focusable = true;
      uIGauge0.focusable = false;
      boolean boolean0 = uIGauge0.isInteractive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 1, 0);
      assertEquals(0, uIGauge0.getValue());
      
      uIGauge0.setValue(2);
      assertEquals(1, uIGauge0.getValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 1, 0);
      uIGauge0.setValue(0);
      assertEquals(1, uIGauge0.getMaxValue());
      assertTrue(uIGauge0.isFocusable());
      assertEquals(0, uIGauge0.getValue());
      assertEquals(10, uIGauge0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, 1, 0);
      uIGauge0.setValue(0);
      assertEquals(1, uIGauge0.getMaxValue());
      assertEquals(10, uIGauge0.getOffset());
      assertEquals(0, uIGauge0.getValue());
      assertFalse(uIGauge0.isInteractive());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 0, 0);
      assertTrue(uIGauge0.isFocusable());
      
      uIGauge0.focusable = true;
      uIGauge0.focusable = false;
      uIGauge0.setValue(0);
      assertEquals(0, uIGauge0.getValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 1, 0);
      // Undeclared exception!
      try { 
        uIGauge0.keyPressed(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UICanvas", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, 0, 0);
      boolean boolean0 = uIGauge0.isInteractive();
      assertEquals(0, uIGauge0.getMaxValue());
      assertEquals(10, uIGauge0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, 0, 1);
      int int0 = uIGauge0.getValue();
      assertEquals(10, uIGauge0.getOffset());
      assertEquals(1, int0);
      assertEquals(0, uIGauge0.getMaxValue());
      assertFalse(uIGauge0.isFocusable());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, 0, (-1));
      int int0 = uIGauge0.getValue();
      assertFalse(uIGauge0.isInteractive());
      assertEquals((-1), int0);
      assertEquals(10, uIGauge0.getOffset());
      assertEquals(0, uIGauge0.getMaxValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge((String) null, true, 0, 0);
      uIGauge0.getLabel();
      assertTrue(uIGauge0.isInteractive());
      assertEquals(0, uIGauge0.getMaxValue());
      assertEquals(10, uIGauge0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("o", true, 0, 0);
      uIGauge0.getLabel();
      assertTrue(uIGauge0.isInteractive());
      assertEquals(0, uIGauge0.getMaxValue());
      assertEquals(10, uIGauge0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 0, 0);
      // Undeclared exception!
      try { 
        uIGauge0.start();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIGauge", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, 0, 0);
      // Undeclared exception!
      try { 
        uIGauge0.paint((Graphics) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIGauge", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 0, 0);
      uIGauge0.setOffset(0);
      assertEquals(0, uIGauge0.getMaxValue());
      assertTrue(uIGauge0.isInteractive());
      assertEquals(10, uIGauge0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 0, 0);
      uIGauge0.setValue(1);
      assertTrue(uIGauge0.isInteractive());
      assertEquals(0, uIGauge0.getValue());
      assertEquals(10, uIGauge0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 0, 0);
      uIGauge0.setValue((-1));
      assertEquals(0, uIGauge0.getValue());
      assertEquals(10, uIGauge0.getOffset());
      assertEquals(0, uIGauge0.getMaxValue());
      assertTrue(uIGauge0.isInteractive());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, 0, 0);
      uIGauge0.setValue(0);
      assertEquals(0, uIGauge0.getValue());
      assertEquals(10, uIGauge0.getOffset());
      assertEquals(0, uIGauge0.getMaxValue());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 0, 0);
      // Undeclared exception!
      try { 
        uIGauge0.keyPressed(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UICanvas", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, 0, 0);
      assertFalse(uIGauge0.isFocusable());
      
      boolean boolean0 = uIGauge0.keyPressed(0);
      assertEquals(10, uIGauge0.getOffset());
      assertEquals(0, uIGauge0.getMaxValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UIGauge uIGauge0 = null;
      try {
        uIGauge0 = new UIGauge("", false, (-1), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid initValue for non interactive mode
         //
         verifyException("it.yup.ui.UIGauge", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 1, 2);
      assertTrue(uIGauge0.isInteractive());
      assertEquals(1, uIGauge0.getMaxValue());
      assertEquals(10, uIGauge0.getOffset());
      assertEquals(1, uIGauge0.getValue());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 1, (-1));
      assertEquals(0, uIGauge0.getValue());
      assertTrue(uIGauge0.isInteractive());
      assertEquals(1, uIGauge0.getMaxValue());
      assertEquals(10, uIGauge0.getOffset());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, 1, 0);
      int int0 = uIGauge0.getMaxValue();
      assertEquals(0, uIGauge0.getValue());
      assertEquals(10, uIGauge0.getOffset());
      assertFalse(uIGauge0.isInteractive());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UIGauge uIGauge0 = null;
      try {
        uIGauge0 = new UIGauge("", false, (-2), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid maxValue for non interactive mode
         //
         verifyException("it.yup.ui.UIGauge", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, (-1), 0);
      assertEquals(10, uIGauge0.getOffset());
      assertEquals(0, uIGauge0.getValue());
      assertFalse(uIGauge0.isFocusable());
      assertEquals((-1), uIGauge0.getMaxValue());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UIGauge uIGauge0 = null;
      try {
        uIGauge0 = new UIGauge("", true, (-1), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxValue negative for interactive mode
         //
         verifyException("it.yup.ui.UIGauge", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, 0, 0);
      int int0 = uIGauge0.getValue();
      assertEquals(0, int0);
      assertEquals(10, uIGauge0.getOffset());
      assertEquals(0, uIGauge0.getMaxValue());
      assertFalse(uIGauge0.isFocusable());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 0, 0);
      // Undeclared exception!
      try { 
        uIGauge0.cancel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIGauge", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, 0, 0);
      uIGauge0.getLabel();
      assertEquals(10, uIGauge0.getOffset());
      assertEquals(0, uIGauge0.getMaxValue());
      assertFalse(uIGauge0.isInteractive());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, 0, 0);
      uIGauge0.setLabel("");
      assertEquals(0, uIGauge0.getMaxValue());
      assertFalse(uIGauge0.isInteractive());
      assertEquals(10, uIGauge0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, 0, 0);
      // Undeclared exception!
      try { 
        uIGauge0.getHeight((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIGauge", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", true, 0, 0);
      int int0 = uIGauge0.getOffset();
      assertEquals(0, uIGauge0.getMaxValue());
      assertTrue(uIGauge0.isInteractive());
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge("", false, 0, 0);
      int int0 = uIGauge0.getMaxValue();
      assertEquals(0, int0);
      assertEquals(10, uIGauge0.getOffset());
      assertFalse(uIGauge0.isInteractive());
  }
}
