/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 02:20:29 KST 2018
 */

package it.yup.xmpp;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.util.Vector;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import it.yup.xmpp.packets.Message;
import it.yup.xmpp.packets.Presence;
import static org.evosuite.runtime.EvoAssertions.*;
@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class MUC_ESTest1 extends MUC_ESTest_scaffolding1 {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MUC mUC0 = new MUC("", "");
      mUC0.lastResource = "";
      Presence presence0 = new Presence("", "", "", "", 0);
      mUC0.updatePresence(presence0);
      // Undeclared exception!
      try { 
        mUC0.updatePresence(presence0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmpp.MUC", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MUC mUC0 = new MUC("", "");
      Message message0 = new Message("", "");
      message0.addText((String) null);
      // Undeclared exception!
      try { 
        mUC0.addMessageToHistory((String) null, message0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MUC mUC0 = new MUC("", "");
      Message message0 = new Message("", (String) null);
      message0.setBody("C");
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) message0);
      mUC0.convs = vector0;
      // Undeclared exception!
      try { 
        mUC0.addMessageToHistory("", message0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // it.yup.xmpp.packets.Message cannot be cast to [Ljava.lang.Object;
         //
         verifyException("it.yup.xmpp.Contact", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MUC mUC0 = new MUC("", "");
      Presence[] presenceArray0 = new Presence[0];
      mUC0.resources = presenceArray0;
      Presence presence0 = new Presence();
      mUC0.updatePresence(presence0);
      assertEquals(0L, presence0.queueTime);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MUC mUC0 = new MUC("", "");
      Presence presence0 = new Presence("unavailable", "", "", 0);
      // Undeclared exception!
      try { 
        mUC0.updatePresence(presence0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmpp.Contact", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MUC mUC0 = new MUC("", "");
      Presence presence0 = new Presence();
      Message message0 = new Message(presence0);
      mUC0.addMessageToHistory("", message0);
      assertEquals(5, mUC0.getAvailability());
  }
}
