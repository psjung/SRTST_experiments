/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 01:38:44 KST 2018
 */

package it.yup.xml;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import static org.evosuite.runtime.EvoAssertions.*;
@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class BProcessor_ESTest1 extends BProcessor_ESTest_scaffolding1 {

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-26);
      byteArray0[2] = (byte) (-26);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-34);
      byteArray0[5] = (byte) (-31);
      BProcessor.parse(byteArray0);
      Element element0 = new Element(",A", ",A");
      element0.delAttribute(",A");
      BProcessor.toBinary(element0);
      Element element1 = new Element("I7/J+\"D''b(^pV|V!", "I7/J+\"D''b(^pV|V!");
      BProcessor.toBinary(element1);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-123);
      byteArray1[1] = (byte)0;
      BProcessor.parse(byteArray1);
      BProcessor.toBinary(element1);
      BProcessor.toBinary(element1);
      byte[] byteArray2 = BProcessor.toBinary(element0);
      assertArrayEquals(new byte[] {(byte)34, (byte)44, (byte)65, (byte)2, (byte)44, (byte)65, (byte) (-1), (byte)0}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      Element element0 = BProcessor.parse(byteArray0);
      String[] stringArray0 = new String[1];
      Element.createUniqueId();
      stringArray0[0] = "jabber:client";
      element0.setAttributes(stringArray0, stringArray0);
      BProcessor.toBinary(element0);
      Element element1 = BProcessor.parse(byteArray0);
      BProcessor.toBinary(element0);
      BProcessor.toBinary(element1);
      BProcessor bProcessor0 = new BProcessor();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) "Depi%";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      String[][] stringArray0 = new String[1][2];
      String[] stringArray1 = new String[6];
      stringArray1[0] = "Depi%";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "Depi%";
      stringArray1[4] = "";
      stringArray1[5] = "";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("", "Depi%", objectArray0, stringArray0);
      element0.getText();
      element0.setAttribute("", ">");
      BProcessor.toBinary(element0);
      element0.ensureCapacity((-1142), (byte)27);
      byte[] byteArray0 = BProcessor.toBinary(element0);
      BProcessor.toBinary(element0);
      element0.removeAllElements();
      element0.getText();
      BProcessor.toBinary(element0);
      BProcessor.toBinary(element0);
      BProcessor.toBinary(element0);
      BProcessor.toBinary(element0);
      Element element1 = BProcessor.parse(byteArray0);
      assertNotNull(element1);
      
      element1.queueTime = 0L;
      byte[] byteArray1 = BProcessor.toBinary(element1);
      assertEquals(27, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Element element0 = new Element("", "");
      element0.queueTime = 0L;
      BProcessor.toBinary(element0);
      Element.createUniqueId();
      element0.removeAllElements();
      Element element1 = element0.addElement("=qkkm3AKFIxyeFx>", "251");
      BProcessor.toBinary(element0);
      element1.uri = "";
      BProcessor.toBinary(element0);
      element1.setAttribute((String) null, "");
      long long0 = (-1071L);
      element0.getText();
      element1.queueTime = long0;
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      Element element0 = BProcessor.parse(byteArray0);
      String[] stringArray0 = new String[1];
      Element.createUniqueId();
      stringArray0[0] = "";
      element0.setAttributes(stringArray0, stringArray0);
      BProcessor.toBinary(element0);
      Element element1 = BProcessor.parse(byteArray0);
      BProcessor.toBinary(element0);
      BProcessor.toBinary(element1);
      BProcessor bProcessor0 = new BProcessor();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte) (-50);
      Element element0 = BProcessor.parse(byteArray0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)2;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)2;
      byteArray1[3] = (byte)2;
      element0.queueTime = (-1L);
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte) (-50);
      BProcessor.parse(byteArray1);
      BProcessor bProcessor0 = new BProcessor();
      BProcessor.parse(byteArray1);
      BProcessor.parse(byteArray1);
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)115;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-118);
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte) (-11);
      byteArray0[6] = (byte)2;
      BProcessor.parse(byteArray0);
      Element element0 = null;
      // Undeclared exception!
      try { 
        BProcessor.toBinary((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-26);
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte) (-34);
      byteArray0[5] = (byte)38;
      BProcessor.parse(byteArray0);
      Element element0 = new Element(",A", ",A");
      byte[] byteArray1 = BProcessor.toBinary(element0);
      assertArrayEquals(new byte[] {(byte)34, (byte)44, (byte)65, (byte)2, (byte)44, (byte)65, (byte)0, (byte)0}, byteArray1);
      
      Element element1 = new Element("I7/J+\"D''b(^pV|V!", "I7/J+\"D''b(^pV|V!");
      BProcessor.toBinary(element1);
      byte[] byteArray2 = new byte[2];
      byteArray2[1] = (byte) (-123);
      BProcessor.parse(byteArray2);
      BProcessor.toBinary(element1);
      byte[] byteArray3 = BProcessor.toBinary(element1);
      assertEquals(38, byteArray3.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte)93;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)127;
      byteArray0[6] = (byte) (-54);
      byteArray0[7] = (byte)85;
      byteArray0[8] = (byte)0;
      Element element0 = BProcessor.parse(byteArray0);
      element0.addElement("/I1b=<oBG", "/I1b=<oBG");
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte)112;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      objectArray0[2] = (Object) "OOS'@6aj13'rAjLC|";
      String[][] stringArray0 = new String[2][1];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      stringArray1[1] = "OOS'@6aj13'rAjLC|";
      stringArray1[2] = ">Ur";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[7];
      stringArray2[0] = ">Ur";
      stringArray2[1] = "OOS'@6aj13'rAjLC|";
      stringArray2[2] = "OOS'@6aj13'rAjLC|";
      stringArray2[3] = "";
      stringArray2[4] = ">Ur";
      stringArray2[5] = "";
      stringArray2[6] = "";
      stringArray0[1] = stringArray2;
      Element element0 = new Element("OOS'@6aj13'rAjLC|", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)32;
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BProcessor.parse(byteArray0);
      Element element0 = null;
      try {
        element0 = new Element((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      Element element0 = new Element("sqT0JKE", "sqT0JKE");
      Element element1 = new Element(element0);
      BProcessor.toBinary(element1);
      BProcessor.toBinary(element0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte) (-42);
      byteArray0[2] = (byte) (-114);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)83;
      byteArray0[5] = (byte)86;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-102);
      // Undeclared exception!
      try { 
        BProcessor.parse(byteArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to it.yup.xml.Element
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) bProcessor0;
      objectArray0[1] = (Object) bProcessor0;
      String[][] stringArray0 = new String[1][8];
      String[] stringArray1 = new String[7];
      stringArray1[0] = "&apos;";
      stringArray1[1] = "&apos;";
      stringArray1[2] = "&apos;";
      stringArray1[3] = "&apos;";
      stringArray1[4] = "&apos;";
      stringArray1[5] = "&apos;";
      stringArray1[6] = "&apos;";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("&apos;", "&apos;", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-95);
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)0;
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        BProcessor.parse((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "";
      Object object1 = new Object();
      objectArray0[2] = object1;
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) "";
      String[][] stringArray0 = new String[6][9];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[6];
      stringArray2[0] = "";
      stringArray2[1] = "";
      stringArray2[2] = "";
      stringArray2[3] = "";
      stringArray2[4] = "";
      stringArray2[5] = "";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[1];
      stringArray3[0] = "s5Xu^";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[7];
      stringArray4[0] = "";
      stringArray4[1] = "";
      stringArray4[2] = "";
      stringArray4[3] = "";
      stringArray4[4] = "";
      stringArray4[5] = "";
      stringArray4[6] = "s5Xu^";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[9];
      stringArray5[0] = "";
      stringArray5[1] = "";
      stringArray5[2] = "";
      stringArray5[3] = "";
      stringArray5[4] = "s5Xu^";
      stringArray5[5] = "";
      stringArray5[6] = "";
      stringArray5[7] = "";
      stringArray5[8] = "s5Xu^";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[2];
      stringArray6[0] = "";
      stringArray6[1] = "(c'isdCfK,}";
      stringArray0[5] = stringArray6;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)68;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte)75;
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)99;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte) (-111);
      BProcessor.parse(byteArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "b$$ EFN";
      objectArray0[1] = (Object) "b$$ EFN";
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "b$$ EFN";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) "b$$ EFN";
      objectArray0[6] = (Object) "";
      objectArray0[7] = (Object) "";
      objectArray0[8] = (Object) "b$$ EFN";
      String[][] stringArray0 = new String[1][3];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("b$$ EFN", "", objectArray0, stringArray0);
      byte[] byteArray0 = BProcessor.toBinary(element0);
      assertEquals(57, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      Element element0 = BProcessor.parse(byteArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-120);
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte) (-57);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      BProcessor.parse(byteArray0);
      byte[] byteArray1 = new byte[0];
      BProcessor.parse(byteArray1);
      BProcessor.parse(byteArray1);
      // Undeclared exception!
      try { 
        BProcessor.toBinary((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte)29;
      BProcessor.parse(byteArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-39);
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)82;
      BProcessor.parse(byteArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)0;
      Element element0 = BProcessor.parse(byteArray0);
      assertNotNull(element0);
      
      byte[] byteArray1 = element0.toXml();
      assertEquals(25, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)97;
      byteArray0[1] = (byte)0;
      BProcessor.parse(byteArray0);
      byte[] byteArray1 = new byte[0];
      BProcessor.parse(byteArray1);
      Element.createUniqueId();
      // Undeclared exception!
      try { 
        BProcessor.toBinary((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "K/2;sJf@7_IO{} Q9z";
      String[][] stringArray0 = new String[2][3];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "K/2;sJf@7_IO{} Q9z";
      stringArray1[1] = "K/2;sJf@7_IO{} Q9z";
      stringArray1[2] = "K/2;sJf@7_IO{} Q9z";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[6];
      stringArray2[0] = ";|i;1k!7@+D.~Fi+y";
      stringArray2[1] = "K/2;sJf@7_IO{} Q9z";
      stringArray2[2] = "K/2;sJf@7_IO{} Q9z";
      stringArray2[3] = ";|i;1k!7@+D.~Fi+y";
      stringArray2[4] = ";|i;1k!7@+D.~Fi+y";
      stringArray2[5] = ";|i;1k!7@+D.~Fi+y";
      Element element0 = new Element(";|i;1k!7@+D.~Fi+y", "K/2;sJf@7_IO{} Q9z", objectArray0, stringArray0);
      Element element1 = new Element(element0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-25);
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)61;
      byteArray0[4] = (byte) (-104);
      byteArray0[5] = (byte)64;
      byteArray0[6] = (byte)84;
      byteArray0[7] = (byte) (-49);
      byteArray0[8] = (byte)75;
      BProcessor.parse(byteArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) "Depi%";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      String[][] stringArray0 = new String[1][2];
      String[] stringArray1 = new String[6];
      stringArray1[0] = "Depi%";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "Depi%";
      stringArray1[4] = "";
      stringArray1[5] = "";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("", "Depi%", objectArray0, stringArray0);
      element0.getText();
      element0.addElementAndContent("Depi%", "&", "vTXGj'rV9,I.Jiu");
      String string0 = ">";
      element0.setAttribute(stringArray1[1], string0);
      BProcessor.toBinary(element0);
      int int0 = (-1142);
      byte byte0 = (byte)27;
      element0.ensureCapacity(int0, byte0);
      byte[] byteArray0 = BProcessor.toBinary(element0);
      BProcessor.toBinary(element0);
      element0.removeAllElements();
      element0.getText();
      BProcessor.toBinary(element0);
      BProcessor.toBinary(element0);
      BProcessor.toBinary(element0);
      BProcessor.toBinary(element0);
      Element element1 = BProcessor.parse(byteArray0);
      assertNotNull(element1);
      
      long long0 = 0L;
      element1.queueTime = long0;
      byte[] byteArray1 = BProcessor.toBinary(element1);
      assertEquals(54, byteArray0.length);
      assertEquals(47, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-29);
      byteArray0[2] = (byte)58;
      BProcessor.parse(byteArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-26);
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte) (-34);
      byteArray0[5] = (byte)0;
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
      
      Element element1 = new Element(",A", ",A");
      element1.name = "{z35!Rz%5c)wL";
      BProcessor.toBinary(element1);
      Element element2 = new Element("I7/J+\"D''b(^pV|V!", "I7/J+\"D''b(^pV|V!");
      BProcessor.toBinary(element2);
      byte[] byteArray1 = new byte[2];
      byteArray0[2] = (byte)0;
      Element element3 = element2.addElement("", "");
      byteArray1[1] = (byte)0;
      BProcessor.parse(byteArray1);
      BProcessor.toBinary(element2);
      byte[] byteArray2 = BProcessor.toBinary(element2);
      assertEquals(42, byteArray2.length);
      
      Element element4 = new Element(",A", "oZ;C`#8k=+n^6)Ca");
      byte[] byteArray3 = BProcessor.toBinary(element3);
      assertArrayEquals(new byte[] {(byte)32, (byte)0, (byte)0, (byte)0}, byteArray3);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)37;
      BProcessor.parse(byteArray0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)93;
      byteArray1[5] = (byte)23;
      byteArray1[5] = (byte) (-16);
      Element element0 = BProcessor.parse(byteArray1);
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) bProcessor0;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) bProcessor0;
      String[][] stringArray0 = new String[5][4];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[8];
      stringArray2[0] = "";
      stringArray2[1] = "";
      stringArray2[2] = "";
      stringArray2[3] = "jabber:client";
      stringArray2[6] = "";
      stringArray2[7] = "";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[8];
      stringArray3[1] = "";
      stringArray3[2] = "";
      objectArray0[0] = (Object) "";
      stringArray3[4] = stringArray2[4];
      stringArray3[5] = "jabber:client";
      stringArray3[6] = "";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[3];
      stringArray4[0] = "";
      stringArray4[1] = "jabber:client";
      stringArray4[2] = "";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[3];
      stringArray5[0] = "";
      stringArray5[1] = "//R>c-9";
      stringArray5[2] = "";
      stringArray0[4] = stringArray5;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // it.yup.xml.BProcessor cannot be cast to it.yup.xml.Element
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }
}
