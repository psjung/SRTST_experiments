/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 14:23:35 KST 2018
 */

package it.yup.xml;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import it.yup.xml.BProcessor;
import it.yup.xml.Element;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class BProcessor_ESTest3 extends BProcessor_ESTest_scaffolding3 {

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte) (-3);
      byteArray0[3] = (byte) (-79);
      byteArray0[4] = (byte)121;
      byteArray0[5] = (byte)35;
      byteArray0[6] = (byte) (-60);
      BProcessor.parse(byteArray0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-40);
      byteArray1[1] = (byte) (-3);
      byteArray1[2] = (byte)3;
      byteArray1[3] = (byte) (-35);
      byteArray1[4] = (byte)111;
      byteArray1[5] = (byte)29;
      byteArray1[6] = (byte)2;
      byteArray1[7] = (byte)20;
      BProcessor.parse(byteArray1);
      Element element0 = new Element("jabber:client", "jabber:client");
      BProcessor.toBinary(element0);
      Element element1 = new Element("gWc;", "");
      element1.nchildren = 777;
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-20);
      byteArray0[2] = (byte) (-122);
      byteArray0[3] = (byte)98;
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte) (-77);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)32;
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-62);
      byteArray0[4] = (byte) (-125);
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-66);
      byteArray0[4] = (byte)100;
      byteArray0[5] = (byte)127;
      byteArray0[6] = (byte) (-50);
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte) (-61);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)88;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)5;
      byteArray0[7] = (byte) (-110);
      byteArray0[8] = (byte)0;
      BProcessor.parse(byteArray0);
      BProcessor.parse(byteArray0);
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)75;
      byteArray0[2] = (byte)60;
      byteArray0[3] = (byte)32;
      byteArray0[4] = (byte) (-108);
      BProcessor.parse(byteArray0);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte) (-55);
      BProcessor.parse(byteArray1);
      byte[] byteArray2 = new byte[0];
      BProcessor.parse(byteArray2);
      BProcessor.parse(byteArray2);
      Element element0 = BProcessor.parse(byteArray2);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "jabber:client";
      Element element0 = new Element("jabber:client", "jabber:client");
      Element element1 = new Element(element0);
      element0.maxWait = 0;
      element0.name = "jabber:client";
      byte[] byteArray0 = BProcessor.toBinary(element1);
      Element element2 = BProcessor.parse(byteArray0);
      BProcessor.toBinary(element0);
      BProcessor.toBinary(element2);
      element1.delAttribute("jabber:client");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "jabber:client";
      stringArray0[1] = "jabber:client";
      stringArray0[2] = "jabber:client";
      stringArray0[3] = "jabber:client";
      stringArray0[4] = "jabber:client";
      element2.toXml();
      element2.setAttributes(stringArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) bProcessor0;
      objectArray0[1] = (Object) "jabber:client";
      objectArray0[2] = (Object) bProcessor0;
      objectArray0[3] = (Object) "jabber:client";
      objectArray0[4] = (Object) "jabber:client";
      objectArray0[5] = (Object) "U{zxq@(mw(Po";
      objectArray0[6] = (Object) "jabber:client";
      String[][] stringArray0 = new String[3][4];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "U{zxq@(mw(Po";
      stringArray1[1] = "";
      stringArray1[2] = "jabber:client";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[2];
      stringArray2[0] = "";
      stringArray2[1] = "";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[5];
      stringArray3[0] = "U{zxq@(mw(Po";
      stringArray3[1] = "";
      stringArray3[2] = "";
      stringArray3[3] = "jabber:client";
      stringArray3[4] = "jabber:client";
      stringArray0[2] = stringArray3;
      Element element0 = new Element("U{zxq@(mw(Po", "jabber:client", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-66);
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-125);
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Element element0 = new Element("Gu", "}]Ajdw=m");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "Gu";
      objectArray0[1] = (Object) "Gu";
      element0.children = objectArray0;
      element0.ensureCapacity((-1993), (byte)0);
      element0.addElement((String) null, "}]Ajdw=m");
      byte[] byteArray0 = BProcessor.toBinary(element0);
      BProcessor bProcessor0 = new BProcessor();
      BProcessor.parse(byteArray0);
      element0.maxWait = (int) (byte)0;
      byte[] byteArray1 = BProcessor.toBinary(element0);
      BProcessor.parse(byteArray1);
      BProcessor.parse(byteArray0);
      Element element1 = BProcessor.parse(byteArray0);
      assertNotNull(element1);
      assertEquals(25, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "RqC'EcD6,]^_";
      objectArray0[1] = (Object) "RqC'EcD6,]^_";
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "RqC'EcD6,]^_";
      String[][] stringArray0 = new String[1][5];
      String[] stringArray1 = new String[8];
      stringArray1[0] = "f";
      stringArray1[1] = "";
      stringArray1[2] = "f";
      stringArray1[3] = "f";
      stringArray1[4] = "f";
      stringArray1[5] = "RqC'EcD6,]^_";
      stringArray1[6] = "f";
      stringArray1[7] = "f";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("RqC'EcD6,]^_", "f", objectArray0, stringArray0);
      Element.array_inc = 0;
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      String[][] stringArray0 = new String[2][9];
      String[] stringArray1 = new String[6];
      stringArray1[0] = "";
      stringArray1[1] = ",\"w|&+x";
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray1[5] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[5];
      stringArray2[0] = ",\"w|&+x";
      stringArray2[1] = "";
      stringArray2[2] = ",\"w|&+x";
      stringArray2[3] = ",\"w|&+x";
      stringArray2[4] = "";
      stringArray0[1] = stringArray2;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      byte[] byteArray0 = BProcessor.toBinary(element0);
      assertEquals(32, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)20;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)114;
      // Undeclared exception!
      try { 
        BProcessor.parse(byteArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to it.yup.xml.Element
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte)8;
      // Undeclared exception!
      try { 
        BProcessor.parse(byteArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to it.yup.xml.Element
         //
         verifyException("it.yup.xml.BProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BProcessor.parse(byteArray0);
      BProcessor.parse(byteArray0);
      BProcessor.parse(byteArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      // Undeclared exception!
      try { 
        BProcessor.parse((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) bProcessor0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) bProcessor0;
      objectArray0[3] = (Object) bProcessor0;
      objectArray0[4] = (Object) bProcessor0;
      String[][] stringArray0 = new String[5][2];
      String[] stringArray1 = new String[6];
      stringArray1[0] = "";
      stringArray1[1] = "[Z/[Cv3E";
      stringArray1[2] = " xmlns='";
      stringArray1[3] = "[Z/[Cv3E";
      stringArray1[4] = "[Z/[Cv3E";
      stringArray1[5] = "[Z/[Cv3E";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[8];
      stringArray2[0] = "";
      stringArray2[1] = "";
      stringArray2[2] = " xmlns='";
      stringArray2[3] = "[Z/[Cv3E";
      stringArray2[4] = "";
      stringArray2[5] = "";
      stringArray2[6] = "";
      stringArray2[7] = "";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[7];
      stringArray3[0] = "";
      stringArray3[1] = "";
      stringArray3[2] = "[Z/[Cv3E";
      stringArray3[3] = "[Z/[Cv3E";
      stringArray3[4] = "[Z/[Cv3E";
      stringArray3[5] = "[Z/[Cv3E";
      stringArray3[6] = " xmlns='";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[1];
      stringArray4[0] = "";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[1];
      stringArray5[0] = "SHA-1";
      stringArray0[4] = stringArray5;
      Element element0 = new Element("[Z/[Cv3E", "[Z/[Cv3E", objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      String[][] stringArray0 = new String[1][2];
      String[] stringArray1 = new String[8];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray1[5] = "";
      stringArray1[6] = "";
      stringArray1[7] = "";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("", "", objectArray0, stringArray0);
      byte[] byteArray0 = BProcessor.toBinary(element0);
      assertArrayEquals(new byte[] {(byte)32, (byte)0, (byte)1, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-39);
      byteArray0[1] = (byte) (-117);
      BProcessor.parse(byteArray0);
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Element element0 = new Element((String) null, "");
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)127;
      byteArray0[3] = (byte)0;
      BProcessor.parse(byteArray0);
      BProcessor bProcessor0 = new BProcessor();
      // Undeclared exception!
      try { 
        BProcessor.toBinary((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "B";
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) "B";
      String[][] stringArray0 = new String[1][1];
      String[] stringArray1 = new String[3];
      stringArray1[0] = "B";
      stringArray1[1] = "B";
      stringArray1[2] = "B";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("B", "LQX.2~");
      element0.addElement("B", "B");
      Element.createUniqueId();
      BProcessor.toBinary(element0);
      element0.nchildren = 813;
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-66);
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-125);
      BProcessor.parse(byteArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) bProcessor0;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) "%=}z[GatbCVD+!DbAN";
      objectArray0[6] = (Object) "";
      String[][] stringArray0 = new String[4][5];
      String[] stringArray1 = new String[5];
      stringArray1[0] = "";
      stringArray1[1] = "%=}z[GatbCVD+!DbAN";
      stringArray1[2] = "%=}z[GatbCVD+!DbAN";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[4];
      stringArray2[0] = "%=}z[GatbCVD+!DbAN";
      stringArray2[1] = "";
      stringArray2[2] = "%=}z[GatbCVD+!DbAN";
      byte[] byteArray0 = new byte[0];
      BProcessor.parse(byteArray0);
      stringArray2[3] = "%=}z[GatbCVD+!DbAN";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[4];
      stringArray3[0] = "";
      stringArray3[1] = "k={|KZvh";
      stringArray3[2] = "";
      stringArray3[3] = "";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[1];
      stringArray4[0] = "%=}z[GatbCVD+!DbAN";
      stringArray0[3] = stringArray4;
      Element element0 = new Element("", "%=}z[GatbCVD+!DbAN", objectArray0, stringArray0);
      Element element1 = null;
      try {
        element1 = new Element(element0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-111);
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-31);
      Element element0 = BProcessor.parse(byteArray0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-42);
      BProcessor.parse(byteArray0);
      Element element0 = new Element((String) null, "");
      element0.getText();
      element0.ensureCapacity((byte) (-42), (byte) (-3));
      element0.maxWait = 0;
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BProcessor bProcessor0 = new BProcessor();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)100;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-23);
      byteArray0[4] = (byte)121;
      byteArray0[5] = (byte)56;
      byteArray0[6] = (byte)86;
      byteArray0[7] = (byte) (-98);
      BProcessor.parse(byteArray0);
      // Undeclared exception!
      try { 
        BProcessor.toBinary((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "{W'e_\"h/'83Vh";
      objectArray0[1] = (Object) "{W'e_\"h/'83Vh";
      objectArray0[2] = (Object) "{W'e_\"h/'83Vh";
      objectArray0[3] = (Object) "{W'e_\"h/'83Vh";
      objectArray0[4] = (Object) "{W'e_\"h/'83Vh";
      objectArray0[5] = (Object) "{W'e_\"h/'83Vh";
      objectArray0[6] = (Object) "{W'e_\"h/'83Vh";
      objectArray0[7] = (Object) "{W'e_\"h/'83Vh";
      String[][] stringArray0 = new String[1][5];
      String[] stringArray1 = new String[8];
      stringArray1[0] = "{W'e_\"h/'83Vh";
      stringArray1[1] = "{W'e_\"h/'83Vh";
      stringArray1[2] = "{W'e_\"h/'83Vh";
      stringArray1[3] = "{W'e_\"h/'83Vh";
      stringArray1[4] = "{W'e_\"h/'83Vh";
      stringArray1[5] = "{W'e_\"h/'83Vh";
      stringArray1[6] = "{W'e_\"h/'83Vh";
      stringArray0[0] = stringArray1;
      Element element0 = new Element("{W'e_\"h/'83Vh", "{W'e_\"h/'83Vh", objectArray0, stringArray0);
      Element.array_inc = 0;
      element0.queueTime = (-3689L);
      element0.uri = "";
      element0.uri = "S#5c{";
      element0.clone();
      BProcessor.toBinary(element0);
      element0.attributes = null;
      // Undeclared exception!
      try { 
        BProcessor.toBinary(element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  
}
