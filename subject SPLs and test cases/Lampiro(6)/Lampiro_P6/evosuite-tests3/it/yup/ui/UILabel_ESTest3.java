/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 13:44:42 KST 2018
 */

package it.yup.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import it.yup.ui.UIButton;
import it.yup.ui.UICheckbox;
import it.yup.ui.UILabel;
import java.time.LocalDate;
import java.util.Vector;
import javax.microedition.lcdui.Font;
import javax.microedition.lcdui.Graphics;
import javax.microedition.lcdui.Image;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class UILabel_ESTest3 extends UILabel_ESTest_scaffolding3 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox((String) null);
      uICheckbox0.getText();
      assertEquals(20, uICheckbox0.getAnchorPoint());
      assertFalse(uICheckbox0.isFlip());
      assertEquals((-1), uICheckbox0.getImgAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox("d");
      uICheckbox0.getText();
      assertEquals((-1), uICheckbox0.getImgAnchorPoint());
      assertEquals(20, uICheckbox0.getAnchorPoint());
      assertFalse(uICheckbox0.isFlip());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox((String) null);
      // Undeclared exception!
      try { 
        uICheckbox0.setText("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      // Undeclared exception!
      try { 
        uILabel0.paint((Graphics) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      // Undeclared exception!
      try { 
        uILabel0.getTextWidth("", (Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      uILabel0.setImg((Image) null);
      assertFalse(uILabel0.isWrappable());
      assertFalse(uILabel0.isFlip());
      assertEquals(20, uILabel0.getAnchorPoint());
      assertEquals((-1), uILabel0.getImgAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UIButton uIButton0 = new UIButton("");
      uIButton0.setWrappable(true, 0);
      assertTrue(uIButton0.isWrappable());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      uILabel0.setWrappable(false, 0);
      assertEquals(0, uILabel0.getWidth());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UILabel uILabel0 = new UILabel("]");
      uILabel0.setText("");
      assertEquals("", uILabel0.getText());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      // Undeclared exception!
      try { 
        uIButton0.getHeight((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox("\" ");
      // Undeclared exception!
      try { 
        uICheckbox0.computeTextLines((Font) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      uILabel0.setText("");
      uILabel0.computeTextLines((Font) null, 0);
      uILabel0.getTextLines();
      assertEquals(20, uILabel0.getAnchorPoint());
      assertFalse(uILabel0.isFlip());
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      assertFalse(uILabel0.isWrappable());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      boolean boolean0 = uILabel0.isFlip();
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      assertEquals(20, uILabel0.getAnchorPoint());
      assertFalse(uILabel0.isWrappable());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UILabel uILabel0 = new UILabel((Image) null, "");
      int int0 = uILabel0.getImgAnchorPoint();
      assertEquals((-1), int0);
      assertFalse(uILabel0.isFlip());
      assertEquals(20, uILabel0.getAnchorPoint());
      assertFalse(uILabel0.isWrappable());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox("D");
      // Undeclared exception!
      try { 
        uICheckbox0.computeTextLines((Font) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UILabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      boolean boolean0 = uILabel0.isWrappable();
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      assertEquals(20, uILabel0.getAnchorPoint());
      assertFalse(boolean0);
      assertFalse(uILabel0.isFlip());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox((String) null);
      assertEquals(20, uICheckbox0.getAnchorPoint());
      
      uICheckbox0.setAnchorPoint(0);
      assertEquals(0, uICheckbox0.getAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      uIButton0.getFont();
      assertFalse(uIButton0.isFlip());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UILabel uILabel0 = new UILabel((Image) null);
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      assertFalse(uILabel0.isFlip());
      assertFalse(uILabel0.isWrappable());
      assertEquals(20, uILabel0.getAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox("");
      String string0 = uICheckbox0.getText();
      assertNotNull(string0);
      assertFalse(uICheckbox0.isFlip());
      assertEquals((-1), uICheckbox0.getImgAnchorPoint());
      assertEquals(20, uICheckbox0.getAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      
      uILabel0.setImgAnchorPoint(0);
      assertEquals(0, uILabel0.getImgAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      uILabel0.setFont((Font) null);
      assertEquals(20, uILabel0.getAnchorPoint());
      assertFalse(uILabel0.isFlip());
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      assertFalse(uILabel0.isWrappable());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox("");
      Vector<LocalDate> vector0 = new Vector<LocalDate>();
      uICheckbox0.setTextLines(vector0);
      assertFalse(uICheckbox0.isFlip());
      assertEquals(20, uICheckbox0.getAnchorPoint());
      assertEquals((-1), uICheckbox0.getImgAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      uIButton0.getImg();
      assertFalse(uIButton0.isFlip());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox("");
      uICheckbox0.setFlip(false);
      assertEquals((-1), uICheckbox0.getImgAnchorPoint());
      assertFalse(uICheckbox0.isFlip());
      assertEquals(20, uICheckbox0.getAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UIButton uIButton0 = new UIButton((Image) null, "");
      int int0 = uIButton0.getAnchorPoint();
      assertFalse(uIButton0.isFlip());
      assertEquals(1, int0);
      assertEquals((-1), uIButton0.getImgAnchorPoint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UILabel uILabel0 = new UILabel("");
      uILabel0.getTextLines();
      assertFalse(uILabel0.isWrappable());
      assertFalse(uILabel0.isFlip());
      assertEquals(20, uILabel0.getAnchorPoint());
      assertEquals((-1), uILabel0.getImgAnchorPoint());
  }
}
