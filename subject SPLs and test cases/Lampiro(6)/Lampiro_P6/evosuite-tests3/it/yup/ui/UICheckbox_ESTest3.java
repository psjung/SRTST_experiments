/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 13:35:32 KST 2018
 */

package it.yup.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import it.yup.ui.UICheckbox;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class UICheckbox_ESTest3 extends UICheckbox_ESTest_scaffolding3 {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox("");
      assertFalse(uICheckbox0.isChecked());
      
      uICheckbox0.setChecked(true);
      boolean boolean0 = uICheckbox0.isChecked();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox("");
      // Undeclared exception!
      try { 
        uICheckbox0.keyPressed(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UICanvas", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox((String) null);
      uICheckbox0.setChecked(true);
      assertTrue(uICheckbox0.isChecked());
      
      uICheckbox0.setChecked(false);
      assertTrue(uICheckbox0.isFocusable());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox("");
      uICheckbox0.setChecked(false);
      assertTrue(uICheckbox0.isFocusable());
      assertFalse(uICheckbox0.isWrappable());
      assertFalse(uICheckbox0.isChecked());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UICheckbox uICheckbox0 = new UICheckbox("");
      boolean boolean0 = uICheckbox0.isChecked();
      assertTrue(uICheckbox0.isFocusable());
      assertFalse(uICheckbox0.isWrappable());
      assertFalse(boolean0);
  }
}
