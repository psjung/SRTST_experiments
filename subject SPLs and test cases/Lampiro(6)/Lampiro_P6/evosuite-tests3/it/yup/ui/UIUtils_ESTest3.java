/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 14:00:45 KST 2018
 */

package it.yup.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import it.yup.ui.UIAccordion;
import it.yup.ui.UIButton;
import it.yup.ui.UICheckbox;
import it.yup.ui.UICombobox;
import it.yup.ui.UIGauge;
import it.yup.ui.UIHLayout;
import it.yup.ui.UIItem;
import it.yup.ui.UILabel;
import it.yup.ui.UIMenu;
import it.yup.ui.UIPanel;
import it.yup.ui.UISeparator;
import it.yup.ui.UITextPanel;
import it.yup.ui.UIUtils;
import javax.microedition.lcdui.Image;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class UIUtils_ESTest3 extends UIUtils_ESTest_scaffolding3 {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UIUtils uIUtils0 = new UIUtils();
      assertNotNull(uIUtils0);
      
      UIUtils.itu_keys = uIUtils0.itu_keys;
      int int0 = UIUtils.medColor(0, 102);
      assertEquals(51, int0);
      
      int int1 = UIUtils.colorize(0, 5668094);
      assertFalse(int1 == int0);
      assertEquals(1760498311, int1);
      
      UICheckbox uICheckbox0 = new UICheckbox("66]H9PI3B!H}faQ|");
      assertEquals((-1), uICheckbox0.getFg_color());
      assertEquals((-1), uICheckbox0.getImgAnchorPoint());
      assertEquals(0, uICheckbox0.getType());
      assertEquals("66]H9PI3B!H}faQ|", uICheckbox0.getText());
      assertFalse(uICheckbox0.isFlip());
      assertEquals(20, uICheckbox0.getAnchorPoint());
      assertTrue(uICheckbox0.isFocusable());
      assertFalse(uICheckbox0.isWrappable());
      assertEquals((-1), uICheckbox0.getGradientColor());
      assertEquals(0, uICheckbox0.getLayoutWidth());
      assertFalse(uICheckbox0.isChecked());
      assertEquals((-1), uICheckbox0.getBg_color());
      assertFalse(uICheckbox0.isSelected());
      assertEquals((-1), uICheckbox0.getWidth());
      assertEquals((-1), uICheckbox0.getGradientSelectedColor());
      assertEquals(0, uICheckbox0.getLayoutHeight());
      assertEquals(8947848, uICheckbox0.getSelectedColor());
      assertNotNull(uICheckbox0);
      
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uICheckbox0, 742);
      assertEquals((-1), uICheckbox0.getFg_color());
      assertEquals((-1), uICheckbox0.getImgAnchorPoint());
      assertEquals(0, uICheckbox0.getType());
      assertEquals("66]H9PI3B!H}faQ|", uICheckbox0.getText());
      assertFalse(uICheckbox0.isFlip());
      assertTrue(uICheckbox0.isFocusable());
      assertFalse(uICheckbox0.isWrappable());
      assertEquals((-1), uICheckbox0.getGradientColor());
      assertFalse(uICheckbox0.isChecked());
      assertEquals((-1), uICheckbox0.getBg_color());
      assertFalse(uICheckbox0.isSelected());
      assertEquals((-1), uICheckbox0.getWidth());
      assertEquals(1, uICheckbox0.getAnchorPoint());
      assertEquals((-1), uICheckbox0.getGradientSelectedColor());
      assertEquals(742, uICheckbox0.getLayoutWidth());
      assertEquals(0, uICheckbox0.getLayoutHeight());
      assertEquals(8947848, uICheckbox0.getSelectedColor());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertEquals(0, uIHLayout0.getType());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertFalse(uIHLayout0.isGroup());
      assertTrue(uIHLayout0.isFocusable());
      assertFalse(uIHLayout0.isSelected());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertNotNull(uIHLayout0);
      
      UIMenu uIMenu0 = UIUtils.easyMenu("", 0, (-1795), (-1090), (UIItem) uIHLayout0, "O7 ", "66]H9PI3B!H}faQ|");
      assertEquals((-1), uICheckbox0.getFg_color());
      assertEquals((-1), uICheckbox0.getImgAnchorPoint());
      assertEquals(0, uICheckbox0.getType());
      assertEquals("66]H9PI3B!H}faQ|", uICheckbox0.getText());
      assertFalse(uICheckbox0.isFlip());
      assertTrue(uICheckbox0.isFocusable());
      assertFalse(uICheckbox0.isWrappable());
      assertEquals((-1), uICheckbox0.getGradientColor());
      assertFalse(uICheckbox0.isChecked());
      assertEquals(11322072, uICheckbox0.getBg_color());
      assertEquals((-1), uICheckbox0.getWidth());
      assertEquals(1, uICheckbox0.getAnchorPoint());
      assertEquals((-1), uICheckbox0.getGradientSelectedColor());
      assertEquals(742, uICheckbox0.getLayoutWidth());
      assertEquals(0, uICheckbox0.getLayoutHeight());
      assertEquals(8947848, uICheckbox0.getSelectedColor());
      assertTrue(uICheckbox0.isSelected());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertEquals(0, uIHLayout0.getType());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals((-1), uIHLayout0.getWidth());
      assertFalse(uIHLayout0.isGroup());
      assertTrue(uIHLayout0.isFocusable());
      assertTrue(uIHLayout0.isSelected());
      assertEquals(11322072, uIHLayout0.getBg_color());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals(0, uIMenu0.getType());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals((-1), uIMenu0.getFg_color());
      assertTrue(uIMenu0.isFocusable());
      assertFalse(uIMenu0.isSelected());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertNotNull(uIMenu0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[0];
      int int0 = 1690;
      int int1 = 57;
      // Undeclared exception!
      UIUtils.rescalaArray(intArray0, intArray0, 1690, 1690, (-1387), 12303291, 1690, (-1387), 57);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = null;
      int int0 = 16554515;
      int int1 = 2381;
      int int2 = 23;
      // Undeclared exception!
      try { 
        UIUtils.rescalaArray((int[]) null, (int[]) null, 16554515, 2381, 2381, 16554515, 23, 16554515, (-3181));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = UIUtils.medColor(0, 0);
      assertEquals(0, int0);
      
      UIUtils.colorize(0, 5668094);
      UICheckbox uICheckbox0 = new UICheckbox("66]H9PI3B!H}faQ|");
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uICheckbox0, 742);
      UIUtils.easyMenu("", 0, (-1795), (-1090), (UIItem) uIHLayout0, "O7 ", "66]H9PI3B!H}faQ|");
      assertEquals(1, uICheckbox0.getAnchorPoint());
      assertTrue(uICheckbox0.isSelected());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 14540287;
      int int0 = 0;
      // Undeclared exception!
      try { 
        UIUtils.rescalaArray(intArray0, intArray0, 14540287, 65, 14540287, 32, 0, 0, 65);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UIUtils uIUtils0 = new UIUtils();
      assertNotNull(uIUtils0);
      
      UIMenu uIMenu0 = UIUtils.easyMenu("", 2500, 2500, 2500, (UIItem) null);
      assertTrue(uIMenu0.isFocusable());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals((-1), uIMenu0.getFg_color());
      assertFalse(uIMenu0.isSelected());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals(2500, uIMenu0.getAbsoluteY());
      assertEquals(2500, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals(0, uIMenu0.getType());
      assertEquals((-1), uIMenu0.getSelectedIndex());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals(2500, uIMenu0.getWidth());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertNotNull(uIMenu0);
      
      UIHLayout uIHLayout0 = new UIHLayout(0);
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertFalse(uIHLayout0.isFocusable());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertTrue(uIHLayout0.isGroup());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertEquals(0, uIHLayout0.getType());
      assertFalse(uIHLayout0.isSelected());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertNotNull(uIHLayout0);
      
      UIHLayout uIHLayout1 = UIUtils.easyCenterLayout(uIHLayout0, 0);
      assertNotSame(uIHLayout0, uIHLayout1);
      assertNotSame(uIHLayout1, uIHLayout0);
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertFalse(uIHLayout0.isFocusable());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertTrue(uIHLayout0.isGroup());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertEquals(0, uIHLayout0.getType());
      assertFalse(uIHLayout0.isSelected());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals(8947848, uIHLayout1.getSelectedColor());
      assertEquals((-1), uIHLayout1.getGradientSelectedColor());
      assertEquals((-1), uIHLayout1.getGradientColor());
      assertFalse(uIHLayout1.isGroup());
      assertFalse(uIHLayout1.isFocusable());
      assertEquals(0, uIHLayout1.getLayoutHeight());
      assertEquals((-1), uIHLayout1.getBg_color());
      assertEquals((-1), uIHLayout1.getFg_color());
      assertEquals((-1), uIHLayout1.getWidth());
      assertEquals(0, uIHLayout1.getLayoutWidth());
      assertFalse(uIHLayout1.isSelected());
      assertEquals(0, uIHLayout1.getType());
      assertNotNull(uIHLayout1);
      assertFalse(uIHLayout1.equals((Object)uIHLayout0));
      
      UITextPanel uITextPanel0 = new UITextPanel();
      assertFalse(uITextPanel0.isEnableEmoticons());
      assertTrue(uITextPanel0.isFocusable());
      assertEquals(0, uITextPanel0.getType());
      assertEquals((-1), uITextPanel0.getGradientSelectedColor());
      assertEquals((-1), uITextPanel0.getFg_color());
      assertTrue(uITextPanel0.isDirty());
      assertFalse(uITextPanel0.isSelected());
      assertEquals(8947848, uITextPanel0.getSelectedColor());
      assertEquals((-1), uITextPanel0.getBg_color());
      assertFalse(uITextPanel0.isNeedScrollbar());
      assertEquals(0, uITextPanel0.getLayoutHeight());
      assertEquals("", uITextPanel0.getText());
      assertFalse(uITextPanel0.isListMode());
      assertEquals((-1), uITextPanel0.getSelectedIndex());
      assertEquals((-1), uITextPanel0.getGradientColor());
      assertEquals((-1), uITextPanel0.getMaxHeight());
      assertFalse(uITextPanel0.isModal());
      assertEquals(0, uITextPanel0.getFirstVisible());
      assertEquals((-1), uITextPanel0.getWidth());
      assertEquals(0, uITextPanel0.getLayoutWidth());
      assertNotNull(uITextPanel0);
      
      uITextPanel0.setText("priority");
      assertFalse(uITextPanel0.isEnableEmoticons());
      assertTrue(uITextPanel0.isFocusable());
      assertEquals(0, uITextPanel0.getType());
      assertEquals((-1), uITextPanel0.getGradientSelectedColor());
      assertEquals("priority", uITextPanel0.getText());
      assertEquals((-1), uITextPanel0.getFg_color());
      assertTrue(uITextPanel0.isDirty());
      assertFalse(uITextPanel0.isSelected());
      assertEquals(8947848, uITextPanel0.getSelectedColor());
      assertEquals((-1), uITextPanel0.getBg_color());
      assertFalse(uITextPanel0.isNeedScrollbar());
      assertEquals(0, uITextPanel0.getLayoutHeight());
      assertFalse(uITextPanel0.isListMode());
      assertEquals((-1), uITextPanel0.getSelectedIndex());
      assertEquals((-1), uITextPanel0.getGradientColor());
      assertEquals((-1), uITextPanel0.getMaxHeight());
      assertFalse(uITextPanel0.isModal());
      assertEquals(0, uITextPanel0.getFirstVisible());
      assertEquals((-1), uITextPanel0.getWidth());
      assertEquals(0, uITextPanel0.getLayoutWidth());
      
      UITextPanel uITextPanel1 = (UITextPanel)uITextPanel0.getSelectedItem();
      assertSame(uITextPanel0, uITextPanel1);
      assertSame(uITextPanel1, uITextPanel0);
      assertFalse(uITextPanel0.isEnableEmoticons());
      assertTrue(uITextPanel0.isFocusable());
      assertEquals(0, uITextPanel0.getType());
      assertEquals((-1), uITextPanel0.getGradientSelectedColor());
      assertEquals("priority", uITextPanel0.getText());
      assertEquals((-1), uITextPanel0.getFg_color());
      assertTrue(uITextPanel0.isDirty());
      assertFalse(uITextPanel0.isSelected());
      assertEquals(8947848, uITextPanel0.getSelectedColor());
      assertEquals((-1), uITextPanel0.getBg_color());
      assertFalse(uITextPanel0.isNeedScrollbar());
      assertEquals(0, uITextPanel0.getLayoutHeight());
      assertFalse(uITextPanel0.isListMode());
      assertEquals((-1), uITextPanel0.getSelectedIndex());
      assertEquals((-1), uITextPanel0.getGradientColor());
      assertEquals((-1), uITextPanel0.getMaxHeight());
      assertFalse(uITextPanel0.isModal());
      assertEquals(0, uITextPanel0.getFirstVisible());
      assertEquals((-1), uITextPanel0.getWidth());
      assertEquals(0, uITextPanel0.getLayoutWidth());
      assertEquals((-1), uITextPanel1.getMaxHeight());
      assertFalse(uITextPanel1.isModal());
      assertEquals((-1), uITextPanel1.getFg_color());
      assertFalse(uITextPanel1.isListMode());
      assertEquals((-1), uITextPanel1.getSelectedIndex());
      assertEquals(0, uITextPanel1.getFirstVisible());
      assertTrue(uITextPanel1.isFocusable());
      assertEquals(8947848, uITextPanel1.getSelectedColor());
      assertEquals((-1), uITextPanel1.getGradientSelectedColor());
      assertEquals((-1), uITextPanel1.getWidth());
      assertEquals(0, uITextPanel1.getLayoutHeight());
      assertEquals(0, uITextPanel1.getLayoutWidth());
      assertTrue(uITextPanel1.isDirty());
      assertFalse(uITextPanel1.isEnableEmoticons());
      assertFalse(uITextPanel1.isNeedScrollbar());
      assertEquals(0, uITextPanel1.getType());
      assertFalse(uITextPanel1.isSelected());
      assertEquals("priority", uITextPanel1.getText());
      assertEquals((-1), uITextPanel1.getBg_color());
      assertEquals((-1), uITextPanel1.getGradientColor());
      assertNotNull(uITextPanel1);
      
      UIHLayout uIHLayout2 = UIUtils.easyCenterLayout(uITextPanel1, 0);
      assertSame(uITextPanel0, uITextPanel1);
      assertSame(uITextPanel1, uITextPanel0);
      assertNotSame(uIHLayout2, uIHLayout0);
      assertNotSame(uIHLayout2, uIHLayout1);
      assertFalse(uITextPanel0.isEnableEmoticons());
      assertTrue(uITextPanel0.isFocusable());
      assertEquals(0, uITextPanel0.getType());
      assertEquals((-1), uITextPanel0.getGradientSelectedColor());
      assertEquals("priority", uITextPanel0.getText());
      assertEquals((-1), uITextPanel0.getFg_color());
      assertTrue(uITextPanel0.isDirty());
      assertFalse(uITextPanel0.isSelected());
      assertEquals(8947848, uITextPanel0.getSelectedColor());
      assertEquals((-1), uITextPanel0.getBg_color());
      assertFalse(uITextPanel0.isNeedScrollbar());
      assertEquals(0, uITextPanel0.getLayoutHeight());
      assertFalse(uITextPanel0.isListMode());
      assertEquals((-1), uITextPanel0.getSelectedIndex());
      assertEquals((-1), uITextPanel0.getGradientColor());
      assertEquals((-1), uITextPanel0.getMaxHeight());
      assertFalse(uITextPanel0.isModal());
      assertEquals(0, uITextPanel0.getFirstVisible());
      assertEquals((-1), uITextPanel0.getWidth());
      assertEquals(0, uITextPanel0.getLayoutWidth());
      assertEquals((-1), uITextPanel1.getMaxHeight());
      assertFalse(uITextPanel1.isModal());
      assertEquals((-1), uITextPanel1.getFg_color());
      assertFalse(uITextPanel1.isListMode());
      assertEquals((-1), uITextPanel1.getSelectedIndex());
      assertEquals(0, uITextPanel1.getFirstVisible());
      assertTrue(uITextPanel1.isFocusable());
      assertEquals(8947848, uITextPanel1.getSelectedColor());
      assertEquals((-1), uITextPanel1.getGradientSelectedColor());
      assertEquals((-1), uITextPanel1.getWidth());
      assertEquals(0, uITextPanel1.getLayoutHeight());
      assertEquals(0, uITextPanel1.getLayoutWidth());
      assertTrue(uITextPanel1.isDirty());
      assertFalse(uITextPanel1.isEnableEmoticons());
      assertFalse(uITextPanel1.isNeedScrollbar());
      assertEquals(0, uITextPanel1.getType());
      assertFalse(uITextPanel1.isSelected());
      assertEquals("priority", uITextPanel1.getText());
      assertEquals((-1), uITextPanel1.getBg_color());
      assertEquals((-1), uITextPanel1.getGradientColor());
      assertEquals((-1), uIHLayout2.getBg_color());
      assertTrue(uIHLayout2.isFocusable());
      assertEquals((-1), uIHLayout2.getGradientSelectedColor());
      assertEquals(0, uIHLayout2.getLayoutHeight());
      assertEquals(8947848, uIHLayout2.getSelectedColor());
      assertEquals((-1), uIHLayout2.getWidth());
      assertEquals(0, uIHLayout2.getLayoutWidth());
      assertFalse(uIHLayout2.isSelected());
      assertEquals(0, uIHLayout2.getType());
      assertEquals((-1), uIHLayout2.getFg_color());
      assertEquals((-1), uIHLayout2.getGradientColor());
      assertFalse(uIHLayout2.isGroup());
      assertNotNull(uIHLayout2);
      assertFalse(uIHLayout2.equals((Object)uIHLayout0));
      assertFalse(uIHLayout2.equals((Object)uIHLayout1));
      
      int int0 = UIUtils.medColor(757, 0);
      assertEquals(378, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 0;
      int int1 = UIUtils.colorize(0, 0);
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      
      String string0 = "";
      int int2 = 0;
      boolean boolean0 = false;
      UICombobox uICombobox0 = null;
      try {
        uICombobox0 = new UICombobox("", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIScreen", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UIButton uIButton0 = new UIButton("B^6gS'Fk*75w");
      assertEquals(0, uIButton0.getLayoutHeight());
      assertEquals((-1), uIButton0.getWidth());
      assertEquals((-1), uIButton0.getBg_color());
      assertEquals(1, uIButton0.getAnchorPoint());
      assertFalse(uIButton0.isSelected());
      assertEquals((-1), uIButton0.getGradientColor());
      assertEquals(8947848, uIButton0.getSelectedColor());
      assertEquals((-1), uIButton0.getFg_color());
      assertEquals("B^6gS'Fk*75w", uIButton0.getText());
      assertEquals(2, uIButton0.getHPadding());
      assertFalse(uIButton0.isWrappable());
      assertTrue(uIButton0.isFocusable());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertEquals(0, uIButton0.getType());
      assertFalse(uIButton0.isFlip());
      assertEquals((-1), uIButton0.getGradientSelectedColor());
      assertFalse(uIButton0.isPressed());
      assertEquals(0, uIButton0.getLayoutWidth());
      assertNotNull(uIButton0);
      
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uIButton0, 1424);
      assertEquals(0, uIButton0.getLayoutHeight());
      assertEquals((-1), uIButton0.getWidth());
      assertEquals((-1), uIButton0.getBg_color());
      assertEquals(1, uIButton0.getAnchorPoint());
      assertFalse(uIButton0.isSelected());
      assertEquals((-1), uIButton0.getGradientColor());
      assertEquals(8947848, uIButton0.getSelectedColor());
      assertEquals(1424, uIButton0.getLayoutWidth());
      assertEquals((-1), uIButton0.getFg_color());
      assertEquals("B^6gS'Fk*75w", uIButton0.getText());
      assertEquals(2, uIButton0.getHPadding());
      assertFalse(uIButton0.isWrappable());
      assertTrue(uIButton0.isFocusable());
      assertEquals((-1), uIButton0.getImgAnchorPoint());
      assertEquals(0, uIButton0.getType());
      assertFalse(uIButton0.isFlip());
      assertEquals((-1), uIButton0.getGradientSelectedColor());
      assertFalse(uIButton0.isPressed());
      assertEquals(0, uIHLayout0.getType());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertFalse(uIHLayout0.isSelected());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertTrue(uIHLayout0.isFocusable());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertFalse(uIHLayout0.isGroup());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertNotNull(uIHLayout0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = (-1592);
      int int1 = 874;
      int int2 = (-2009);
      UIItem uIItem0 = null;
      String string0 = "[XT-%*u!Eln";
      UIMenu uIMenu0 = UIUtils.easyMenu("", (-1592), 874, (-2009), (UIItem) null, "[XT-%*u!Eln", "[K6-:a6]2Iu+hax");
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getFg_color());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals(874, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals((-1), uIMenu0.getSelectedIndex());
      assertTrue(uIMenu0.isFocusable());
      assertEquals(0, uIMenu0.getType());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertFalse(uIMenu0.isSelected());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertNotNull(uIMenu0);
      
      // Undeclared exception!
      try { 
        UIUtils.easyMenu("XY%{gK9pehLe", (-2009), (-1592), 0, (UIItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UIPanel uIPanel0 = new UIPanel(false, false);
      assertEquals(0, uIPanel0.getLayoutWidth());
      assertEquals(0, uIPanel0.getLayoutHeight());
      assertEquals((-1), uIPanel0.getBg_color());
      assertFalse(uIPanel0.isListMode());
      assertEquals((-1), uIPanel0.getSelectedIndex());
      assertEquals(0, uIPanel0.getType());
      assertFalse(uIPanel0.isSelected());
      assertTrue(uIPanel0.isDirty());
      assertEquals((-1), uIPanel0.getGradientSelectedColor());
      assertEquals(8947848, uIPanel0.getSelectedColor());
      assertEquals((-1), uIPanel0.getFg_color());
      assertEquals((-1), uIPanel0.getMaxHeight());
      assertEquals((-1), uIPanel0.getWidth());
      assertTrue(uIPanel0.isFocusable());
      assertEquals((-1), uIPanel0.getGradientColor());
      assertFalse(uIPanel0.isModal());
      assertEquals(0, uIPanel0.getFirstVisible());
      assertNotNull(uIPanel0);
      
      UITextPanel uITextPanel0 = new UITextPanel();
      assertEquals(0, uITextPanel0.getFirstVisible());
      assertFalse(uITextPanel0.isEnableEmoticons());
      assertFalse(uITextPanel0.isModal());
      assertEquals((-1), uITextPanel0.getGradientSelectedColor());
      assertEquals((-1), uITextPanel0.getSelectedIndex());
      assertEquals((-1), uITextPanel0.getBg_color());
      assertEquals((-1), uITextPanel0.getFg_color());
      assertFalse(uITextPanel0.isSelected());
      assertFalse(uITextPanel0.isNeedScrollbar());
      assertEquals(0, uITextPanel0.getType());
      assertTrue(uITextPanel0.isDirty());
      assertEquals("", uITextPanel0.getText());
      assertEquals(8947848, uITextPanel0.getSelectedColor());
      assertEquals((-1), uITextPanel0.getGradientColor());
      assertFalse(uITextPanel0.isListMode());
      assertEquals(0, uITextPanel0.getLayoutHeight());
      assertEquals((-1), uITextPanel0.getMaxHeight());
      assertEquals((-1), uITextPanel0.getWidth());
      assertEquals(0, uITextPanel0.getLayoutWidth());
      assertTrue(uITextPanel0.isFocusable());
      assertNotNull(uITextPanel0);
      
      UITextPanel uITextPanel1 = (UITextPanel)uITextPanel0.getSelectedItem();
      assertSame(uITextPanel0, uITextPanel1);
      assertSame(uITextPanel1, uITextPanel0);
      assertEquals(0, uITextPanel0.getFirstVisible());
      assertFalse(uITextPanel0.isEnableEmoticons());
      assertFalse(uITextPanel0.isModal());
      assertEquals((-1), uITextPanel0.getGradientSelectedColor());
      assertEquals((-1), uITextPanel0.getSelectedIndex());
      assertEquals((-1), uITextPanel0.getBg_color());
      assertEquals((-1), uITextPanel0.getFg_color());
      assertFalse(uITextPanel0.isSelected());
      assertFalse(uITextPanel0.isNeedScrollbar());
      assertEquals(0, uITextPanel0.getType());
      assertTrue(uITextPanel0.isDirty());
      assertEquals("", uITextPanel0.getText());
      assertEquals(8947848, uITextPanel0.getSelectedColor());
      assertEquals((-1), uITextPanel0.getGradientColor());
      assertFalse(uITextPanel0.isListMode());
      assertEquals(0, uITextPanel0.getLayoutHeight());
      assertEquals((-1), uITextPanel0.getMaxHeight());
      assertEquals((-1), uITextPanel0.getWidth());
      assertEquals(0, uITextPanel0.getLayoutWidth());
      assertTrue(uITextPanel0.isFocusable());
      assertEquals((-1), uITextPanel1.getWidth());
      assertEquals((-1), uITextPanel1.getBg_color());
      assertEquals((-1), uITextPanel1.getGradientColor());
      assertFalse(uITextPanel1.isListMode());
      assertFalse(uITextPanel1.isSelected());
      assertEquals((-1), uITextPanel1.getSelectedIndex());
      assertFalse(uITextPanel1.isNeedScrollbar());
      assertEquals((-1), uITextPanel1.getMaxHeight());
      assertEquals(0, uITextPanel1.getLayoutHeight());
      assertEquals((-1), uITextPanel1.getFg_color());
      assertTrue(uITextPanel1.isDirty());
      assertEquals(8947848, uITextPanel1.getSelectedColor());
      assertEquals((-1), uITextPanel1.getGradientSelectedColor());
      assertFalse(uITextPanel1.isEnableEmoticons());
      assertTrue(uITextPanel1.isFocusable());
      assertEquals(0, uITextPanel1.getType());
      assertEquals(0, uITextPanel1.getLayoutWidth());
      assertEquals("", uITextPanel1.getText());
      assertFalse(uITextPanel1.isModal());
      assertEquals(0, uITextPanel1.getFirstVisible());
      assertNotNull(uITextPanel1);
      
      UIMenu uIMenu0 = UIUtils.easyMenu((String) null, 0, 5, 50, (UIItem) uITextPanel1, "", "B");
      assertSame(uITextPanel0, uITextPanel1);
      assertSame(uITextPanel1, uITextPanel0);
      assertEquals(0, uITextPanel0.getFirstVisible());
      assertFalse(uITextPanel0.isEnableEmoticons());
      assertFalse(uITextPanel0.isModal());
      assertEquals((-1), uITextPanel0.getGradientSelectedColor());
      assertEquals((-1), uITextPanel0.getSelectedIndex());
      assertTrue(uITextPanel0.isSelected());
      assertEquals((-1), uITextPanel0.getFg_color());
      assertFalse(uITextPanel0.isNeedScrollbar());
      assertEquals(0, uITextPanel0.getType());
      assertTrue(uITextPanel0.isDirty());
      assertEquals(11322072, uITextPanel0.getBg_color());
      assertEquals("", uITextPanel0.getText());
      assertEquals(8947848, uITextPanel0.getSelectedColor());
      assertEquals((-1), uITextPanel0.getGradientColor());
      assertFalse(uITextPanel0.isListMode());
      assertEquals(0, uITextPanel0.getLayoutHeight());
      assertEquals((-1), uITextPanel0.getMaxHeight());
      assertEquals((-1), uITextPanel0.getWidth());
      assertEquals(0, uITextPanel0.getLayoutWidth());
      assertTrue(uITextPanel0.isFocusable());
      assertEquals((-1), uITextPanel1.getWidth());
      assertEquals((-1), uITextPanel1.getGradientColor());
      assertFalse(uITextPanel1.isListMode());
      assertEquals((-1), uITextPanel1.getSelectedIndex());
      assertFalse(uITextPanel1.isNeedScrollbar());
      assertEquals((-1), uITextPanel1.getMaxHeight());
      assertEquals(0, uITextPanel1.getLayoutHeight());
      assertEquals((-1), uITextPanel1.getFg_color());
      assertTrue(uITextPanel1.isSelected());
      assertTrue(uITextPanel1.isDirty());
      assertEquals(8947848, uITextPanel1.getSelectedColor());
      assertEquals((-1), uITextPanel1.getGradientSelectedColor());
      assertFalse(uITextPanel1.isEnableEmoticons());
      assertTrue(uITextPanel1.isFocusable());
      assertEquals(0, uITextPanel1.getType());
      assertEquals(11322072, uITextPanel1.getBg_color());
      assertEquals(0, uITextPanel1.getLayoutWidth());
      assertEquals("", uITextPanel1.getText());
      assertFalse(uITextPanel1.isModal());
      assertEquals(0, uITextPanel1.getFirstVisible());
      assertEquals(50, uIMenu0.getWidth());
      assertEquals(0, uIMenu0.getType());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals(5, uIMenu0.getAbsoluteY());
      assertTrue(uIMenu0.isFocusable());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals((-1), uIMenu0.getFg_color());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertFalse(uIMenu0.isSelected());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertNotNull(uIMenu0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UIMenu uIMenu0 = UIUtils.easyMenu((String) null, 1538, 0, 0, (UIItem) null, (String) null, (String) null);
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertFalse(uIMenu0.isSelected());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals((-1), uIMenu0.getSelectedIndex());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getType());
      assertEquals(1538, uIMenu0.getAbsoluteX());
      assertEquals((-1), uIMenu0.getFg_color());
      assertNotNull(uIMenu0);
      
      UIItem uIItem0 = uIMenu0.keyPressed(1538, 3705);
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertFalse(uIMenu0.isSelected());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals((-1), uIMenu0.getSelectedIndex());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getType());
      assertEquals(1538, uIMenu0.getAbsoluteX());
      assertEquals((-1), uIMenu0.getFg_color());
      assertNull(uIItem0);
      
      uIMenu0.setGradientColor(0);
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertFalse(uIMenu0.isSelected());
      assertEquals(0, uIMenu0.getGradientColor());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals((-1), uIMenu0.getSelectedIndex());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertTrue(uIMenu0.isFocusable());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getType());
      assertEquals(1538, uIMenu0.getAbsoluteX());
      assertEquals((-1), uIMenu0.getFg_color());
      
      UIMenu uIMenu1 = UIUtils.easyMenu((String) null, 474, 65, 1625, (UIItem) null, "#]x&M$W]", (String) null);
      assertNotSame(uIMenu1, uIMenu0);
      assertEquals(0, uIMenu1.getLayoutWidth());
      assertEquals(0, uIMenu1.getType());
      assertEquals(65, uIMenu1.getAbsoluteY());
      assertEquals((-1), uIMenu1.getSelectedIndex());
      assertFalse(uIMenu1.isSelected());
      assertEquals(8947848, uIMenu1.getSelectedColor());
      assertFalse(uIMenu1.isOpenedState());
      assertEquals(474, uIMenu1.getAbsoluteX());
      assertEquals((-1), uIMenu1.getGradientSelectedColor());
      assertTrue(uIMenu1.isFocusable());
      assertEquals(0, uIMenu1.getLayoutHeight());
      assertEquals((-1), uIMenu1.getFg_color());
      assertTrue(uIMenu1.isAutoClose());
      assertEquals((-1), uIMenu1.getBg_color());
      assertEquals(1625, uIMenu1.getWidth());
      assertEquals((-1), uIMenu1.getGradientColor());
      assertNotNull(uIMenu1);
      assertFalse(uIMenu1.equals((Object)uIMenu0));
      
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uIMenu0, 0);
      assertNotSame(uIMenu0, uIMenu1);
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertFalse(uIMenu0.isSelected());
      assertEquals(0, uIMenu0.getGradientColor());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals((-1), uIMenu0.getSelectedIndex());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertTrue(uIMenu0.isFocusable());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getType());
      assertEquals(1538, uIMenu0.getAbsoluteX());
      assertEquals((-1), uIMenu0.getFg_color());
      assertEquals((-1), uIHLayout0.getWidth());
      assertFalse(uIHLayout0.isGroup());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertTrue(uIHLayout0.isFocusable());
      assertEquals(0, uIHLayout0.getType());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertFalse(uIHLayout0.isSelected());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertNotNull(uIHLayout0);
      assertFalse(uIMenu0.equals((Object)uIMenu1));
      
      UIHLayout uIHLayout1 = UIUtils.easyCenterLayout(uIMenu0, 0);
      assertNotSame(uIMenu0, uIMenu1);
      assertNotSame(uIHLayout1, uIHLayout0);
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertFalse(uIMenu0.isSelected());
      assertEquals(0, uIMenu0.getGradientColor());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals((-1), uIMenu0.getSelectedIndex());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertTrue(uIMenu0.isFocusable());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getType());
      assertEquals(1538, uIMenu0.getAbsoluteX());
      assertEquals((-1), uIMenu0.getFg_color());
      assertEquals(0, uIHLayout1.getLayoutHeight());
      assertEquals((-1), uIHLayout1.getBg_color());
      assertEquals((-1), uIHLayout1.getFg_color());
      assertEquals((-1), uIHLayout1.getWidth());
      assertEquals(0, uIHLayout1.getLayoutWidth());
      assertFalse(uIHLayout1.isSelected());
      assertTrue(uIHLayout1.isFocusable());
      assertEquals(0, uIHLayout1.getType());
      assertEquals(8947848, uIHLayout1.getSelectedColor());
      assertEquals((-1), uIHLayout1.getGradientSelectedColor());
      assertEquals((-1), uIHLayout1.getGradientColor());
      assertFalse(uIHLayout1.isGroup());
      assertNotNull(uIHLayout1);
      assertFalse(uIMenu0.equals((Object)uIMenu1));
      assertFalse(uIHLayout1.equals((Object)uIHLayout0));
      
      int int0 = UIUtils.colorize(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UIItem uIItem0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        UIUtils.easyCenterLayout((UIItem) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIHLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = UIUtils.colorize(0, 0);
      assertEquals(0, int0);
      
      String string0 = null;
      UICombobox uICombobox0 = null;
      try {
        uICombobox0 = new UICombobox((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIScreen", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 11327682;
      int int1 = 0;
      int int2 = UIUtils.medColor(11327682, 0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(5663841, int2);
      
      int int3 = 7829367;
      int int4 = 136;
      UISeparator uISeparator0 = new UISeparator(136, 5663841);
      assertEquals((-1), uISeparator0.getWidth());
      assertEquals(0, uISeparator0.getLayoutWidth());
      assertFalse(uISeparator0.isSelected());
      assertEquals(0, uISeparator0.getType());
      assertEquals(8947848, uISeparator0.getSelectedColor());
      assertEquals((-1), uISeparator0.getGradientSelectedColor());
      assertFalse(uISeparator0.isFocusable());
      assertEquals((-1), uISeparator0.getBg_color());
      assertEquals(5663841, uISeparator0.getFg_color());
      assertEquals(0, uISeparator0.getLayoutHeight());
      assertEquals((-1), uISeparator0.getGradientColor());
      assertNotNull(uISeparator0);
      
      // Undeclared exception!
      try { 
        UIUtils.easyMenu("B0OK/{`fNvm1", 5663841, 7829367, 11327682, (UIItem) uISeparator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 0;
      Image image0 = Image.createImage(0, 1227);
      assertNull(image0);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 1227;
      intArray0[2] = 0;
      int int1 = 0;
      Image image1 = Image.createImage((Image) null, 0, 30, 1227, 0, 0);
      assertNull(image1);
      
      intArray0[3] = 0;
      intArray0[4] = 1227;
      intArray0[5] = 0;
      intArray0[6] = 0;
      Image image2 = Image.createRGBImage(intArray0, 0, (-2236), true);
      assertNull(image2);
      assertArrayEquals(new int[] {0, 1227, 0, 0, 1227, 0, 0}, intArray0);
      assertEquals(7, intArray0.length);
      
      int int2 = (-1576);
      Image image3 = Image.createImage(1227, (-1576));
      assertNull(image3);
      
      // Undeclared exception!
      try { 
        UIUtils.imageResize((Image) null, (-1566), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UIGauge uIGauge0 = new UIGauge((String) null, false, 0, 824);
      assertFalse(uIGauge0.isSelected());
      assertEquals(0, uIGauge0.getMaxValue());
      assertEquals(0, uIGauge0.getLayoutHeight());
      assertEquals(8947848, uIGauge0.getSelectedColor());
      assertEquals(0, uIGauge0.getLayoutWidth());
      assertEquals((-1), uIGauge0.getWidth());
      assertNull(uIGauge0.getLabel());
      assertEquals((-1), uIGauge0.getBg_color());
      assertEquals(824, uIGauge0.getValue());
      assertEquals(10, uIGauge0.getOffset());
      assertFalse(uIGauge0.isInteractive());
      assertEquals((-1), uIGauge0.getGradientColor());
      assertFalse(uIGauge0.isFocusable());
      assertEquals((-1), uIGauge0.getGradientSelectedColor());
      assertEquals((-1), uIGauge0.getFg_color());
      assertEquals(0, uIGauge0.getType());
      assertNotNull(uIGauge0);
      
      UIMenu uIMenu0 = UIUtils.easyMenu("", 122, 2245, 2245, (UIItem) uIGauge0);
      assertEquals(0, uIGauge0.getMaxValue());
      assertEquals(0, uIGauge0.getLayoutHeight());
      assertEquals(8947848, uIGauge0.getSelectedColor());
      assertEquals(0, uIGauge0.getLayoutWidth());
      assertEquals((-1), uIGauge0.getWidth());
      assertNull(uIGauge0.getLabel());
      assertTrue(uIGauge0.isFocusable());
      assertEquals(11322072, uIGauge0.getBg_color());
      assertEquals(824, uIGauge0.getValue());
      assertEquals(10, uIGauge0.getOffset());
      assertFalse(uIGauge0.isInteractive());
      assertEquals((-1), uIGauge0.getGradientColor());
      assertEquals((-1), uIGauge0.getGradientSelectedColor());
      assertEquals((-1), uIGauge0.getFg_color());
      assertEquals(0, uIGauge0.getType());
      assertTrue(uIGauge0.isSelected());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals((-1), uIMenu0.getFg_color());
      assertTrue(uIMenu0.isFocusable());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals(2245, uIMenu0.getWidth());
      assertEquals(2245, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getType());
      assertEquals(122, uIMenu0.getAbsoluteX());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertNotNull(uIMenu0);
      
      int[] intArray0 = new int[6];
      intArray0[0] = 824;
      intArray0[1] = 0;
      intArray0[2] = 122;
      intArray0[3] = 2245;
      intArray0[4] = 0;
      intArray0[5] = 0;
      UIUtils.rescalaArray(intArray0, intArray0, 0, 824, 0, 2245, 0, (-2505), 0);
      assertArrayEquals(new int[] {824, 0, 122, 2245, 0, 0}, intArray0);
      assertEquals(6, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UISeparator uISeparator0 = new UISeparator((-1642));
      assertFalse(uISeparator0.isSelected());
      assertEquals((-1), uISeparator0.getGradientSelectedColor());
      assertEquals((-1), uISeparator0.getBg_color());
      assertFalse(uISeparator0.isFocusable());
      assertEquals(0, uISeparator0.getType());
      assertEquals((-1), uISeparator0.getWidth());
      assertEquals((-1), uISeparator0.getGradientColor());
      assertEquals(0, uISeparator0.getLayoutHeight());
      assertEquals((-1), uISeparator0.getFg_color());
      assertEquals(0, uISeparator0.getLayoutWidth());
      assertEquals(8947848, uISeparator0.getSelectedColor());
      assertNotNull(uISeparator0);
      
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uISeparator0, (-1642));
      assertFalse(uISeparator0.isSelected());
      assertEquals((-1), uISeparator0.getGradientSelectedColor());
      assertEquals((-1), uISeparator0.getBg_color());
      assertFalse(uISeparator0.isFocusable());
      assertEquals(0, uISeparator0.getType());
      assertEquals((-1), uISeparator0.getWidth());
      assertEquals((-1), uISeparator0.getGradientColor());
      assertEquals((-1642), uISeparator0.getLayoutWidth());
      assertEquals(0, uISeparator0.getLayoutHeight());
      assertEquals((-1), uISeparator0.getFg_color());
      assertEquals(8947848, uISeparator0.getSelectedColor());
      assertFalse(uIHLayout0.isSelected());
      assertEquals(0, uIHLayout0.getType());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertFalse(uIHLayout0.isGroup());
      assertFalse(uIHLayout0.isFocusable());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertNotNull(uIHLayout0);
      
      UIMenu uIMenu0 = UIUtils.easyMenu((String) null, (-1642), (-1063), (-1202), (UIItem) uISeparator0);
      assertEquals((-1), uISeparator0.getGradientSelectedColor());
      assertEquals(0, uISeparator0.getType());
      assertEquals((-1), uISeparator0.getWidth());
      assertEquals((-1), uISeparator0.getGradientColor());
      assertTrue(uISeparator0.isFocusable());
      assertEquals((-1642), uISeparator0.getLayoutWidth());
      assertEquals(0, uISeparator0.getLayoutHeight());
      assertEquals((-1), uISeparator0.getFg_color());
      assertTrue(uISeparator0.isSelected());
      assertEquals(11322072, uISeparator0.getBg_color());
      assertEquals(8947848, uISeparator0.getSelectedColor());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(0, uIMenu0.getType());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getFg_color());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertFalse(uIMenu0.isSelected());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertFalse(uIMenu0.isOpenedState());
      assertNotNull(uIMenu0);
      
      uISeparator0.width = 0;
      assertEquals((-1), uISeparator0.getGradientSelectedColor());
      assertEquals(0, uISeparator0.getType());
      assertEquals((-1), uISeparator0.getGradientColor());
      assertTrue(uISeparator0.isFocusable());
      assertEquals(0, uISeparator0.getWidth());
      assertEquals((-1642), uISeparator0.getLayoutWidth());
      assertEquals(0, uISeparator0.getLayoutHeight());
      assertEquals((-1), uISeparator0.getFg_color());
      assertTrue(uISeparator0.isSelected());
      assertEquals(11322072, uISeparator0.getBg_color());
      assertEquals(8947848, uISeparator0.getSelectedColor());
      
      UIItem uIItem0 = uIMenu0.remove((-601));
      assertEquals((-1), uISeparator0.getGradientSelectedColor());
      assertEquals(0, uISeparator0.getType());
      assertEquals((-1), uISeparator0.getGradientColor());
      assertTrue(uISeparator0.isFocusable());
      assertEquals(0, uISeparator0.getWidth());
      assertEquals((-1642), uISeparator0.getLayoutWidth());
      assertEquals(0, uISeparator0.getLayoutHeight());
      assertEquals((-1), uISeparator0.getFg_color());
      assertTrue(uISeparator0.isSelected());
      assertEquals(11322072, uISeparator0.getBg_color());
      assertEquals(8947848, uISeparator0.getSelectedColor());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(0, uIMenu0.getType());
      assertTrue(uIMenu0.isAutoClose());
      assertEquals((-1), uIMenu0.getFg_color());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertFalse(uIMenu0.isSelected());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertFalse(uIMenu0.isOpenedState());
      assertNull(uIItem0);
      
      // Undeclared exception!
      try { 
        UIUtils.imageResize((Image) null, (-1063), (-1063));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 724;
      int int1 = UIUtils.colorize(724, 101);
      assertFalse(int1 == int0);
      assertEquals(16908799, int1);
      
      String string0 = "{W#5\"/]5C";
      int int2 = 1925;
      UICombobox uICombobox0 = null;
      try {
        uICombobox0 = new UICombobox("&lt;", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIScreen", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 117;
      int int1 = (-741);
      int int2 = UIUtils.colorize(117, (-741));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals((-749), int2);
      
      UIUtils uIUtils0 = new UIUtils();
      assertNotNull(uIUtils0);
      
      String string0 = "";
      Image image0 = Image.createImage("");
      assertNull(image0);
      
      // Undeclared exception!
      try { 
        UIUtils.imageResize((Image) null, (-749), (-3293));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UIAccordion uIAccordion0 = new UIAccordion();
      assertEquals((-1), uIAccordion0.getLabelGradientColor());
      assertTrue(uIAccordion0.isFocusable());
      assertEquals(0, uIAccordion0.getType());
      assertEquals((-1), uIAccordion0.getGradientSelectedColor());
      assertEquals((-1), uIAccordion0.getFg_color());
      assertEquals(11184810, uIAccordion0.getLabelColor());
      assertEquals((-1), uIAccordion0.getGradientColor());
      assertEquals((-1), uIAccordion0.getWidth());
      assertEquals((-1), uIAccordion0.getBg_color());
      assertFalse(uIAccordion0.isListMode());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isSelected());
      assertFalse(uIAccordion0.isModal());
      assertEquals(2, uIAccordion0.getSepSize());
      assertEquals(0, uIAccordion0.getFirstVisible());
      assertTrue(uIAccordion0.isDirty());
      assertEquals(8947848, uIAccordion0.getSelectedColor());
      assertEquals(0, uIAccordion0.getLayoutWidth());
      assertEquals(12303291, uIAccordion0.getSepColor());
      assertFalse(uIAccordion0.isOneOpen());
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertEquals(0, uIAccordion0.getLayoutHeight());
      assertNotNull(uIAccordion0);
      
      UIAccordion uIAccordion1 = (UIAccordion)uIAccordion0.getSelectedItem();
      assertSame(uIAccordion0, uIAccordion1);
      assertSame(uIAccordion1, uIAccordion0);
      assertEquals((-1), uIAccordion0.getLabelGradientColor());
      assertTrue(uIAccordion0.isFocusable());
      assertEquals(0, uIAccordion0.getType());
      assertEquals((-1), uIAccordion0.getGradientSelectedColor());
      assertEquals((-1), uIAccordion0.getFg_color());
      assertEquals(11184810, uIAccordion0.getLabelColor());
      assertEquals((-1), uIAccordion0.getGradientColor());
      assertEquals((-1), uIAccordion0.getWidth());
      assertEquals((-1), uIAccordion0.getBg_color());
      assertFalse(uIAccordion0.isListMode());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isSelected());
      assertFalse(uIAccordion0.isModal());
      assertEquals(2, uIAccordion0.getSepSize());
      assertEquals(0, uIAccordion0.getFirstVisible());
      assertTrue(uIAccordion0.isDirty());
      assertEquals(8947848, uIAccordion0.getSelectedColor());
      assertEquals(0, uIAccordion0.getLayoutWidth());
      assertEquals(12303291, uIAccordion0.getSepColor());
      assertFalse(uIAccordion0.isOneOpen());
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertEquals(0, uIAccordion0.getLayoutHeight());
      assertFalse(uIAccordion1.isModal());
      assertEquals(0, uIAccordion1.getFirstVisible());
      assertEquals((-1), uIAccordion1.getWidth());
      assertEquals((-1), uIAccordion1.getFg_color());
      assertEquals((-1), uIAccordion1.getMaxHeight());
      assertEquals((-1), uIAccordion1.getBg_color());
      assertEquals(0, uIAccordion1.getType());
      assertEquals(8947848, uIAccordion1.getSelectedColor());
      assertEquals(0, uIAccordion1.getLayoutHeight());
      assertFalse(uIAccordion1.isSelected());
      assertEquals(2, uIAccordion1.getSepSize());
      assertTrue(uIAccordion1.isDirty());
      assertFalse(uIAccordion1.isListMode());
      assertEquals((-1), uIAccordion1.getSelectedIndex());
      assertEquals((-1), uIAccordion1.getGradientSelectedColor());
      assertEquals(0, uIAccordion1.getLayoutWidth());
      assertFalse(uIAccordion1.isOneOpen());
      assertEquals(11184810, uIAccordion1.getLabelColor());
      assertEquals(12303291, uIAccordion1.getSepColor());
      assertTrue(uIAccordion1.isFocusable());
      assertEquals((-1), uIAccordion1.getLabelGradientColor());
      assertEquals((-1), uIAccordion1.getGradientColor());
      assertNotNull(uIAccordion1);
      
      UIMenu uIMenu0 = UIUtils.easyMenu("", 0, 0, (-811), (UIItem) uIAccordion1, "", "&}uH@");
      assertSame(uIAccordion0, uIAccordion1);
      assertSame(uIAccordion1, uIAccordion0);
      assertEquals((-1), uIAccordion0.getLabelGradientColor());
      assertTrue(uIAccordion0.isFocusable());
      assertEquals(0, uIAccordion0.getType());
      assertEquals((-1), uIAccordion0.getGradientSelectedColor());
      assertEquals((-1), uIAccordion0.getFg_color());
      assertEquals(11184810, uIAccordion0.getLabelColor());
      assertEquals((-1), uIAccordion0.getGradientColor());
      assertEquals((-1), uIAccordion0.getWidth());
      assertEquals((-1), uIAccordion0.getBg_color());
      assertTrue(uIAccordion0.isSelected());
      assertFalse(uIAccordion0.isListMode());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isModal());
      assertEquals(2, uIAccordion0.getSepSize());
      assertEquals(0, uIAccordion0.getFirstVisible());
      assertTrue(uIAccordion0.isDirty());
      assertEquals(8947848, uIAccordion0.getSelectedColor());
      assertEquals(0, uIAccordion0.getLayoutWidth());
      assertEquals(12303291, uIAccordion0.getSepColor());
      assertFalse(uIAccordion0.isOneOpen());
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertEquals(0, uIAccordion0.getLayoutHeight());
      assertFalse(uIAccordion1.isModal());
      assertEquals(0, uIAccordion1.getFirstVisible());
      assertEquals((-1), uIAccordion1.getWidth());
      assertEquals((-1), uIAccordion1.getFg_color());
      assertEquals((-1), uIAccordion1.getMaxHeight());
      assertEquals((-1), uIAccordion1.getBg_color());
      assertEquals(0, uIAccordion1.getType());
      assertEquals(8947848, uIAccordion1.getSelectedColor());
      assertEquals(0, uIAccordion1.getLayoutHeight());
      assertEquals(2, uIAccordion1.getSepSize());
      assertTrue(uIAccordion1.isSelected());
      assertTrue(uIAccordion1.isDirty());
      assertFalse(uIAccordion1.isListMode());
      assertEquals((-1), uIAccordion1.getSelectedIndex());
      assertEquals((-1), uIAccordion1.getGradientSelectedColor());
      assertEquals(0, uIAccordion1.getLayoutWidth());
      assertFalse(uIAccordion1.isOneOpen());
      assertEquals(11184810, uIAccordion1.getLabelColor());
      assertEquals(12303291, uIAccordion1.getSepColor());
      assertTrue(uIAccordion1.isFocusable());
      assertEquals((-1), uIAccordion1.getLabelGradientColor());
      assertEquals((-1), uIAccordion1.getGradientColor());
      assertEquals(0, uIMenu0.getLayoutWidth());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getType());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getFg_color());
      assertTrue(uIMenu0.isAutoClose());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals((-1), uIMenu0.getWidth());
      assertNotNull(uIMenu0);
      
      UIUtils uIUtils0 = new UIUtils();
      assertNotNull(uIUtils0);
      
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uIMenu0, (-811));
      assertSame(uIAccordion0, uIAccordion1);
      assertSame(uIAccordion1, uIAccordion0);
      assertEquals((-1), uIAccordion0.getLabelGradientColor());
      assertTrue(uIAccordion0.isFocusable());
      assertEquals(0, uIAccordion0.getType());
      assertEquals((-1), uIAccordion0.getGradientSelectedColor());
      assertEquals((-1), uIAccordion0.getFg_color());
      assertEquals(11184810, uIAccordion0.getLabelColor());
      assertEquals((-1), uIAccordion0.getGradientColor());
      assertEquals((-1), uIAccordion0.getWidth());
      assertEquals((-1), uIAccordion0.getBg_color());
      assertTrue(uIAccordion0.isSelected());
      assertFalse(uIAccordion0.isListMode());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isModal());
      assertEquals(2, uIAccordion0.getSepSize());
      assertEquals(0, uIAccordion0.getFirstVisible());
      assertTrue(uIAccordion0.isDirty());
      assertEquals(8947848, uIAccordion0.getSelectedColor());
      assertEquals(0, uIAccordion0.getLayoutWidth());
      assertEquals(12303291, uIAccordion0.getSepColor());
      assertFalse(uIAccordion0.isOneOpen());
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertEquals(0, uIAccordion0.getLayoutHeight());
      assertFalse(uIAccordion1.isModal());
      assertEquals(0, uIAccordion1.getFirstVisible());
      assertEquals((-1), uIAccordion1.getWidth());
      assertEquals((-1), uIAccordion1.getFg_color());
      assertEquals((-1), uIAccordion1.getMaxHeight());
      assertEquals((-1), uIAccordion1.getBg_color());
      assertEquals(0, uIAccordion1.getType());
      assertEquals(8947848, uIAccordion1.getSelectedColor());
      assertEquals(0, uIAccordion1.getLayoutHeight());
      assertEquals(2, uIAccordion1.getSepSize());
      assertTrue(uIAccordion1.isSelected());
      assertTrue(uIAccordion1.isDirty());
      assertFalse(uIAccordion1.isListMode());
      assertEquals((-1), uIAccordion1.getSelectedIndex());
      assertEquals((-1), uIAccordion1.getGradientSelectedColor());
      assertEquals(0, uIAccordion1.getLayoutWidth());
      assertFalse(uIAccordion1.isOneOpen());
      assertEquals(11184810, uIAccordion1.getLabelColor());
      assertEquals(12303291, uIAccordion1.getSepColor());
      assertTrue(uIAccordion1.isFocusable());
      assertEquals((-1), uIAccordion1.getLabelGradientColor());
      assertEquals((-1), uIAccordion1.getGradientColor());
      assertEquals(0, uIMenu0.getSelectedIndex());
      assertEquals(0, uIMenu0.getAbsoluteX());
      assertEquals(0, uIMenu0.getLayoutHeight());
      assertTrue(uIMenu0.isFocusable());
      assertEquals((-1), uIMenu0.getBg_color());
      assertEquals(0, uIMenu0.getType());
      assertEquals(8947848, uIMenu0.getSelectedColor());
      assertEquals((-1), uIMenu0.getGradientSelectedColor());
      assertEquals(0, uIMenu0.getAbsoluteY());
      assertFalse(uIMenu0.isSelected());
      assertEquals((-1), uIMenu0.getFg_color());
      assertTrue(uIMenu0.isAutoClose());
      assertFalse(uIMenu0.isOpenedState());
      assertEquals((-811), uIMenu0.getLayoutWidth());
      assertEquals((-1), uIMenu0.getGradientColor());
      assertEquals((-1), uIMenu0.getWidth());
      assertEquals((-1), uIHLayout0.getWidth());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertTrue(uIHLayout0.isFocusable());
      assertEquals(0, uIHLayout0.getType());
      assertFalse(uIHLayout0.isSelected());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertFalse(uIHLayout0.isGroup());
      assertNotNull(uIHLayout0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = UIUtils.medColor(100, 100);
      assertEquals(100, int0);
      
      UIAccordion uIAccordion0 = new UIAccordion();
      assertEquals((-1), uIAccordion0.getGradientSelectedColor());
      assertEquals((-1), uIAccordion0.getFg_color());
      assertTrue(uIAccordion0.isFocusable());
      assertEquals(0, uIAccordion0.getType());
      assertFalse(uIAccordion0.isOneOpen());
      assertEquals((-1), uIAccordion0.getMaxHeight());
      assertFalse(uIAccordion0.isListMode());
      assertEquals((-1), uIAccordion0.getSelectedIndex());
      assertFalse(uIAccordion0.isSelected());
      assertEquals(2, uIAccordion0.getSepSize());
      assertEquals(0, uIAccordion0.getLayoutHeight());
      assertTrue(uIAccordion0.isDirty());
      assertEquals(8947848, uIAccordion0.getSelectedColor());
      assertEquals(11184810, uIAccordion0.getLabelColor());
      assertEquals(0, uIAccordion0.getLayoutWidth());
      assertEquals(12303291, uIAccordion0.getSepColor());
      assertEquals((-1), uIAccordion0.getWidth());
      assertEquals((-1), uIAccordion0.getBg_color());
      assertFalse(uIAccordion0.isModal());
      assertEquals(0, uIAccordion0.getFirstVisible());
      assertEquals((-1), uIAccordion0.getLabelGradientColor());
      assertEquals((-1), uIAccordion0.getGradientColor());
      assertNotNull(uIAccordion0);
      
      Image image0 = uIAccordion0.closeImage;
      assertNull(image0);
      
      UILabel uILabel0 = new UILabel((Image) null);
      assertFalse(uILabel0.isSelected());
      assertFalse(uILabel0.isFocusable());
      assertEquals((-1), uILabel0.getBg_color());
      assertEquals(0, uILabel0.getLayoutWidth());
      assertEquals(8947848, uILabel0.getSelectedColor());
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      assertEquals((-1), uILabel0.getGradientColor());
      assertEquals((-1), uILabel0.getFg_color());
      assertEquals(20, uILabel0.getAnchorPoint());
      assertEquals("", uILabel0.getText());
      assertFalse(uILabel0.isWrappable());
      assertEquals(0, uILabel0.getType());
      assertEquals((-1), uILabel0.getGradientSelectedColor());
      assertFalse(uILabel0.isFlip());
      assertEquals((-1), uILabel0.getWidth());
      assertEquals(0, uILabel0.getLayoutHeight());
      assertNotNull(uILabel0);
      
      UIHLayout uIHLayout0 = UIUtils.easyCenterLayout(uILabel0, 100);
      assertFalse(uILabel0.isSelected());
      assertFalse(uILabel0.isFocusable());
      assertEquals((-1), uILabel0.getBg_color());
      assertEquals(8947848, uILabel0.getSelectedColor());
      assertEquals((-1), uILabel0.getImgAnchorPoint());
      assertEquals((-1), uILabel0.getGradientColor());
      assertEquals((-1), uILabel0.getFg_color());
      assertEquals("", uILabel0.getText());
      assertFalse(uILabel0.isWrappable());
      assertEquals(0, uILabel0.getType());
      assertEquals((-1), uILabel0.getGradientSelectedColor());
      assertFalse(uILabel0.isFlip());
      assertEquals(100, uILabel0.getLayoutWidth());
      assertEquals(1, uILabel0.getAnchorPoint());
      assertEquals((-1), uILabel0.getWidth());
      assertEquals(0, uILabel0.getLayoutHeight());
      assertEquals(0, uIHLayout0.getLayoutWidth());
      assertFalse(uIHLayout0.isSelected());
      assertFalse(uIHLayout0.isFocusable());
      assertEquals(8947848, uIHLayout0.getSelectedColor());
      assertFalse(uIHLayout0.isGroup());
      assertEquals((-1), uIHLayout0.getGradientSelectedColor());
      assertEquals((-1), uIHLayout0.getGradientColor());
      assertEquals((-1), uIHLayout0.getBg_color());
      assertEquals(0, uIHLayout0.getLayoutHeight());
      assertEquals((-1), uIHLayout0.getFg_color());
      assertEquals(0, uIHLayout0.getType());
      assertEquals((-1), uIHLayout0.getWidth());
      assertNotNull(uIHLayout0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = UIUtils.colorize((-1550), 1595);
      assertEquals(16800193, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[0];
      UIUtils.rescalaArray(intArray0, intArray0, (-1623), (-1623), 1338, (-1623), 1475, (-316), 1475);
      assertArrayEquals(new int[] {}, intArray0);
      assertEquals(0, intArray0.length);
      
      UIUtils uIUtils0 = new UIUtils();
      assertNotNull(uIUtils0);
      
      UICheckbox uICheckbox0 = new UICheckbox((String) null);
      assertEquals((-1), uICheckbox0.getWidth());
      assertEquals((-1), uICheckbox0.getGradientColor());
      assertEquals(8947848, uICheckbox0.getSelectedColor());
      assertFalse(uICheckbox0.isWrappable());
      assertFalse(uICheckbox0.isSelected());
      assertNull(uICheckbox0.getText());
      assertEquals(20, uICheckbox0.getAnchorPoint());
      assertEquals(0, uICheckbox0.getType());
      assertEquals((-1), uICheckbox0.getBg_color());
      assertEquals((-1), uICheckbox0.getFg_color());
      assertEquals((-1), uICheckbox0.getImgAnchorPoint());
      assertTrue(uICheckbox0.isFocusable());
      assertFalse(uICheckbox0.isFlip());
      assertEquals((-1), uICheckbox0.getGradientSelectedColor());
      assertFalse(uICheckbox0.isChecked());
      assertEquals(0, uICheckbox0.getLayoutWidth());
      assertEquals(0, uICheckbox0.getLayoutHeight());
      assertNotNull(uICheckbox0);
      
      // Undeclared exception!
      try { 
        UIUtils.easyMenu("1ji4\"Rp&D&f,d0", 1475, (-316), (-1623), (UIItem) uICheckbox0, "1ji4\"Rp&D&f,d0", "Q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 2446;
      intArray0[1] = 12;
      intArray0[2] = (-3115);
      intArray0[3] = 113;
      intArray0[4] = 0;
      UIUtils.rescalaArray(intArray0, intArray0, 12, 2446, (-1041), 2446, (-64), 2500, 2500);
      assertEquals(5, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UIUtils uIUtils0 = new UIUtils();
      UIHLayout uIHLayout0 = new UIHLayout(105);
      // Undeclared exception!
      try { 
        UIUtils.easyMenu("(!BOq", 105, 105, 105, (UIItem) uIHLayout0, "404", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UIUtils uIUtils0 = new UIUtils();
      UISeparator uISeparator0 = new UISeparator(1161);
      UIMenu uIMenu0 = UIUtils.easyMenu("", 112, 112, 112, (UIItem) uISeparator0, "", "");
      assertTrue(uISeparator0.isFocusable());
      assertEquals(112, uIMenu0.getWidth());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        UIUtils.rescalaArray(intArray0, intArray0, 227, 1101, 1211, 1101, 227, 14354212, 3259);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UIUtils.rescalaArray((int[]) null, (int[]) null, 0, 2056, (-700), 0, 2056, 846, 0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UIUtils.colorize(100, 98);
      UIUtils uIUtils0 = new UIUtils();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UIUtils uIUtils0 = new UIUtils();
      UIUtils.easyMenu("", 2500, 2500, 2500, (UIItem) null);
      UIHLayout uIHLayout0 = new UIHLayout(0);
      UIUtils.easyCenterLayout(uIHLayout0, 0);
      UITextPanel uITextPanel0 = new UITextPanel();
      uITextPanel0.setText("SELECT");
      UIItem uIItem0 = uITextPanel0.getSelectedItem();
      UIUtils.easyCenterLayout(uIItem0, 0);
      // Undeclared exception!
      try { 
        UIUtils.imageResize((Image) null, 2500, 2500);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 26;
      // Undeclared exception!
      try { 
        UIUtils.rescalaArray(intArray0, intArray0, 0, 26, 26, 26, 0, 4, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("it.yup.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UIUtils.medColor((-1399), (-3545));
      int[] intArray0 = new int[23];
      intArray0[1] = (-1399);
      intArray0[2] = (-1399);
      UIUtils.rescalaArray(intArray0, intArray0, 0, 16774744, (-18), 0, (-1399), (-3180), 35);
      UIUtils.rescalaArray(intArray0, intArray0, 35, 0, (-1399), 35, (-3), (-3545), (-1399));
      UIUtils uIUtils0 = new UIUtils();
      Image[] imageArray0 = new Image[7];
      Image image0 = Image.createImage(0, 1862);
      assertNull(image0);
  }
}
