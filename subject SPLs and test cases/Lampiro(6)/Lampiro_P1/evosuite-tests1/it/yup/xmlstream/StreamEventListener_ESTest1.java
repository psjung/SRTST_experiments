/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 02:06:06 KST 2018
 */

package it.yup.xmlstream;

import static org.junit.Assert.assertFalse;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.fail;

import java.util.Vector;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import static org.evosuite.runtime.EvoAssertions.*;
@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class StreamEventListener_ESTest1 extends StreamEventListener_ESTest_scaffolding1 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      Vector<String> vector0 = new Vector<String>();
      socketStream0.gotStreamEvent("", vector0);
      assertFalse(vector0.contains(""));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      // Undeclared exception!
      try { 
        socketStream0.gotStreamEvent((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.BasicXmlStream", e);
      }
  }
}
