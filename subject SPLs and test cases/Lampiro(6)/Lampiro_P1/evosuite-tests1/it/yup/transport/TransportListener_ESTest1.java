/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 00:47:01 KST 2018
 */

package it.yup.transport;

import static org.junit.Assert.assertEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import it.yup.xmlstream.BasicXmlStream;
import it.yup.xmlstream.EventQuery;
import it.yup.xmlstream.SocketStream;
import static org.evosuite.runtime.EvoAssertions.*;
@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class TransportListener_ESTest1 extends TransportListener_ESTest_scaffolding1 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      SocketChannel socketChannel0 = new SocketChannel("", socketStream0);
      socketStream0.connectionFailed(socketChannel0);
      assertEquals(300000L, socketChannel0.KEEP_ALIVE);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      socketStream0.initialize("", "");
      SocketChannel socketChannel0 = new SocketChannel((String) null, socketStream0);
      socketStream0.connectionEstablished(socketChannel0);
      assertEquals(300000L, socketChannel0.KEEP_ALIVE);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      SocketChannel socketChannel0 = new SocketChannel("", socketStream0);
      socketChannel0.listener.connectionLost(socketChannel0);
      assertEquals(300000L, socketChannel0.KEEP_ALIVE);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      SocketChannel socketChannel0 = new SocketChannel("", socketStream0);
      String[] stringArray0 = new String[7];
      EventQuery eventQuery0 = new EventQuery((String) null, stringArray0, stringArray0);
      BasicXmlStream.addEventListener(eventQuery0, "");
      // Undeclared exception!
      try { 
        socketStream0.connectionFailed(socketChannel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.BasicXmlStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      SocketChannel socketChannel0 = new SocketChannel("", socketStream0);
      String[] stringArray0 = new String[1];
      EventQuery eventQuery0 = new EventQuery("", stringArray0, stringArray0);
      Object object0 = new Object();
      BasicXmlStream.addOnetimeEventListener(eventQuery0, object0);
      socketStream0.connectionFailed(socketChannel0);
      assertEquals(0, BaseChannel.bytes_sent);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      SocketChannel socketChannel0 = new SocketChannel("", socketStream0);
      // Undeclared exception!
      try { 
        socketStream0.connectionEstablished(socketChannel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.SocketStream", e);
      }
  }
}
