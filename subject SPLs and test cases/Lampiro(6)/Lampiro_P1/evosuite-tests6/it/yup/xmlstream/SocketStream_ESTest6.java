/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 15:49:46 KST 2018
 */

package it.yup.xmlstream;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.fail;

import java.util.Vector;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import it.yup.transport.BaseChannel;
import it.yup.transport.SocketChannel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class SocketStream_ESTest6 extends SocketStream_ESTest_scaffolding6 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      it.yup.xml.Element element0 = new it.yup.xml.Element("", "");
      // Undeclared exception!
      try { 
        socketStream0.send(element0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.SocketStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      socketStream0.sendQueue = null;
      // Undeclared exception!
      try { 
        socketStream0.tryToSend();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.SocketStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      // Undeclared exception!
      try { 
        socketStream0.restart();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.SocketStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      SocketChannel socketChannel0 = new SocketChannel("", socketStream0);
      BasicXmlStream.addEventListener((EventQuery) null, (Object) null);
      // Undeclared exception!
      try { 
        socketStream0.connectionFailed(socketChannel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.BasicXmlStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      SocketChannel socketChannel0 = new SocketChannel("", socketStream0);
      socketStream0.connectionLost(socketChannel0);
      assertEquals(0, BaseChannel.bytes_sent);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      socketStream0.tryToSend();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      Vector<Integer> vector0 = new Vector<Integer>();
      socketStream0.sendQueue = vector0;
      Integer integer0 = new Integer(0);
      vector0.add(integer0);
      // Undeclared exception!
      try { 
        socketStream0.tryToSend();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to it.yup.xml.Element
         //
         verifyException("it.yup.xmlstream.SocketStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      SocketChannel socketChannel0 = new SocketChannel("", socketStream0);
      socketStream0.connectionFailed(socketChannel0);
      assertEquals(0, BaseChannel.bytes_sent);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      SocketChannel socketChannel0 = new SocketChannel("", socketStream0);
      // Undeclared exception!
      try { 
        socketStream0.connectionEstablished(socketChannel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.SocketStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      socketStream0.initialize("", "");
      SocketChannel socketChannel0 = new SocketChannel("", socketStream0);
      socketStream0.connectionEstablished(socketChannel0);
      assertFalse(socketChannel0.isOpen());
  }
}
