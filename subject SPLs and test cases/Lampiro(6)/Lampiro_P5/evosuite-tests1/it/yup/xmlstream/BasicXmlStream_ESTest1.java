/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 01:54:36 KST 2018
 */

package it.yup.xmlstream;

import static org.evosuite.shaded.org.mockito.Mockito.doReturn;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.shaded.org.mockito.Mockito.mock;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.Enumeration;
import java.util.Vector;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

import it.yup.transport.SocketChannel;
import static org.evosuite.runtime.EvoAssertions.*;
@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class BasicXmlStream_ESTest1 extends BasicXmlStream_ESTest_scaffolding1 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      it.yup.xml.Element element0 = new it.yup.xml.Element("", "");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      EventQuery eventQuery0 = new EventQuery("", stringArray0, stringArray0);
      boolean boolean0 = socketStream0.areMatching(element0, eventQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      socketStream0.initialize((String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      it.yup.xml.Element element0 = new it.yup.xml.Element("", "");
      socketStream0.sendQueue = null;
      // Undeclared exception!
      try { 
        socketStream0.send(element0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.BasicXmlStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        BasicXmlStream.removeEventListener((EventQueryRegistration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.BasicXmlStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      String[] stringArray0 = new String[2];
      EventQuery eventQuery0 = new EventQuery((String) null, stringArray0, stringArray0);
      String[][] stringArray1 = new String[3][2];
      it.yup.xml.Element element0 = new it.yup.xml.Element("", "", eventQuery0.tagAttrValues, stringArray1);
      BasicXmlStream.addOnetimeEventListener(eventQuery0, element0);
      // Undeclared exception!
      try { 
        socketStream0.nextInitializer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.BasicXmlStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      SASLAuthenticator sASLAuthenticator0 = new SASLAuthenticator();
      // Undeclared exception!
      try { 
        socketStream0.gotStreamEvent((String) null, sASLAuthenticator0.stream);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.BasicXmlStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      // Undeclared exception!
      try { 
        socketStream0.dispatchEvent((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.BasicXmlStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      it.yup.xml.Element[] elementArray0 = new it.yup.xml.Element[2];
      String[][] stringArray0 = new String[4][2];
      it.yup.xml.Element element0 = new it.yup.xml.Element("", "", elementArray0, stringArray0);
      EventQuery eventQuery0 = new EventQuery("", stringArray0[2], stringArray0[2]);
      BasicXmlStream.addOnetimeEventListener(eventQuery0, element0);
      // Undeclared exception!
      try { 
        socketStream0.dispatchEvent("", "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // it.yup.xml.Element cannot be cast to it.yup.xmlstream.StreamEventListener
         //
         verifyException("it.yup.xmlstream.BasicXmlStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      SocketChannel socketChannel0 = new SocketChannel("", socketStream0);
      // Undeclared exception!
      try { 
        socketStream0.connectionEstablished(socketChannel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.SocketStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      it.yup.xml.Element element0 = new it.yup.xml.Element("", (String) null);
      element0.name = "p";
      socketStream0.promotePacket(element0);
      assertEquals(0L, element0.queueTime);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      it.yup.xml.Element[] elementArray0 = new it.yup.xml.Element[2];
      String[][] stringArray0 = new String[4][2];
      it.yup.xml.Element element0 = new it.yup.xml.Element("", "", elementArray0, stringArray0);
      EventQuery eventQuery0 = new EventQuery("", stringArray0[1], stringArray0[1]);
      // Undeclared exception!
      try { 
        socketStream0.areMatching(element0, eventQuery0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xml.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      it.yup.xml.Element element0 = new it.yup.xml.Element("", "");
      socketStream0.promotePacket(element0);
      assertEquals(0, element0.maxWait);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SocketStream socketStream0 = new SocketStream();
      Vector vector0 = socketStream0.getPacketsToSend(false);
      assertTrue(vector0.isEmpty());
  }
}
