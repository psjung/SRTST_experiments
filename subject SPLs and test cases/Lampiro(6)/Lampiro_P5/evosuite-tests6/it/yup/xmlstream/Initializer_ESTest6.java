/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 15:42:08 KST 2018
 */

package it.yup.xmlstream;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.fail;

import java.util.Hashtable;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class Initializer_ESTest6 extends Initializer_ESTest_scaffolding6 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SASLAuthenticator sASLAuthenticator0 = new SASLAuthenticator();
      Hashtable<String, Integer> hashtable0 = new Hashtable<String, Integer>();
      Integer integer0 = new Integer(0);
      hashtable0.put("Rx8", integer0);
      sASLAuthenticator0.namespace = "Rx8";
      sASLAuthenticator0.matchFeatures(hashtable0);
      assertFalse(sASLAuthenticator0.optional);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SASLAuthenticator sASLAuthenticator0 = new SASLAuthenticator();
      // Undeclared exception!
      try { 
        sASLAuthenticator0.matchFeatures((Hashtable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.Initializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AccountRegistration accountRegistration0 = new AccountRegistration();
      Hashtable<Integer, Object> hashtable0 = new Hashtable<Integer, Object>();
      accountRegistration0.matchFeatures(hashtable0);
      assertFalse(accountRegistration0.optional);
  }
}
