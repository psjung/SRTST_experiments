/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 01 12:10:56 KST 2018
 */

package it.yup.xmlstream;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class BasicXmlStream_ESTest2 extends BasicXmlStream_ESTest_scaffolding2 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        BasicXmlStream.removeEventListener((EventQueryRegistration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.yup.xmlstream.BasicXmlStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BasicXmlStream.ListenerRegistration basicXmlStream_ListenerRegistration0 = new BasicXmlStream.ListenerRegistration((EventQuery) null, (Object) null, true);
      assertTrue(basicXmlStream_ListenerRegistration0.oneTime);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[6];
      EventQuery eventQuery0 = new EventQuery("", stringArray0, stringArray0);
      Object object0 = new Object();
      EventQueryRegistration eventQueryRegistration0 = BasicXmlStream.addOnetimeEventListener(eventQuery0, object0);
      BasicXmlStream.removeEventListener(eventQueryRegistration0);
  }
}
