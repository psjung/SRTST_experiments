/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 00:37:19 KST 2017
 */

package com.sleepycat.je.latch;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sleepycat.je.latch.Java5SharedLatchImpl;
import com.sleepycat.je.latch.LatchException;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Java5SharedLatchImpl_ESTest2 extends Java5SharedLatchImpl_ESTest_scaffolding2 {

  @Test
  public void test01()  throws Throwable  {
      Java5SharedLatchImpl java5SharedLatchImpl0 = new Java5SharedLatchImpl();
      ReentrantReadWriteLock.ReadLock reentrantReadWriteLock_ReadLock0 = java5SharedLatchImpl0.readLock();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      reentrantReadWriteLock_ReadLock0.tryLock((-907L), timeUnit0);
      java5SharedLatchImpl0.release();
  }

  @Test
  public void test02()  throws Throwable  {
      Java5SharedLatchImpl java5SharedLatchImpl0 = new Java5SharedLatchImpl();
      java5SharedLatchImpl0.release();
  }

  @Test
  public void test04()  throws Throwable  {
      Java5SharedLatchImpl java5SharedLatchImpl0 = new Java5SharedLatchImpl();
      java5SharedLatchImpl0.acquireExclusive();
      java5SharedLatchImpl0.release();
  }

  @Test
  public void test05()  throws Throwable  {
      Java5SharedLatchImpl java5SharedLatchImpl0 = new Java5SharedLatchImpl();
      java5SharedLatchImpl0.setNoteLatch(true);
      java5SharedLatchImpl0.acquireShared();
  }

  @Test
  public void test06()  throws Throwable  {
      Java5SharedLatchImpl java5SharedLatchImpl0 = new Java5SharedLatchImpl();
      java5SharedLatchImpl0.acquireShared();
      boolean boolean0 = java5SharedLatchImpl0.acquireExclusiveNoWait();
      assertFalse(boolean0);
  }

  @Test
  public void test07()  throws Throwable  {
      Java5SharedLatchImpl java5SharedLatchImpl0 = new Java5SharedLatchImpl();
      java5SharedLatchImpl0.setNoteLatch(true);
      boolean boolean0 = java5SharedLatchImpl0.acquireExclusiveNoWait();
      assertTrue(boolean0);
  }

  @Test
  public void test08()  throws Throwable  {
      Java5SharedLatchImpl java5SharedLatchImpl0 = new Java5SharedLatchImpl();
      java5SharedLatchImpl0.acquireExclusive();
      try { 
        java5SharedLatchImpl0.acquireExclusiveNoWait();
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // null already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5SharedLatchImpl", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      Java5SharedLatchImpl java5SharedLatchImpl0 = new Java5SharedLatchImpl();
      java5SharedLatchImpl0.acquireExclusiveNoWait();
      try { 
        java5SharedLatchImpl0.acquireExclusive();
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // null already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5SharedLatchImpl", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Java5SharedLatchImpl java5SharedLatchImpl0 = new Java5SharedLatchImpl();
      java5SharedLatchImpl0.setName("java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock@44378b58[Read locks = 1]");
  }

  @Test
  public void test12()  throws Throwable  {
      Java5SharedLatchImpl java5SharedLatchImpl0 = new Java5SharedLatchImpl();
      java5SharedLatchImpl0.setNoteLatch(true);
      java5SharedLatchImpl0.acquireExclusive();
  }
}
