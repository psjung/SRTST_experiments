/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 10:15:44 KST 2017
 */

package com.sleepycat.je.tree;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.nio.ByteBuffer;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.log.LogEntryType;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class INDupDeleteInfo_ESTest3 extends INDupDeleteInfo_ESTest_scaffolding3 {

  @Test
  public void test00()  throws Throwable  {
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo();
      long long0 = iNDupDeleteInfo0.getDeletedNodeId();
      assertEquals(0L, long0);
  }

  @Test
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      DatabaseId databaseId0 = new DatabaseId();
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(1895L, byteArray0, byteArray0, databaseId0);
      long long0 = iNDupDeleteInfo0.getDeletedNodeId();
      assertEquals(1895L, long0);
  }

  @Test
  public void test02()  throws Throwable  {
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo();
      byte[] byteArray0 = iNDupDeleteInfo0.getDeletedMainKey();
      assertNull(byteArray0);
  }

  @Test
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DatabaseId databaseId0 = new DatabaseId((-106));
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((-1L), byteArray0, byteArray0, databaseId0);
      iNDupDeleteInfo0.getDeletedMainKey();
      assertEquals((-1L), iNDupDeleteInfo0.getDeletedNodeId());
  }

  @Test
  public void test04()  throws Throwable  {
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo();
      byte[] byteArray0 = iNDupDeleteInfo0.getDeletedDupKey();
      assertNull(byteArray0);
  }

  @Test
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DatabaseId databaseId0 = new DatabaseId(0);
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(67L, byteArray0, byteArray0, databaseId0);
      iNDupDeleteInfo0.getDeletedDupKey();
      assertEquals(67L, iNDupDeleteInfo0.getDeletedNodeId());
  }

  @Test
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(146L, byteArray0, byteArray0, (DatabaseId) null);
      iNDupDeleteInfo0.getDatabaseId();
      assertEquals(146L, iNDupDeleteInfo0.getDeletedNodeId());
  }

  @Test
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      DatabaseId databaseId0 = new DatabaseId();
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(0L, byteArray0, byteArray0, databaseId0);
      DatabaseId databaseId1 = iNDupDeleteInfo0.getDatabaseId();
      assertEquals(0L, databaseId1.getTransactionId());
  }

  @Test
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = new byte[0];
      DatabaseId databaseId0 = new DatabaseId(2752);
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((-1545L), byteArray0, byteArray1, databaseId0);
      iNDupDeleteInfo0.getDatabaseId();
      assertEquals((-1545L), iNDupDeleteInfo0.getDeletedNodeId());
  }

  @Test
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      DatabaseId databaseId0 = new DatabaseId(1);
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(0L, byteArray0, byteArray0, databaseId0);
      // Undeclared exception!
      try { 
        iNDupDeleteInfo0.dumpLog((StringBuffer) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.INDupDeleteInfo", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo();
      // Undeclared exception!
      try { 
        iNDupDeleteInfo0.getLogSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = new byte[6];
      DatabaseId databaseId0 = new DatabaseId((int) (byte)0);
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(0L, byteArray0, byteArray1, databaseId0);
      boolean boolean0 = iNDupDeleteInfo0.marshallOutsideWriteLatch();
      assertTrue(boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      DatabaseId databaseId0 = new DatabaseId();
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(0L, byteArray0, byteArray0, databaseId0);
      // Undeclared exception!
      try { 
        iNDupDeleteInfo0.readFromLog((ByteBuffer) null, (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo();
      LogEntryType logEntryType0 = iNDupDeleteInfo0.getLogType();
      assertFalse(logEntryType0.isNodeType());
  }

  @Test
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(146L, byteArray0, byteArray0, (DatabaseId) null);
      // Undeclared exception!
      try { 
        iNDupDeleteInfo0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DatabaseId databaseId0 = new DatabaseId((-106));
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((-1L), byteArray0, byteArray0, databaseId0);
      iNDupDeleteInfo0.getDatabaseId();
      assertEquals((-1L), iNDupDeleteInfo0.getDeletedNodeId());
  }

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      DatabaseId databaseId0 = new DatabaseId();
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(0L, byteArray0, byteArray0, databaseId0);
      long long0 = iNDupDeleteInfo0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DatabaseId databaseId0 = new DatabaseId((-106));
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((-1L), byteArray0, byteArray0, databaseId0);
      int int0 = iNDupDeleteInfo0.getLogSize();
      assertEquals(28, int0);
      assertEquals((-1L), iNDupDeleteInfo0.getDeletedNodeId());
  }

  @Test
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = new byte[6];
      DatabaseId databaseId0 = new DatabaseId((int) (byte)0);
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(0L, byteArray0, byteArray1, databaseId0);
      byte[] byteArray2 = iNDupDeleteInfo0.getDeletedMainKey();
      assertArrayEquals(new byte[] {}, byteArray2);
  }

  @Test
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((-38L), byteArray0, byteArray0, (DatabaseId) null);
      long long0 = iNDupDeleteInfo0.getDeletedNodeId();
      assertEquals((-38L), long0);
  }

  @Test
  public void test20()  throws Throwable  {
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo();
      iNDupDeleteInfo0.postLogWork((-3560L));
      assertEquals(0L, iNDupDeleteInfo0.getTransactionId());
  }

  @Test
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DatabaseId databaseId0 = new DatabaseId((-106));
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((-1L), byteArray0, byteArray0, databaseId0);
      boolean boolean0 = iNDupDeleteInfo0.logEntryIsTransactional();
      assertEquals((-1L), iNDupDeleteInfo0.getDeletedNodeId());
      assertFalse(boolean0);
  }

  @Test
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      DatabaseId databaseId0 = new DatabaseId(0);
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(1454L, byteArray0, byteArray0, databaseId0);
      iNDupDeleteInfo0.getDeletedDupKey();
      assertEquals(1454L, iNDupDeleteInfo0.getDeletedNodeId());
  }

  @Test
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      DatabaseId databaseId0 = new DatabaseId(0);
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(1454L, byteArray0, byteArray0, databaseId0);
      boolean boolean0 = iNDupDeleteInfo0.countAsObsoleteWhenLogged();
      assertFalse(boolean0);
      assertEquals(1454L, iNDupDeleteInfo0.getDeletedNodeId());
  }
}
