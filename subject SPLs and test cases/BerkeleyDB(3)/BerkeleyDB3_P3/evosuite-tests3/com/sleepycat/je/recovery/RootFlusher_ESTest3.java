/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 09:50:55 KST 2017
 */

package com.sleepycat.je.recovery;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.latch.LatchException;
import com.sleepycat.je.log.LogManager;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.FileSummaryLN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class RootFlusher_ESTest3 extends RootFlusher_ESTest_scaffolding3 {

  @Test
  public void test00()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      IN iN0 = new IN();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 8);
      rootFlusher0.hook599((ChildReference) null, iN0);
      //  // Unstable assertion: assertEquals(70L, iN0.getLastId());
      //  // Unstable assertion: assertEquals(70L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test01()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 1L);
      byte[] byteArray0 = new byte[3];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, (int) (byte)51, byteArray0, (int) (byte)51);
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, (long) (byte) (-1), (byte)0);
      // Undeclared exception!
      try { 
        rootFlusher0.hook599(childReference0, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.recovery.RootFlusher", e);
      }
  }

  @Test
  public void test02()  throws Throwable  {
      RootFlusher rootFlusher0 = new RootFlusher((DatabaseImpl) null, (LogManager) null, 1131L);
      IN iN0 = new IN();
      iN0.latch();
      try { 
        rootFlusher0.hook599((ChildReference) null, iN0);
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // IN0 already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 122L);
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      byte[] byteArray0 = new byte[1];
      ChildReference childReference0 = new ChildReference((Node) fileSummaryLN0, byteArray0, 32767L);
      // Undeclared exception!
      try { 
        rootFlusher0.doWork(childReference0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.tree.FileSummaryLN cannot be cast to com.sleepycat.je.tree.IN
         //
         assertThrownBy("com.sleepycat.je.recovery.RootFlusher", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 1L);
      byte[] byteArray0 = new byte[3];
      DBIN dBIN0 = new DBIN();
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, 2L);
      dBIN0.latchNoWait(false);
      try { 
        rootFlusher0.doWork(childReference0);
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // DBIN0 already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 6514L);
      byte[] byteArray0 = new byte[0];
      ChildReference childReference0 = new ChildReference((Node) null, byteArray0, 6561L, (byte) (-49));
      try { 
        rootFlusher0.doWork(childReference0);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // fetchTarget of 0x0/0x19a1 state=-49 java.lang.NullPointerException
         //
         assertThrownBy("com.sleepycat.je.tree.ChildReference", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 1L);
      byte[] byteArray0 = new byte[3];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, (int) (byte)51, byteArray0, (int) (byte)51);
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, (long) (byte) (-1), (byte)0);
      rootFlusher0.hook599(childReference0, dBIN0);
      //  // Unstable assertion: assertEquals(30L, dBIN0.getNodeId());
      //  // Unstable assertion: assertEquals(29L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test07()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 122L);
      rootFlusher0.doWork((ChildReference) null);
      //  // Unstable assertion: assertEquals(24L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test08()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 1L);
      boolean boolean0 = rootFlusher0.getFlushed();
      //  // Unstable assertion: assertEquals(19L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test09()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      boolean boolean0 = rootFlusher0.stillRoot();
      //  // Unstable assertion: assertEquals(14L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      IN iN0 = new IN();
      byte[] byteArray0 = new byte[6];
      ChildReference childReference0 = new ChildReference((Node) iN0, byteArray0, (-2606L), (byte)0);
      rootFlusher0.doWork(childReference0);
      boolean boolean0 = rootFlusher0.stillRoot();
      //  // Unstable assertion: assertEquals(1L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertTrue(boolean0);
  }
}
