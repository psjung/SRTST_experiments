/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 10:52:51 KST 2017
 */

package com.sleepycat.je.txn;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;

import javax.transaction.xa.Xid;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.log.LogUtils;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class TxnEnd_ESTest3 extends TxnEnd_ESTest_scaffolding3 {

  @Test
  public void test00()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit(1142L, 1142L);
      long long0 = txnCommit0.getTransactionId();
      assertEquals(1142L, long0);
  }

  @Test
  public void test01()  throws Throwable  {
      TxnPrepare txnPrepare0 = new TxnPrepare();
      txnPrepare0.id = (-1L);
      long long0 = txnPrepare0.getTransactionId();
      assertEquals((-1L), long0);
  }

  @Test
  public void test02()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit(0L, 0L);
      long long0 = txnCommit0.getLastLsn();
      assertEquals(0L, long0);
  }

  @Test
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(0, byteArray0, byteArray0);
      TxnPrepare txnPrepare0 = new TxnPrepare(889L, (Xid) logUtils_XidImpl0);
      long long0 = txnPrepare0.getLastLsn();
      assertEquals(889L, txnPrepare0.getId());
      assertEquals((-1L), long0);
  }

  @Test
  public void test04()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      long long0 = txnAbort0.getId();
      assertEquals(0L, long0);
  }

  @Test
  public void test05()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort(2054L, 2054L);
      long long0 = txnAbort0.getId();
      assertEquals(2054L, long0);
  }

  @Test
  public void test06()  throws Throwable  {
      TxnPrepare txnPrepare0 = new TxnPrepare();
      String string0 = txnPrepare0.getTagName();
      assertEquals("TxnPrepare", string0);
  }

  @Test
  public void test07()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      LogEntryType logEntryType0 = txnCommit0.getLogType();
      assertFalse(logEntryType0.isNodeType());
  }

  @Test
  public void test08()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      txnAbort0.dumpLog(stringBuffer0, false);
      assertEquals(86, stringBuffer0.capacity());
      assertEquals("<TxnAbort id=\"0\" time=\"null\"><DbLsn val=\"0xffffffff/0xffffffff\"/></TxnAbort>", stringWriter0.toString());
  }

  @Test
  public void test09()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      // Undeclared exception!
      try { 
        txnAbort0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("t_G");
      // Undeclared exception!
      try { 
        txnCommit0.readFromLog(byteBuffer0, (byte)0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TxnPrepare txnPrepare0 = new TxnPrepare();
      // Undeclared exception!
      try { 
        txnPrepare0.readFromLog((ByteBuffer) null, (byte) (-38));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TxnPrepare txnPrepare0 = new TxnPrepare();
      // Undeclared exception!
      try { 
        txnPrepare0.getLogSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("e)Zo=K(=)Tw*}Ux{");
      TxnCommit txnCommit0 = new TxnCommit(0L, 764L);
      // Undeclared exception!
      try { 
        txnCommit0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TxnPrepare txnPrepare0 = new TxnPrepare();
      boolean boolean0 = txnPrepare0.marshallOutsideWriteLatch();
      assertTrue(boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit(889L, 2137L);
      long long0 = txnCommit0.getLastLsn();
      assertEquals(2137L, long0);
      assertEquals(889L, txnCommit0.getId());
  }

  @Test
  public void test16()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit(0L, 0L);
      txnCommit0.postLogWork(0L);
      assertTrue(txnCommit0.logEntryIsTransactional());
  }

  @Test
  public void test17()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit(889L, 2137L);
      int int0 = txnCommit0.getLogSize();
      assertEquals(24, int0);
      assertEquals(889L, txnCommit0.getId());
  }

  @Test
  public void test18()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      boolean boolean0 = txnCommit0.logEntryIsTransactional();
      assertTrue(boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      TxnPrepare txnPrepare0 = new TxnPrepare();
      long long0 = txnPrepare0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test20()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      // Undeclared exception!
      try { 
        txnCommit0.dumpLog((StringBuffer) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.TxnEnd", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit(0L, 764L);
      boolean boolean0 = txnCommit0.countAsObsoleteWhenLogged();
      assertFalse(boolean0);
      assertEquals(0L, txnCommit0.getId());
  }

  @Test
  public void test22()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort((-1L), 1L);
      long long0 = txnAbort0.getId();
      assertEquals((-1L), long0);
  }

  @Test
  public void test23()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("matchLNByNodeId called on non DIN/DBIN");
      txnAbort0.readFromLog(byteBuffer0, (byte) (-88));
      assertFalse(byteBuffer0.isReadOnly());
  }
}
