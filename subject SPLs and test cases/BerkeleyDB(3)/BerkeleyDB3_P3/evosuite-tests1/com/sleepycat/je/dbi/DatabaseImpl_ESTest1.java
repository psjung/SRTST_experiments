/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 19:22:08 KST 2017
 */

package com.sleepycat.je.dbi;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.util.Comparator;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.Database;
import com.sleepycat.je.DatabaseConfig;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.PreloadConfig;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DBINReference;
import com.sleepycat.je.tree.Tree;
import com.sleepycat.je.utilint.TestHook;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class DatabaseImpl_ESTest1 extends DatabaseImpl_ESTest_scaffolding1 {

  @Test
  public void test00()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setDebugDatabaseName("");
      String string0 = databaseImpl0.getDebugName();
      assertEquals("", string0);
  }

  @Test
  public void test01()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      String string0 = "";
      // Undeclared exception!
      try { 
        Charset.forName(string0);
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 
         //
         assertThrownBy("java.nio.charset.Charset", e);
      }
  }

  @Test
  public void test02()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      mS949_0.encode("");
      byte byte0 = (byte)0;
      // Undeclared exception!
      try { 
        Charset.forName("");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 
         //
         assertThrownBy("java.nio.charset.Charset", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Class<Integer> class0 = Integer.class;
      try { 
        DatabaseImpl.instantiateComparator(class0, "=o[\"5_%E':~$");
        fail("Expecting exception: LogException");
      
      } catch(LogException e) {
         //
         // Exception while trying to load =o[\"5_%E':~$ Comparator class: java.lang.InstantiationException: java.lang.Integer
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.hook289();
      assertEquals(0, databaseImpl0.getNodeMaxDupTreeEntries());
  }

  @Test
  public void test05()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        databaseImpl0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("                              <database id=\"0\"/>");
      // Undeclared exception!
      try { 
        databaseImpl0.readFromLog(byteBuffer0, (byte) (-13));
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.HeapByteBuffer", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        databaseImpl0.dumpString(1788);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 1788
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        databaseImpl0.dumpLog((StringBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      String string0 = DatabaseImpl.serializeComparator((Comparator) null);
      assertEquals("", string0);
  }

  @Test
  public void test10()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      String string0 = databaseImpl0.getDebugName();
      assertNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      EnvironmentImpl environmentImpl0 = databaseImpl0.getDbEnvironment();
      assertNull(environmentImpl0);
  }

  @Test
  public void test12()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      PreloadConfig preloadConfig0 = PreloadConfig.DEFAULT;
      DatabaseImpl.DatabaseImpl_preload databaseImpl_DatabaseImpl_preload0 = new DatabaseImpl.DatabaseImpl_preload(databaseImpl0, preloadConfig0);
      try { 
        databaseImpl_DatabaseImpl_preload0.execute();
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // environmentImpl is null for target db null
         //
         assertThrownBy("com.sleepycat.je.dbi.SortedLSNTreeWalker", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        DatabaseImpl.instantiateComparator(class0, "aWpt=R)XUw*o4VW[P{F");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.util.Comparator
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.dumpString(30);
      //  // Unstable assertion: assertEquals(146L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test15()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Database database0 = databaseImpl0.findPrimaryDatabase();
      assertNull(database0);
  }

  @Test
  public void test16()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      boolean boolean0 = databaseImpl0.hasOpenHandles();
      //  // Unstable assertion: assertEquals(139L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      PreloadConfig preloadConfig0 = PreloadConfig.DEFAULT;
      DatabaseImpl.DatabaseImpl_preload databaseImpl_DatabaseImpl_preload0 = new DatabaseImpl.DatabaseImpl_preload(databaseImpl0, preloadConfig0);
      // Undeclared exception!
      try { 
        databaseImpl_DatabaseImpl_preload0.hook287();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl$DatabaseImpl_preload", e);
      }
  }

  @Test
  public void test18()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setId((DatabaseId) null);
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("");
      // Undeclared exception!
      try { 
        databaseImpl0.readFromLog(byteBuffer0, (byte)24);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test19()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getNodeMaxEntries();
      //  // Unstable assertion: assertEquals(128L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertEquals(0, int0);
  }

  @Test
  public void test20()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setPendingDeletedHook((TestHook) null);
      assertNull(databaseImpl0.getDebugName());
  }

  @Test
  public void test21()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("hb(:6Gsr=x(yfFk");
      // Undeclared exception!
      try { 
        databaseImpl0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test22()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Comparator comparator0 = databaseImpl0.getBtreeComparator();
      assertNull(comparator0);
  }

  @Test
  public void test23()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getBinMaxDeltas();
      //  // Unstable assertion: assertEquals(117L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertEquals(0, int0);
  }

  @Test
  public void test24()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      try { 
        databaseImpl0.countRecords();
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // environmentImpl is null for target db null
         //
         assertThrownBy("com.sleepycat.je.dbi.SortedLSNTreeWalker", e);
      }
  }

  @Test
  public void test25()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      DatabaseImpl databaseImpl1 = (DatabaseImpl)databaseImpl0.clone();
      assertFalse(databaseImpl1.getSortedDuplicates());
  }

  @Test
  public void test26()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      boolean boolean0 = databaseImpl0.logEntryIsTransactional();
      assertFalse(boolean0);
  }

  @Test
  public void test27()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Comparator comparator0 = databaseImpl0.getDuplicateComparator();
      assertNull(comparator0);
  }

  @Test
  public void test28()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.getSortedDuplicates();
      //  // Unstable assertion: assertEquals(108L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test29()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getBinDeltaPercent();
      //  // Unstable assertion: assertEquals(104L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertEquals(0, int0);
  }

  @Test
  public void test30()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getLogSize();
      //  // Unstable assertion: assertEquals(74L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertEquals(22, int0);
  }

  @Test
  public void test31()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setDuplicateComparator((Comparator) null);
      assertEquals(0L, databaseImpl0.getTransactionId());
  }

  @Test
  public void test32()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setTree((Tree) null);
      // Undeclared exception!
      try { 
        databaseImpl0.countRecords();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test33()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      assertFalse(tree0.logEntryIsTransactional());
  }

  @Test
  public void test34()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setBtreeComparator((Comparator) null);
      assertEquals(0, databaseImpl0.getBinMaxDeltas());
  }

  @Test
  public void test35()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      long long0 = databaseImpl0.getEofNodeId();
      //  // Unstable assertion: assertEquals(65L, long0);
  }

  @Test
  public void test36()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setTransactional(false);
      //  // Unstable assertion: assertEquals(61L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test37()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      PreloadConfig preloadConfig0 = new PreloadConfig();
      try { 
        databaseImpl0.preload(preloadConfig0);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // environmentImpl is null for target db null
         //
         assertThrownBy("com.sleepycat.je.dbi.SortedLSNTreeWalker", e);
      }
  }

  @Test
  public void test38()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getNodeMaxDupTreeEntries();
      //  // Unstable assertion: assertEquals(32L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertEquals(0, int0);
  }

  @Test
  public void test39()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[4];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, 0, byteArray0, (int) (byte) (-24));
      DBINReference dBINReference0 = (DBINReference)dBIN0.createReference();
      DatabaseId databaseId0 = dBINReference0.getDatabaseId();
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      DatabaseImpl databaseImpl1 = null;
      try {
        databaseImpl1 = new DatabaseImpl(".b", databaseId0, (EnvironmentImpl) null, databaseConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test40()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      long long0 = databaseImpl0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test41()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      databaseImpl0.dumpLog(stringBuffer0, true);
      //  // Unstable assertion: assertEquals("<database><dbId id=\"0\"/><root></root><dupsort v=\"false\"/><btcf name=\"\"/><dupcf name=\"\"/></database>", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(11L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test42()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        databaseImpl0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test43()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.removeReferringHandle((Database) null);
      assertEquals(0, databaseImpl0.getBinDeltaPercent());
  }

  @Test
  public void test44()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.isTransactional();
      //  // Unstable assertion: assertEquals(7L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test45()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.hook288();
      assertNull(databaseImpl0.getDebugName());
  }

  @Test
  public void test46()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getReferringHandleCount();
      assertEquals(0, int0);
  }

  @Test
  public void test47()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      DatabaseId databaseId0 = databaseImpl0.getId();
      assertEquals(0L, databaseId0.getTransactionId());
  }

  @Test
  public void test48()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      DatabaseImpl.DatabaseImpl_preload databaseImpl_DatabaseImpl_preload0 = new DatabaseImpl.DatabaseImpl_preload(databaseImpl0, (PreloadConfig) null);
      // Undeclared exception!
      try { 
        databaseImpl_DatabaseImpl_preload0._this.preload((PreloadConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl$DatabaseImpl_preload", e);
      }
  }
}
