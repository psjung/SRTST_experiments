/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 08:57:30 KST 2017
 */

package com.sleepycat.bind.tuple;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseEntry;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class ShortBinding_ESTest3 extends ShortBinding_ESTest_scaffolding3 {

  @Test
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      short short0 = ShortBinding.entryToShort(databaseEntry0);
      assertEquals((short)32512, short0);
  }

  @Test
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      ShortBinding.shortToEntry((short) (-18), databaseEntry0);
      short short0 = ShortBinding.entryToShort(databaseEntry0);
      assertEquals((short) (-18), short0);
  }

  @Test
  public void test02()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      Double double0 = new Double((-367.52854504173));
      TupleOutput tupleOutput0 = shortBinding0.getTupleOutput(double0);
      TupleOutput tupleOutput1 = tupleOutput0.writeShort((-672));
      TupleInput tupleInput0 = new TupleInput(tupleOutput1);
      Short short0 = (Short)shortBinding0.entryToObject(tupleInput0);
      assertEquals((short) (-672), (short)short0);
  }

  @Test
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ShortBinding.shortToEntry((short)0, (DatabaseEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleBase", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      Integer integer0 = new Integer((int) (byte)0);
      // Undeclared exception!
      try { 
        shortBinding0.objectToEntry((Object) integer0, (TupleOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.ShortBinding", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      Object object0 = new Object();
      TupleOutput tupleOutput0 = shortBinding0.getTupleOutput(object0);
      // Undeclared exception!
      try { 
        shortBinding0.objectToEntry(object0, tupleOutput0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.Number
         //
         assertThrownBy("com.sleepycat.bind.tuple.ShortBinding", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      Long long0 = new Long((-1257L));
      TupleOutput tupleOutput0 = shortBinding0.getTupleOutput(long0);
      tupleOutput0.addSize(Integer.MIN_VALUE);
      Short short0 = new Short((short)0);
      // Undeclared exception!
      try { 
        shortBinding0.objectToEntry((Object) short0, tupleOutput0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2147483648
         //
         assertThrownBy("com.sleepycat.util.FastOutputStream", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        ShortBinding.entryToShort((DatabaseEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleBase", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      databaseEntry0.setSize(48);
      // Undeclared exception!
      try { 
        ShortBinding.entryToShort(databaseEntry0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         assertThrownBy("com.sleepycat.util.FastInputStream", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      // Undeclared exception!
      try { 
        shortBinding0.entryToObject((TupleInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.ShortBinding", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      byte[] byteArray0 = new byte[0];
      TupleInput tupleInput0 = new TupleInput(byteArray0);
      // Undeclared exception!
      try { 
        shortBinding0.entryToObject(tupleInput0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      Long long0 = new Long((-1257L));
      TupleOutput tupleOutput0 = shortBinding0.getTupleOutput(long0);
      Short short0 = new Short((short)0);
      shortBinding0.objectToEntry((Object) short0, tupleOutput0);
      assertEquals(0, tupleOutput0.getBufferOffset());
  }

  @Test
  public void test12()  throws Throwable  {
      ShortBinding shortBinding0 = new ShortBinding();
      byte[] byteArray0 = new byte[2];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (-3194), (int) (byte) (-59));
      TupleInput tupleInput0 = TupleBase.entryToInput(databaseEntry0);
      // Undeclared exception!
      try { 
        shortBinding0.entryToObject(tupleInput0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3194
         //
         assertThrownBy("com.sleepycat.util.FastInputStream", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte) (-23), (int) (byte) (-23));
      // Undeclared exception!
      try { 
        ShortBinding.entryToShort(databaseEntry0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.bind.tuple.TupleInput", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte) (-23), (int) (byte) (-23));
      ShortBinding.shortToEntry((short)0, databaseEntry0);
      short short0 = ShortBinding.entryToShort(databaseEntry0);
      assertEquals((short)0, short0);
  }
}
