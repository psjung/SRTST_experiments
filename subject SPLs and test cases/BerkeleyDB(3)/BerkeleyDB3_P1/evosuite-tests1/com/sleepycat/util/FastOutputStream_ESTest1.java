/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 21:41:16 KST 2017
 */

package com.sleepycat.util;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.UnsupportedEncodingException;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class FastOutputStream_ESTest1 extends FastOutputStream_ESTest_scaffolding1 {

  @Test
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FastOutputStream fastOutputStream0 = new FastOutputStream(byteArray0);
      fastOutputStream0.addSize((-1417));
      int int0 = fastOutputStream0.size();
      assertEquals(-1417, fastOutputStream0.getBufferLength());
      assertEquals((-1417), int0);
  }

  @Test
  public void test01()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream(100, 100);
      fastOutputStream0.addSize((-1));
      int int0 = fastOutputStream0.getBufferLength();
      assertEquals(-1, fastOutputStream0.size());
      assertEquals((-1), int0);
  }

  @Test
  public void test02()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream(0);
      byte[] byteArray0 = fastOutputStream0.getBufferBytes();
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test
  public void test03()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream(0, (-2249));
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        fastOutputStream0.write(byteArray0, 909, (int) (byte)100);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.System", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream(0, 0);
      fastOutputStream0.makeSpace(0);
      assertEquals(0, fastOutputStream0.getBufferOffset());
  }

  @Test
  public void test05()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      fastOutputStream0.writeFast((-1824));
      fastOutputStream0.makeSpace((-1824));
      assertEquals(1, fastOutputStream0.size());
  }

  @Test
  public void test06()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      fastOutputStream0.write(0);
      int int0 = fastOutputStream0.getBufferLength();
      assertEquals(1, int0);
  }

  @Test
  public void test07()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      byte[] byteArray0 = fastOutputStream0.getBufferBytes();
      fastOutputStream0.write(0);
      fastOutputStream0.writeFast(byteArray0);
      fastOutputStream0.writeTo(fastOutputStream0);
      assertEquals(202, fastOutputStream0.getBufferLength());
  }

  @Test
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FastOutputStream fastOutputStream0 = new FastOutputStream(2154);
      // Undeclared exception!
      try { 
        fastOutputStream0.writeFast(byteArray0, 2154, 2154);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.System", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FastOutputStream fastOutputStream0 = new FastOutputStream(byteArray0);
      fastOutputStream0.write((int) (byte)125);
      assertEquals(1, fastOutputStream0.getBufferLength());
  }

  @Test
  public void test10()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      fastOutputStream0.write(0);
      int int0 = fastOutputStream0.size();
      assertEquals(1, fastOutputStream0.getBufferLength());
      assertEquals(1, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FastOutputStream fastOutputStream0 = new FastOutputStream(byteArray0, 0);
      fastOutputStream0.write(byteArray0, 0, 0);
      assertEquals(0, fastOutputStream0.getBufferLength());
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FastOutputStream fastOutputStream0 = new FastOutputStream(byteArray0, (int) (byte)41);
      // Undeclared exception!
      try { 
        fastOutputStream0.writeTo((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.FastOutputStream", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FastOutputStream fastOutputStream0 = new FastOutputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        fastOutputStream0.writeTo(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         assertThrownBy("java.io.PipedOutputStream", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream(6056, 6056);
      // Undeclared exception!
      try { 
        fastOutputStream0.writeFast((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.FastOutputStream", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream(1105);
      byte[] byteArray0 = new byte[3];
      fastOutputStream0.addSize(1105);
      fastOutputStream0.addSize(1105);
      // Undeclared exception!
      try { 
        fastOutputStream0.writeFast(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.System", e);
      }
  }

  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FastOutputStream fastOutputStream0 = new FastOutputStream(byteArray0, (int) (byte)46);
      fastOutputStream0.addSize((byte)100);
      // Undeclared exception!
      try { 
        fastOutputStream0.write((int) (byte)46);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.System", e);
      }
  }

  @Test
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FastOutputStream fastOutputStream0 = new FastOutputStream(byteArray0);
      fastOutputStream0.addSize((byte)27);
      // Undeclared exception!
      try { 
        fastOutputStream0.toString("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 27
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test18()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      try { 
        fastOutputStream0.toString("{;");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // {;
         //
         assertThrownBy("java.lang.StringCoding", e);
      }
  }

  @Test
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FastOutputStream fastOutputStream0 = new FastOutputStream(byteArray0);
      fastOutputStream0.addSize((byte)125);
      // Undeclared exception!
      try { 
        fastOutputStream0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 125
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test20()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream(100, 100);
      fastOutputStream0.addSize((-1));
      // Undeclared exception!
      try { 
        fastOutputStream0.toByteArray();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.FastOutputStream", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      fastOutputStream0.addSize(691);
      // Undeclared exception!
      try { 
        fastOutputStream0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.System", e);
      }
  }

  @Test
  public void test22()  throws Throwable  {
      FastOutputStream fastOutputStream0 = null;
      try {
        fastOutputStream0 = new FastOutputStream((-489), (-643));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.FastOutputStream", e);
      }
  }

  @Test
  public void test23()  throws Throwable  {
      FastOutputStream fastOutputStream0 = null;
      try {
        fastOutputStream0 = new FastOutputStream((-273));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.FastOutputStream", e);
      }
  }

  @Test
  public void test24()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      byte[] byteArray0 = new byte[3];
      fastOutputStream0.writeFast(byteArray0, 0, 1);
      assertEquals(1, fastOutputStream0.getBufferLength());
  }

  @Test
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FastOutputStream fastOutputStream0 = new FastOutputStream(byteArray0);
      // Undeclared exception!
      try { 
        fastOutputStream0.writeFast(byteArray0, 1650, 1650);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.System", e);
      }
  }

  @Test
  public void test26()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      fastOutputStream0.addSize(2748);
      // Undeclared exception!
      try { 
        fastOutputStream0.writeFast((-989));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.System", e);
      }
  }

  @Test
  public void test27()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream(498, 498);
      byte[] byteArray0 = new byte[3];
      fastOutputStream0.addSize(498);
      fastOutputStream0.write(byteArray0);
      assertEquals(501, fastOutputStream0.getBufferLength());
  }

  @Test
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FastOutputStream fastOutputStream0 = new FastOutputStream(byteArray0);
      fastOutputStream0.makeSpace((byte)16);
      assertEquals(0, fastOutputStream0.getBufferOffset());
  }

  @Test
  public void test29()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      byte[] byteArray0 = fastOutputStream0.getBufferBytes();
      fastOutputStream0.writeFast(byteArray0);
      fastOutputStream0.writeTo(fastOutputStream0);
      assertEquals(200, fastOutputStream0.getBufferLength());
  }

  @Test
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FastOutputStream fastOutputStream0 = new FastOutputStream(byteArray0);
      fastOutputStream0.writeFast(byteArray0);
      fastOutputStream0.write((-1417));
      assertEquals(3, fastOutputStream0.getBufferLength());
  }

  @Test
  public void test31()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      byte[] byteArray0 = fastOutputStream0.toByteArray();
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test
  public void test32()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      fastOutputStream0.writeFast((-1824));
      fastOutputStream0.toByteArray();
      assertEquals(1, fastOutputStream0.size());
  }

  @Test
  public void test33()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream(100, 100);
      int int0 = fastOutputStream0.getBufferOffset();
      assertEquals(0, int0);
  }

  @Test
  public void test34()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      fastOutputStream0.addSize((-1824));
      // Undeclared exception!
      try { 
        fastOutputStream0.writeTo(fastOutputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.System", e);
      }
  }

  @Test
  public void test35()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream(498, 498);
      String string0 = fastOutputStream0.toString();
      assertEquals("", string0);
  }

  @Test
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FastOutputStream fastOutputStream0 = new FastOutputStream(byteArray0);
      // Undeclared exception!
      try { 
        fastOutputStream0.toString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  @Test
  public void test37()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream(498, 498);
      int int0 = fastOutputStream0.getBufferLength();
      assertEquals(0, int0);
  }

  @Test
  public void test38()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      fastOutputStream0.reset();
      assertEquals(0, fastOutputStream0.size());
  }

  @Test
  public void test39()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream(498, 498);
      byte[] byteArray0 = new byte[3];
      fastOutputStream0.write(byteArray0);
      fastOutputStream0.addSize(498);
      // Undeclared exception!
      try { 
        fastOutputStream0.write(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.System", e);
      }
  }

  @Test
  public void test40()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream();
      int int0 = fastOutputStream0.size();
      assertEquals(0, int0);
  }

  @Test
  public void test41()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream((byte[]) null);
      // Undeclared exception!
      try { 
        fastOutputStream0.makeSpace((byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.util.FastOutputStream", e);
      }
  }
}
