/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 19:26:31 KST 2017
 */

package com.sleepycat.je.dbi;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.File;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.Database;
import com.sleepycat.je.DatabaseConfig;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.txn.Locker;
import com.sleepycat.je.txn.Txn;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class DbTree_ESTest1 extends DbTree_ESTest_scaffolding1 {

  @Test
  public void test00()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.setLastDbId((-1));
      int int0 = dbTree0.getLastDbId();
      assertEquals((-1), int0);
  }

  @Test
  public void test01()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      String string0 = "";
      // Undeclared exception!
      try { 
        Charset.forName(string0);
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 
         //
         assertThrownBy("java.nio.charset.Charset", e);
      }
  }

  @Test
  public void test02()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      File file0 = null;
      Properties properties0 = null;
      EnvironmentConfig environmentConfig0 = null;
      try {
        environmentConfig0 = new EnvironmentConfig(properties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.NAME_DB_ID;
      // Undeclared exception!
      try { 
        dbTree0.deleteMapLN(databaseId0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      CursorImpl.SearchMode cursorImpl_SearchMode0 = CursorImpl.SearchMode.SET_RANGE;
      String string0 = cursorImpl_SearchMode0.toString();
      // Undeclared exception!
      try { 
        Charset.forName(string0);
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // SearchMode.SET_RANGE
         //
         assertThrownBy("java.nio.charset.Charset", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseConfig databaseConfig0 = DatabaseConfig.DEFAULT;
      // Undeclared exception!
      try { 
        dbTree0.createDb((Locker) null, "_jeNameMap", databaseConfig0, (Database) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      String string0 = "";
      Database database0 = null;
      File file0 = null;
      Properties properties0 = null;
      EnvironmentConfig environmentConfig0 = null;
      try {
        environmentConfig0 = new EnvironmentConfig(properties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId();
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0, 0L);
      //  // Unstable assertion: assertEquals(853L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test08()  throws Throwable  {
      EnvironmentImpl environmentImpl0 = null;
      DbTree dbTree0 = null;
      try {
        dbTree0 = new DbTree((EnvironmentImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.hook308(true, (CursorImpl) null);
      assertFalse(dbTree0.logEntryIsTransactional());
  }

  @Test
  public void test10()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      CursorImpl cursorImpl0 = null;
      dbTree0.hook303(cursorImpl0);
      assertEquals(0L, dbTree0.getTransactionId());
  }

  @Test
  public void test11()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      String string0 = dbTree0.dumpString(0);
      assertEquals("<dbTree lastDbId =\"0\">\n <database id=\"0\"/>\n <database id=\"0\"/>\n</dbtree>", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("?o r-*");
      // Undeclared exception!
      try { 
        dbTree0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      dbTree0.dumpLog(stringBuffer0, true);
      assertEquals(318, stringBuffer0.capacity());
      assertEquals("<dbtree lastId = \"0\"><idDb><database><dbId id=\"0\"/><root></root><dupsort v=\"false\"/><btcf name=\"\"/><dupcf name=\"\"/></database></idDb><nameDb><database><dbId id=\"0\"/><root></root><dupsort v=\"false\"/><btcf name=\"\"/><dupcf name=\"\"/></database></nameDb></dbtree>", stringWriter0.toString());
  }

  @Test
  public void test14()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.readFromLog((ByteBuffer) null, (byte)8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.getDbName((DatabaseId) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test16()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId((-1801787853));
      HashMap<DbTree, String> hashMap0 = new HashMap<DbTree, String>();
      // Undeclared exception!
      try { 
        dbTree0.getDb(databaseId0, (long) (-175), (Map) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test17()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.ID_DB_ID;
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0);
      //  // Unstable assertion: assertEquals(633L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test18()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseConfig databaseConfig0 = DatabaseConfig.DEFAULT;
      // Undeclared exception!
      try { 
        dbTree0.createDb((Locker) null, "READ", databaseConfig0, (Database) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test19()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId(0);
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0, (long) 0, false, (String) null);
      databaseImpl0.setTransactional(true);
      //  // Unstable assertion: assertEquals(589L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test20()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.NAME_DB_ID;
      // Undeclared exception!
      try { 
        dbTree0.getDb(databaseId0, 0L, true, "9I?'oq~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.getDb((Locker) null, "_jeNameMap", (Database) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.CursorImpl", e);
      }
  }

  @Test
  public void test22()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      boolean boolean0 = dbTree0.isReservedDbName("_jeNameMap");
      assertTrue(boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      boolean boolean0 = dbTree0.isReservedDbName("][0r631csa");
      assertFalse(boolean0);
  }

  @Test
  public void test24()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.getDbNames();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test25()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId(27);
      // Undeclared exception!
      try { 
        dbTree0.getDbName(databaseId0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test26()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.ID_DB_ID;
      String string0 = dbTree0.getDbName(databaseId0);
      assertEquals("_jeIdMap", string0);
  }

  @Test
  public void test27()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.NAME_DB_ID;
      String string0 = dbTree0.getDbName(databaseId0);
      assertEquals("_jeNameMap", string0);
  }

  @Test
  public void test28()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = DbTree.NAME_DB_ID;
      // Undeclared exception!
      try { 
        dbTree0.getDb(databaseId0, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test29()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId();
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0, 9223372036854775807L, (Map) hashMap0);
      // Undeclared exception!
      try { 
        dbTree0.modifyDbRoot(databaseImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test30()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.getHighestLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree$RootLevel", e);
      }
  }

  @Test
  public void test31()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      String string0 = dbTree0.toString();
      assertEquals("<dbTree lastDbId =\"0\">\n <database id=\"0\"/>\n <database id=\"0\"/>\n</dbtree>", string0);
  }

  @Test
  public void test32()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.getDb((Locker) null, "NULL_LSN without KnownDeleted", (Database) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.CursorImpl", e);
      }
  }

  @Test
  public void test33()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.hook299((CursorImpl) null);
      assertFalse(dbTree0.countAsObsoleteWhenLogged());
  }

  @Test
  public void test34()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      int int0 = dbTree0.getLastDbId();
      assertEquals(0, int0);
  }

  @Test
  public void test35()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      int int0 = dbTree0.getLogSize();
      assertEquals(48, int0);
  }

  @Test
  public void test36()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      boolean boolean0 = dbTree0.countAsObsoleteWhenLogged();
      assertFalse(boolean0);
  }

  @Test
  public void test37()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      boolean boolean0 = dbTree0.marshallOutsideWriteLatch();
      assertTrue(boolean0);
  }

  @Test
  public void test38()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      DatabaseId databaseId0 = new DatabaseId();
      DatabaseImpl databaseImpl0 = dbTree0.getDb(databaseId0);
      //  // Unstable assertion: assertEquals(163L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test39()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.dump();
      assertEquals(0L, dbTree0.getTransactionId());
  }

  @Test
  public void test40()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      LogEntryType logEntryType0 = dbTree0.getLogType();
      assertFalse(logEntryType0.isNodeType());
  }

  @Test
  public void test41()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      Txn txn0 = new Txn();
      DatabaseImpl databaseImpl0 = dbTree0.getDb((Locker) txn0, " in writeInfo Map.", (Database) null, true);
      assertNull(databaseImpl0);
  }

  @Test
  public void test42()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.dumpLog((StringBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DbTree", e);
      }
  }

  @Test
  public void test43()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.hook309(true, (CursorImpl) null);
      assertFalse(dbTree0.countAsObsoleteWhenLogged());
  }

  @Test
  public void test44()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.rebuildINListMapDb();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.Tree", e);
      }
  }

  @Test
  public void test45()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.hook305((CursorImpl) null);
      assertFalse(dbTree0.countAsObsoleteWhenLogged());
  }

  @Test
  public void test46()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      long long0 = dbTree0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test47()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test48()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.hook310(true, (CursorImpl) null);
      assertFalse(dbTree0.logEntryIsTransactional());
  }

  @Test
  public void test49()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.hook307(true, (CursorImpl) null);
      assertEquals(0L, dbTree0.getTransactionId());
  }

  @Test
  public void test50()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try { 
        dbTree0.setEnvironmentImpl((EnvironmentImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.dbi.DatabaseImpl", e);
      }
  }

  @Test
  public void test51()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.postLogWork((-3235L));
      assertFalse(dbTree0.countAsObsoleteWhenLogged());
  }

  @Test
  public void test52()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.hook306(true, (CursorImpl) null);
      assertFalse(dbTree0.countAsObsoleteWhenLogged());
  }

  @Test
  public void test53()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode(")*#dr$e");
      // Undeclared exception!
      try { 
        dbTree0.readFromLog(byteBuffer0, (byte)0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test54()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      dbTree0.hook304((CursorImpl) null);
      assertEquals(0L, dbTree0.getTransactionId());
  }

  @Test
  public void test55()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      boolean boolean0 = dbTree0.logEntryIsTransactional();
      assertFalse(boolean0);
  }
}
