/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 01:20:29 KST 2017
 */

package com.sleepycat.je.recovery;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.nio.ByteBuffer;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.log.LogEntryType;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class CheckpointEnd_ESTest2 extends CheckpointEnd_ESTest_scaffolding2 {

  @Test
  public void test00()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("[j/=^%u>lwl9g", 0L, 0L, (-1L), 38L, 0, (-1L), (-1L));
      long long0 = checkpointEnd0.getRootLsn();
      assertEquals(0L, long0);
  }

  @Test
  public void test01()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd();
      long long0 = checkpointEnd0.getRootLsn();
      assertEquals((-1L), long0);
  }

  @Test
  public void test02()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("", 0L, 0L, 0L, 0L, (-2354), (long) (-2354), 0L);
      long long0 = checkpointEnd0.getLastTxnId();
      assertEquals((-2354L), long0);
  }

  @Test
  public void test03()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("!/0JuS`jFQ\"{:q;", (-1L), (-1L), 0L, 0L, 1, 2216L, (long) 1);
      long long0 = checkpointEnd0.getLastNodeId();
      assertEquals(0L, long0);
  }

  @Test
  public void test04()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("d;", 0L, 0L, 347L, (-605L), 897, 0L, 0L);
      long long0 = checkpointEnd0.getLastNodeId();
      assertEquals((-605L), long0);
  }

  @Test
  public void test05()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("!/0JuS`jFQ\"{:q;", (-1L), (-1L), 0L, 0L, 1, 2216L, (long) 1);
      int int0 = checkpointEnd0.getLastDbId();
      assertEquals(1, int0);
  }

  @Test
  public void test06()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("!/0JuS`jFQ\"{:q;", (-1L), (-1L), (-1L), (-1L), (-11), 2216L, (long) (-11));
      int int0 = checkpointEnd0.getLastDbId();
      assertEquals((-11), int0);
  }

  @Test
  public void test07()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("wD-|!v:L9i`Y*{YD<", (-5859L), 245L, (-5859L), (-2269L), (-2146045278), (-2269L), 873L);
      long long0 = checkpointEnd0.getId();
      assertEquals(873L, long0);
  }

  @Test
  public void test08()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("!/0JuS`jFQ\"{:q;", (-1L), (-1L), (-1L), (-1L), (-11), 2216L, (long) (-11));
      long long0 = checkpointEnd0.getId();
      assertEquals((-11L), long0);
  }

  @Test
  public void test09()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("y1V", 1L, 1L, 1L, 1671L, 1292, 1L, 1671L);
      long long0 = checkpointEnd0.getFirstActiveLsn();
      assertEquals(1L, long0);
  }

  @Test
  public void test10()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("!/0JuS`jFQ\"{:q;", (-1L), (-1L), (-1L), (-1L), (-11), 2216L, (long) (-11));
      long long0 = checkpointEnd0.getFirstActiveLsn();
      assertEquals((-1L), long0);
  }

  @Test
  public void test11()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("~niX*+,w#JQesY%", 131L, 0L, 0L, 131L, (-2780), 0L, 0L);
      long long0 = checkpointEnd0.getCheckpointStartLsn();
      assertEquals(131L, long0);
  }

  @Test
  public void test12()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("'8OSV$", (-1278L), (-1278L), (-1018L), (-1278L), (-3261), (-1018L), (-1278L));
      long long0 = checkpointEnd0.getCheckpointStartLsn();
      assertEquals((-1278L), long0);
  }

  @Test
  public void test13()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd(" time=\"", (-2501L), 1311L, (-1L), (-1L), (-1985), (long) 0, (long) (-1985));
      assertEquals(0L, checkpointEnd0.getTransactionId());
  }

  @Test
  public void test14()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("<RLpCo ]ntEN", 4558L, 4558L, 4558L, 4558L, (-1), (long) (-1), (long) (-1));
      ByteBuffer byteBuffer0 = null;
      // Undeclared exception!
      try { 
        checkpointEnd0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("", 1311L, (-1L), 1311L, 1311L, 0, 1311L, (long) 0);
      // Undeclared exception!
      try { 
        checkpointEnd0.readFromLog((ByteBuffer) null, (byte)32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test16()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("!/0JuS`jFQ\"{:q;", (-1L), (-1L), (-1L), (-1L), (-11), 2216L, (long) (-11));
      // Undeclared exception!
      try { 
        checkpointEnd0.dumpLog((StringBuffer) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.recovery.CheckpointEnd", e);
      }
  }

  @Test
  public void test17()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("&sh=f=^b:BoH~qUc", 2062L, 2062L, 582L, 582L, 0, 2062L, 1418L);
      String string0 = checkpointEnd0.toString();
      //  // Unstable assertion: assertEquals("time=2017-04-22 01:20:09.437 lastNodeId=582 lastDbId=0 lastTxnId=2062 id=1418 rootExists=true ckptStartLsn=0x0/0x80e root=0x0/0x80e firstActive=0x0/0x246", string0);
  }

  @Test
  public void test18()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("!/0JuS`jFQ\"{:q;", (-1L), (-1L), 0L, 0L, 1, 2216L, (long) 1);
      String string0 = checkpointEnd0.toString();
      //  // Unstable assertion: assertEquals("time=2017-04-22 01:20:08.637 lastNodeId=0 lastDbId=1 lastTxnId=2216 id=1 rootExists=false ckptStartLsn=0xffffffff/0xffffffff firstActive=0x0/0x0", string0);
  }

  @Test
  public void test19()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("&sh=f=^b:BoH~qUc", 2062L, 2062L, 582L, 582L, 0, 2062L, 1418L);
      int int0 = checkpointEnd0.getLogSize();
      assertEquals(82, int0);
  }

  @Test
  public void test20()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("!/0JuS`jFQ\"{:q;", (-1L), (-1L), 0L, 0L, 1, 2216L, (long) 1);
      int int0 = checkpointEnd0.getLogSize();
      assertEquals(73, int0);
  }

  @Test
  public void test21()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd((String) null, 4294967295L, 4294967295L, 4294967295L, 4294967295L, 0, 4294967295L, 4294967295L);
      assertTrue(checkpointEnd0.marshallOutsideWriteLatch());
  }

  @Test
  public void test22()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("&sh=f=^b:BoH~qUc", 2062L, 2062L, 582L, 582L, 0, 2062L, 1418L);
      int int0 = checkpointEnd0.getLastDbId();
      assertEquals(0, int0);
  }

  @Test
  public void test23()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("!/0JuS`jFQ\"{:q;", (-1L), (-1L), 0L, 0L, 1, 2216L, (long) 1);
      boolean boolean0 = checkpointEnd0.logEntryIsTransactional();
      assertFalse(boolean0);
  }

  @Test
  public void test24()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("!/0JuS`jFQ\"{:q;", (-1L), (-1L), 0L, 0L, 1, 2216L, (long) 1);
      long long0 = checkpointEnd0.getLastTxnId();
      assertEquals(2216L, long0);
  }

  @Test
  public void test25()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("<dupCountLN/>", 0L, 0L, (-1L), 0L, 598, (long) 598, 0L);
      long long0 = checkpointEnd0.getCheckpointStartLsn();
      assertEquals(0L, long0);
  }

  @Test
  public void test26()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd();
      long long0 = checkpointEnd0.getLastTxnId();
      assertEquals(0L, long0);
  }

  @Test
  public void test27()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("[j/=^%u>lwl9g", 0L, 0L, (-1L), 38L, 0, (-1L), (-1L));
      long long0 = checkpointEnd0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test28()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("&sh=f=^b:BoH~qUc", 2062L, 2062L, 582L, 582L, 0, 2062L, 1418L);
      long long0 = checkpointEnd0.getRootLsn();
      assertEquals(2062L, long0);
  }

  @Test
  public void test29()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("d;", 0L, 0L, 347L, (-605L), 897, 0L, 0L);
      long long0 = checkpointEnd0.getId();
      assertEquals(0L, long0);
  }

  @Test
  public void test30()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("d;", 0L, 0L, 347L, (-605L), 897, 0L, 0L);
      LogEntryType logEntryType0 = checkpointEnd0.getLogType();
      assertFalse(logEntryType0.isNodeType());
  }

  @Test
  public void test31()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("!/0JuS`jFQ\"{:q;", (-1L), (-1L), 0L, 0L, 1, 2216L, (long) 1);
      long long0 = checkpointEnd0.getFirstActiveLsn();
      assertEquals(0L, long0);
  }

  @Test
  public void test32()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("!/0JuS`jFQ\"{:q;", (-1L), (-1L), (-1L), (-1L), (-11), 2216L, (long) (-11));
      boolean boolean0 = checkpointEnd0.marshallOutsideWriteLatch();
      assertTrue(boolean0);
  }

  @Test
  public void test33()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("&sh=f=^b:BoH~qUc", 2062L, 2062L, 582L, 582L, 0, 2062L, 1418L);
      boolean boolean0 = checkpointEnd0.countAsObsoleteWhenLogged();
      assertFalse(boolean0);
  }

  @Test
  public void test34()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("&sh=f=^b:BoH~qUc", 2062L, 2062L, 582L, 582L, 0, 2062L, 1418L);
      checkpointEnd0.postLogWork(0L);
      assertFalse(checkpointEnd0.logEntryIsTransactional());
  }

  @Test
  public void test35()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("&sh=f=^b:BoH~qUc", 2062L, 2062L, 582L, 582L, 0, 2062L, 1418L);
      long long0 = checkpointEnd0.getLastNodeId();
      assertEquals(582L, long0);
  }
}
