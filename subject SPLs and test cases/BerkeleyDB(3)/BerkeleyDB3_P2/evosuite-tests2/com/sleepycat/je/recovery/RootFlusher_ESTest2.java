/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 01:27:06 KST 2017
 */

package com.sleepycat.je.recovery;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.DatabaseEntry;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.latch.LatchException;
import com.sleepycat.je.log.LogManager;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.FileSummaryLN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class RootFlusher_ESTest2 extends RootFlusher_ESTest_scaffolding2 {

  @Test
  public void test00()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      byte[] byteArray0 = new byte[8];
      ChildReference childReference0 = new ChildReference((Node) fileSummaryLN0, byteArray0, (long) (byte)57);
      DBIN dBIN0 = new DBIN();
      rootFlusher0.hook599(childReference0, dBIN0);
      boolean boolean0 = rootFlusher0.stillRoot();
      //  // Unstable assertion: assertEquals(84L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test
  public void test01()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, (-724L));
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[4];
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, (long) 2144521601, (byte)0);
      rootFlusher0.hook599(childReference0, dBIN0);
      //  // Unstable assertion: assertEquals(75L, dBIN0.getLastId());
      //  // Unstable assertion: assertEquals(75L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test02()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 3156L);
      // Undeclared exception!
      try { 
        rootFlusher0.hook599((ChildReference) null, (IN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.recovery.RootFlusher", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      byte[] byteArray0 = new byte[8];
      ChildReference childReference0 = new ChildReference((Node) fileSummaryLN0, byteArray0, (long) (byte)0);
      DIN dIN0 = new DIN();
      dIN0.updateDupCountLNRef(1701L);
      // Undeclared exception!
      try { 
        rootFlusher0.hook599(childReference0, dIN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.DIN", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      RootFlusher rootFlusher0 = new RootFlusher((DatabaseImpl) null, (LogManager) null, 1L);
      byte[] byteArray0 = new byte[7];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      LN lN0 = new LN(databaseEntry0);
      ChildReference childReference0 = new ChildReference((Node) lN0, byteArray0, (long) (byte)21, (byte)38);
      DBIN dBIN0 = new DBIN();
      dBIN0.latchNoWait(false);
      try { 
        rootFlusher0.hook599(childReference0, dBIN0);
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // DBIN0 already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, (-22L));
      MapLN mapLN0 = new MapLN(databaseImpl0);
      byte[] byteArray0 = new byte[0];
      ChildReference childReference0 = new ChildReference((Node) mapLN0, byteArray0, (-22L), (byte)2);
      // Undeclared exception!
      try { 
        rootFlusher0.doWork(childReference0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.sleepycat.je.tree.MapLN cannot be cast to com.sleepycat.je.tree.IN
         //
         assertThrownBy("com.sleepycat.je.recovery.RootFlusher", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      RootFlusher rootFlusher0 = new RootFlusher((DatabaseImpl) null, (LogManager) null, 1L);
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[2];
      dBIN0.latchNoWait(true);
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, 0L);
      try { 
        rootFlusher0.doWork(childReference0);
        fail("Expecting exception: LatchException");
      
      } catch(LatchException e) {
         //
         // DBIN0 already held
         //
         assertThrownBy("com.sleepycat.je.latch.Java5LatchImpl", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, (-211L));
      byte[] byteArray0 = new byte[2];
      ChildReference childReference0 = new ChildReference((Node) null, byteArray0, (long) (byte) (-66), (byte) (-66));
      try { 
        rootFlusher0.doWork(childReference0);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // fetchTarget of 0xffffffff/0xffffffbe state=-66 java.lang.NullPointerException
         //
         assertThrownBy("com.sleepycat.je.tree.ChildReference", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      DIN dIN0 = new DIN();
      dIN0.updateDupCountLNRef(0L);
      byte[] byteArray0 = new byte[10];
      ChildReference childReference0 = new ChildReference((Node) dIN0, byteArray0, 2048L, (byte)0);
      // Undeclared exception!
      try { 
        rootFlusher0.doWork(childReference0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.tree.DIN", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[10];
      ChildReference childReference0 = new ChildReference((Node) dIN0, byteArray0, 2048L, (byte)0);
      rootFlusher0.doWork(childReference0);
      //  // Unstable assertion: assertEquals(22L, dIN0.getLastId());
      //  // Unstable assertion: assertEquals(22L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test10()  throws Throwable  {
      RootFlusher rootFlusher0 = new RootFlusher((DatabaseImpl) null, (LogManager) null, 1L);
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[2];
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, 0L);
      DIN dIN0 = new DIN();
      rootFlusher0.hook599(childReference0, dIN0);
      assertEquals((-1L), dIN0.getLastFullVersion());
  }

  @Test
  public void test11()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 3156L);
      rootFlusher0.doWork((ChildReference) null);
      //  // Unstable assertion: assertEquals(17L, databaseImpl0.getEofNodeId());
  }

  @Test
  public void test12()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      boolean boolean0 = rootFlusher0.getFlushed();
      //  // Unstable assertion: assertEquals(12L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, 0L);
      boolean boolean0 = rootFlusher0.stillRoot();
      //  // Unstable assertion: assertEquals(7L, databaseImpl0.getEofNodeId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      RootFlusher rootFlusher0 = new RootFlusher(databaseImpl0, (LogManager) null, (-1L));
      byte[] byteArray0 = new byte[0];
      ChildReference childReference0 = new ChildReference((Node) null, byteArray0, (-1L), (byte) (-49));
      // Undeclared exception!
      try { 
        rootFlusher0.doWork(childReference0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.recovery.RootFlusher", e);
      }
  }
}
