/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 21:15:25 KST 2017
 */

package com.sleepycat.je.txn;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sleepycat.je.txn.TxnAbort;
import com.sleepycat.je.txn.TxnCommit;
import com.sleepycat.je.txn.TxnPrepare;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class TxnEnd_ESTest1 extends TxnEnd_ESTest_scaffolding1 {

  @Test
  public void test00()  throws Throwable  {
      TxnPrepare txnPrepare0 = new TxnPrepare();
      long long0 = txnPrepare0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test01()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort(1902L, 1902L);
      long long0 = txnAbort0.getTransactionId();
      assertEquals(1902L, long0);
  }

  @Test
  public void test02()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort(0L, 0L);
      long long0 = txnAbort0.getLastLsn();
      assertEquals(0L, long0);
  }

  @Test
  public void test03()  throws Throwable  {
      TxnPrepare txnPrepare0 = new TxnPrepare();
      long long0 = txnPrepare0.getId();
      assertEquals(0L, long0);
  }

  @Test
  public void test04()  throws Throwable  {
      TxnPrepare txnPrepare0 = new TxnPrepare();
      txnPrepare0.id = 1010L;
      long long0 = txnPrepare0.getId();
      assertEquals(1010L, long0);
  }

  @Test
  public void test05()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      StringWriter stringWriter0 = new StringWriter(32);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      txnCommit0.dumpLog(stringBuffer0, false);
      assertEquals(134, stringBuffer0.capacity());
      assertEquals("<TxnCommit id=\"0\" time=\"null\"><DbLsn val=\"0xffffffff/0xffffffff\"/></TxnCommit>", stringWriter0.toString());
  }

  @Test
  public void test06()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      long long0 = txnAbort0.getLastLsn();
      assertEquals((-1L), long0);
  }

  @Test
  public void test07()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      String string0 = txnCommit0.getTagName();
      assertEquals("TxnCommit", string0);
  }

  @Test
  public void test08()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort(1902L, 1902L);
      txnAbort0.getLogType();
      assertEquals(1902L, txnAbort0.getId());
  }

  @Test
  public void test09()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("s?ec#N^gS:=)b3lJE^");
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = LocalDateTime.now((ZoneId) zoneOffset0);
      Timestamp timestamp0 = Timestamp.valueOf(localDateTime0);
      txnAbort0.time = timestamp0;
      // Undeclared exception!
      try { 
        txnAbort0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("RMp0~3TB");
      // Undeclared exception!
      try { 
        txnAbort0.readFromLog(byteBuffer0, (byte)122);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      // Undeclared exception!
      try { 
        txnCommit0.readFromLog((ByteBuffer) null, (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      TxnPrepare txnPrepare0 = new TxnPrepare();
      // Undeclared exception!
      try { 
        txnPrepare0.getLogSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      // Undeclared exception!
      try { 
        txnCommit0.dumpLog((StringBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.TxnEnd", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("s?ec#N^gS:=)b3lJE^");
      // Undeclared exception!
      try { 
        txnAbort0.writeToLog(byteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      boolean boolean0 = txnAbort0.marshallOutsideWriteLatch();
      assertTrue(boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort(255L, 255L);
      long long0 = txnAbort0.getLastLsn();
      assertEquals(255L, long0);
      assertEquals(255L, txnAbort0.getId());
  }

  @Test
  public void test17()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      txnAbort0.postLogWork(0L);
      assertFalse(txnAbort0.countAsObsoleteWhenLogged());
  }

  @Test
  public void test18()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      int int0 = txnCommit0.getLogSize();
      assertEquals(24, int0);
  }

  @Test
  public void test19()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      boolean boolean0 = txnCommit0.logEntryIsTransactional();
      assertTrue(boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit((-1L), (-1L));
      long long0 = txnCommit0.getTransactionId();
      assertEquals((-1L), long0);
  }

  @Test
  public void test21()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit(3448L, 3448L);
      boolean boolean0 = txnCommit0.countAsObsoleteWhenLogged();
      assertFalse(boolean0);
      assertEquals(3448L, txnCommit0.getId());
  }

  @Test
  public void test22()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort((-403L), 0L);
      long long0 = txnAbort0.getId();
      assertEquals((-403L), long0);
  }

  @Test
  public void test23()  throws Throwable  {
      TxnCommit txnCommit0 = new TxnCommit();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("matchLNByNodeId called on non DIN/DBIN");
      txnCommit0.readFromLog(byteBuffer0, (byte)0);
      assertEquals(24, byteBuffer0.position());
  }
}
