/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 21 20:12:48 KST 2017
 */

package com.sleepycat.je.recovery;

import static org.junit.Assert.assertEquals;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class RecoveryInfo_ESTest1 extends RecoveryInfo_ESTest_scaffolding1 {

  @Test
  public void test0()  throws Throwable  {
      RecoveryInfo recoveryInfo0 = new RecoveryInfo();
      recoveryInfo0.useMaxDbId = (-11);
      String string0 = recoveryInfo0.toString();
      assertEquals((-1L), recoveryInfo0.partialCheckpointStartLsn);
      assertEquals("Recovery Info ckptEnd=<null> useMaxNodeId=0 useMaxDbId=-11 useMaxTxnId=0 numMapINs=0 numOtherINs=0 numBinDeltas=0 numDuplicateINs=0 lnFound=0 lnNotFound=0 lnInserted=0 lnReplaced=0 nRepeatIteratorReads=0", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      RecoveryInfo recoveryInfo0 = new RecoveryInfo();
      recoveryInfo0.lnNotFound = 5;
      String string0 = recoveryInfo0.toString();
      assertEquals((-1L), recoveryInfo0.partialCheckpointStartLsn);
      assertEquals("Recovery Info ckptEnd=<null> useMaxNodeId=0 useMaxDbId=0 useMaxTxnId=0 numMapINs=0 numOtherINs=0 numBinDeltas=0 numDuplicateINs=0 lnFound=0 lnNotFound=5 lnInserted=0 lnReplaced=0 nRepeatIteratorReads=0", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      RecoveryInfo recoveryInfo0 = new RecoveryInfo();
      recoveryInfo0.numOtherINs = 1165;
      String string0 = recoveryInfo0.toString();
      assertEquals("Recovery Info ckptEnd=<null> useMaxNodeId=0 useMaxDbId=0 useMaxTxnId=0 numMapINs=0 numOtherINs=1165 numBinDeltas=0 numDuplicateINs=0 lnFound=0 lnNotFound=0 lnInserted=0 lnReplaced=0 nRepeatIteratorReads=0", string0);
      assertEquals((-1L), recoveryInfo0.partialCheckpointStartLsn);
  }

  @Test
  public void test3()  throws Throwable  {
      RecoveryInfo recoveryInfo0 = new RecoveryInfo();
      recoveryInfo0.numMapINs = 2051;
      String string0 = recoveryInfo0.toString();
      assertEquals("Recovery Info ckptEnd=<null> useMaxNodeId=0 useMaxDbId=0 useMaxTxnId=0 numMapINs=2051 numOtherINs=0 numBinDeltas=0 numDuplicateINs=0 lnFound=0 lnNotFound=0 lnInserted=0 lnReplaced=0 nRepeatIteratorReads=0", string0);
      assertEquals((-1L), recoveryInfo0.partialCheckpointStartLsn);
  }

  @Test
  public void test4()  throws Throwable  {
      RecoveryInfo recoveryInfo0 = new RecoveryInfo();
      recoveryInfo0.useMaxNodeId = 1L;
      String string0 = recoveryInfo0.toString();
      assertEquals((-1L), recoveryInfo0.partialCheckpointStartLsn);
      assertEquals("Recovery Info ckptEnd=<null> useMaxNodeId=1 useMaxDbId=0 useMaxTxnId=0 numMapINs=0 numOtherINs=0 numBinDeltas=0 numDuplicateINs=0 lnFound=0 lnNotFound=0 lnInserted=0 lnReplaced=0 nRepeatIteratorReads=0", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      RecoveryInfo recoveryInfo0 = new RecoveryInfo();
      assertEquals((-1L), recoveryInfo0.partialCheckpointStartLsn);
      
      recoveryInfo0.partialCheckpointStartLsn = (-410L);
      String string0 = recoveryInfo0.toString();
      assertEquals("Recovery Info ckptEnd=<null> useMaxNodeId=0 useMaxDbId=0 useMaxTxnId=0 numMapINs=0 numOtherINs=0 numBinDeltas=0 numDuplicateINs=0 lnFound=0 lnNotFound=0 lnInserted=0 lnReplaced=0 nRepeatIteratorReads=0", string0);
  }

  @Test
  public void test6()  throws Throwable  {
      RecoveryInfo recoveryInfo0 = new RecoveryInfo();
      assertEquals((-1L), recoveryInfo0.firstActiveLsn);
      
      recoveryInfo0.firstActiveLsn = (-78L);
      String string0 = recoveryInfo0.toString();
      assertEquals("Recovery Info firstActive=0xffffffff/0xffffffb2 ckptEnd=<null> useMaxNodeId=0 useMaxDbId=0 useMaxTxnId=0 numMapINs=0 numOtherINs=0 numBinDeltas=0 numDuplicateINs=0 lnFound=0 lnNotFound=0 lnInserted=0 lnReplaced=0 nRepeatIteratorReads=0", string0);
  }

  @Test
  public void test7()  throws Throwable  {
      RecoveryInfo recoveryInfo0 = new RecoveryInfo();
      assertEquals((-1L), recoveryInfo0.checkpointEndLsn);
      
      recoveryInfo0.checkpointEndLsn = 237L;
      String string0 = recoveryInfo0.toString();
      assertEquals("Recovery Info ckptEnd=0x0/0xed ckptEnd=<null> useMaxNodeId=0 useMaxDbId=0 useMaxTxnId=0 numMapINs=0 numOtherINs=0 numBinDeltas=0 numDuplicateINs=0 lnFound=0 lnNotFound=0 lnInserted=0 lnReplaced=0 nRepeatIteratorReads=0", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      RecoveryInfo recoveryInfo0 = new RecoveryInfo();
      assertEquals((-1L), recoveryInfo0.nextAvailableLsn);
      
      recoveryInfo0.nextAvailableLsn = (long) 0;
      String string0 = recoveryInfo0.toString();
      assertEquals("Recovery Info nextAvail=0x0/0x0 ckptEnd=<null> useMaxNodeId=0 useMaxDbId=0 useMaxTxnId=0 numMapINs=0 numOtherINs=0 numBinDeltas=0 numDuplicateINs=0 lnFound=0 lnNotFound=0 lnInserted=0 lnReplaced=0 nRepeatIteratorReads=0", string0);
  }

  @Test
  public void test9()  throws Throwable  {
      RecoveryInfo recoveryInfo0 = new RecoveryInfo();
      assertEquals((-1L), recoveryInfo0.useRootLsn);
      
      recoveryInfo0.useRootLsn = 0L;
      String string0 = recoveryInfo0.toString();
      assertEquals("Recovery Info useRoot=0x0/0x0 ckptEnd=<null> useMaxNodeId=0 useMaxDbId=0 useMaxTxnId=0 numMapINs=0 numOtherINs=0 numBinDeltas=0 numDuplicateINs=0 lnFound=0 lnNotFound=0 lnInserted=0 lnReplaced=0 nRepeatIteratorReads=0", string0);
  }
}
