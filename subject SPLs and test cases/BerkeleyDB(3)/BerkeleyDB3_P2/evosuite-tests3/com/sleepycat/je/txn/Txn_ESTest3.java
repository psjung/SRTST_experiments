/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 22 10:50:18 KST 2017
 */

package com.sleepycat.je.txn;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.File;
import java.io.StringWriter;
import java.lang.reflect.Method;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

import javax.transaction.xa.Xid;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.sleepycat.je.Database;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.TransactionConfig;
import com.sleepycat.je.dbi.CursorImpl;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.log.LogUtils;
import com.sleepycat.je.log.entry.LNLogEntry;

import sun.nio.cs.ext.MS949;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Txn_ESTest3 extends Txn_ESTest_scaffolding3 {

  @Test
  public void test02()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.addLogInfo(0L);
      Txn txn1 = txn0.getTxnLocker();
      assertSame(txn1, txn0);
  }

  @Test
  public void test03()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.addLogInfo(5L);
      long long0 = txn0.getFirstActiveLsn();
      assertEquals(5L, long0);
  }

  @Test
  public void test04()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 1938);
      // Undeclared exception!
      try { 
        txn0.hook801(long0, 1938, (DatabaseException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.utilint.Tracer", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setSuspended(true);
      txn0.setOnlyAbortable();
      assertTrue(txn0.getOnlyAbortable());
  }

  @Test
  public void test06()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.readUncommittedDefault = true;
      boolean boolean0 = txn0.createdNode((-1L));
      assertFalse(boolean0);
  }

  @Test
  public void test07()  throws Throwable  {
      Txn txn0 = new Txn();
      HashMap<DatabaseException, Method> hashMap0 = new HashMap<DatabaseException, Method>();
      txn0.handleToHandleLockMap = (Map) hashMap0;
      boolean boolean0 = txn0.createdNode(0L);
      assertFalse(boolean0);
  }

  @Test
  public void test08()  throws Throwable  {
      Txn txn0 = new Txn();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode(" detected open cursors while aborting");
      CharBuffer charBuffer0 = mS949_0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = mS949_0.encode(charBuffer0);
      txn0.readFromLog(byteBuffer1, (byte)4);
      try { 
        txn0.commit((byte)17);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Failed while attempting to commit transaction 7310577382524806176. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      Txn txn0 = new Txn();
      HashMap<Database, DatabaseImpl> hashMap0 = new HashMap<Database, DatabaseImpl>(313);
      txn0.handleToHandleLockMap = (Map) hashMap0;
      try { 
        txn0.commit((byte)17);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      Txn txn0 = new Txn();
      HashMap<LNLogEntry, Lock> hashMap0 = new HashMap<LNLogEntry, Lock>();
      txn0.deleteInfo = (Map) hashMap0;
      try { 
        txn0.commit();
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      Txn txn0 = new Txn();
      byte[] byteArray0 = new byte[9];
      txn0.lockTimeOutMillis = (-1L);
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(1938, byteArray0, byteArray0);
      // Undeclared exception!
      try { 
        txn0.prepare(logUtils_XidImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.id = (long) 1377;
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        txn0.nonBlockingLock(2459L, (LockType) null, databaseImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setOnlyAbortable();
      txn0.setSuspended(false);
      assertTrue(txn0.getOnlyAbortable());
  }

  @Test
  public void test14()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setSuspended(true);
      txn0.setSuspended(true);
      assertTrue(txn0.isSuspended());
  }

  @Test
  public void test15()  throws Throwable  {
      Txn txn0 = new Txn();
      byte[] byteArray0 = new byte[9];
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        txn0.nonBlockingLock(2459L, (LockType) null, databaseImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test16()  throws Throwable  {
      Txn txn0 = new Txn();
      LockType lockType0 = LockType.RANGE_WRITE;
      byte byte0 = (byte)0;
      boolean boolean0 = true;
      File file0 = null;
      Properties properties0 = null;
      EnvironmentConfig environmentConfig0 = null;
      try {
        environmentConfig0 = new EnvironmentConfig(properties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.EnvironmentMutableConfig", e);
      }
  }

  @Test
  public void test17()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook810((-9));
      assertEquals(0L, txn0.getTxnTimeOut());
  }

  @Test
  public void test18()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.checkState(false);
      assertFalse(txn0.isReadCommittedIsolation());
  }

  @Test
  public void test19()  throws Throwable  {
      Txn txn0 = new Txn();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("rt)\"`S5O1G3s=");
      // Undeclared exception!
      try { 
        txn0.writeToLog(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test20()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try { 
        txn0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try { 
        txn0.unRegisterCursor((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test22()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try { 
        txn0.registerCursor((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test23()  throws Throwable  {
      Txn txn0 = new Txn();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode("-");
      // Undeclared exception!
      try { 
        txn0.readFromLog(byteBuffer0, (byte) (-78));
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.nio.Buffer", e);
      }
  }

  @Test
  public void test24()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try { 
        txn0.readFromLog((ByteBuffer) null, (byte) (-33));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.log.LogUtils", e);
      }
  }

  @Test
  public void test25()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setOnlyAbortable();
      byte[] byteArray0 = new byte[9];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(1938, byteArray0, byteArray0);
      try { 
        txn0.prepare(logUtils_XidImpl0);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Transaction 0 must be aborted.
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test26()  throws Throwable  {
      Txn txn0 = new Txn();
      try { 
        txn0.commit((byte)2);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test27()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 1938);
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.RANGE_WRITE;
      LockGrantType lockGrantType0 = LockGrantType.WAIT_PROMOTION;
      // Undeclared exception!
      try { 
        txn0.addLock(long0, lock0, lockType0, lockGrantType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn$Txn_addLock", e);
      }
  }

  @Test
  public void test28()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.getOnlyAbortable();
      assertFalse(boolean0);
  }

  @Test
  public void test29()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try { 
        txn0.setHandleLockOwner(false, (Database) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test30()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setHandleLockOwner(false, (Database) null, false);
      assertFalse(txn0.isSerializableIsolation());
  }

  @Test
  public void test31()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 1938);
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.RANGE_WRITE;
      LockGrantType lockGrantType0 = LockGrantType.NONE_NEEDED;
      txn0.addLock(long0, lock0, lockType0, lockGrantType0);
      WriteLockInfo writeLockInfo0 = txn0.getWriteLockInfo(1938);
      assertNotNull(writeLockInfo0);
      assertFalse(writeLockInfo0.getAbortKnownDeleted());
  }

  @Test
  public void test33()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getAbortLsn(1938);
      assertEquals((-1L), long0);
  }

  @Test
  public void test35()  throws Throwable  {
      Txn txn0 = new Txn();
      Lock lock0 = new Lock((Long) null);
      txn0.removeLock(848L, lock0);
      assertEquals(10000, Txn.ACCUMULATED_LIMIT);
  }

  @Test
  public void test36()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.addLogInfo(543L);
      txn0.addLogInfo(0L);
      assertTrue(txn0.logEntryIsTransactional());
  }

  @Test
  public void test37()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 1938);
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.RANGE_WRITE;
      LockGrantType lockGrantType0 = LockGrantType.NONE_NEEDED;
      txn0.addLock(long0, lock0, lockType0, lockGrantType0);
      txn0.setOnlyAbortable();
      try { 
        txn0.commit((byte)17);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = Transaction 0 must be aborted. The exception from the cleanup = null
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test38()  throws Throwable  {
      Txn txn0 = new Txn();
      LockType lockType0 = LockType.WRITE;
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        txn0.lock(0L, lockType0, false, databaseImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test39()  throws Throwable  {
      Txn txn0 = new Txn();
      LockType lockType0 = LockType.RANGE_WRITE;
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try { 
        txn0.lockInternal((-1L), lockType0, true, databaseImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test40()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isSuspended();
      assertFalse(boolean0);
  }

  @Test
  public void test41()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setSuspended(true);
      txn0.setPrepared(true);
      assertTrue(txn0.isSuspended());
  }

  @Test
  public void test42()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setSuspended(false);
      assertFalse(txn0.isSuspended());
      assertFalse(txn0.getOnlyAbortable());
  }

  @Test
  public void test43()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setPrepared(true);
      try { 
        txn0.commit((byte)2);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test44()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setPrepared(false);
      assertFalse(txn0.getOnlyAbortable());
  }

  @Test
  public void test45()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 1938);
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.RANGE_INSERT;
      LockGrantType lockGrantType0 = LockGrantType.NONE_NEEDED;
      Txn.Txn_addLock txn_Txn_addLock0 = new Txn.Txn_addLock(txn0, long0, lock0, lockType0, lockGrantType0);
      txn_Txn_addLock0.hook819();
  }

  @Test
  public void test46()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 1938);
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.RANGE_WRITE;
      LockGrantType lockGrantType0 = LockGrantType.NONE_NEEDED;
      txn0.addLock(long0, lock0, lockType0, lockGrantType0);
      try { 
        txn0.commit((byte)17);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test47()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.releaseNonTxnLocks();
      assertFalse(txn0.isHandleLockTransferrable());
  }

  @Test
  public void test48()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 1938);
      Lock lock0 = new Lock();
      LockType lockType0 = LockType.RANGE_INSERT;
      LockGrantType lockGrantType0 = LockGrantType.NONE_NEEDED;
      txn0.addLock(long0, lock0, lockType0, lockGrantType0);
      assertEquals(0L, txn0.getTransactionId());
  }

  @Test
  public void test49()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook804();
      assertFalse(txn0.isReadUncommittedDefault());
  }

  @Test
  public void test50()  throws Throwable  {
      Txn txn0 = new Txn();
      byte[] byteArray0 = new byte[9];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(22, byteArray0, byteArray0);
      // Undeclared exception!
      try { 
        txn0.abort((Xid) logUtils_XidImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test51()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try { 
        txn0.generateId((TxnManager) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test52()  throws Throwable  {
      Txn txn0 = new Txn();
      int int0 = txn0.getLogSize();
      assertEquals(16, int0);
  }

  @Test
  public void test53()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook814();
      assertFalse(txn0.isHandleLockTransferrable());
  }

  @Test
  public void test54()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook808();
      assertEquals(0L, txn0.getTransactionId());
  }

  @Test
  public void test55()  throws Throwable  {
      Txn txn0 = new Txn();
      DatabaseException databaseException0 = new DatabaseException(" y1%--=D:B;T&u0");
      try { 
        txn0.hook800(databaseException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.utilint.Tracer", e);
      }
  }

  @Test
  public void test56()  throws Throwable  {
      Txn txn0 = new Txn();
      Txn txn1 = (Txn)txn0.newNonTxnLocker();
      assertFalse(txn1.isHandleLockTransferrable());
  }

  @Test
  public void test57()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.logEntryIsTransactional();
      assertTrue(boolean0);
  }

  @Test
  public void test58()  throws Throwable  {
      Txn txn0 = new Txn();
      int int0 = txn0.getInMemorySize();
      assertEquals(0, int0);
  }

  @Test
  public void test59()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.operationEnd(false);
      assertEquals(0L, txn0.getLockTimeout());
  }

  @Test
  public void test60()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getLastLsn();
      assertEquals((-1L), long0);
  }

  @Test
  public void test61()  throws Throwable  {
      TransactionConfig transactionConfig0 = new TransactionConfig();
      Txn txn0 = null;
      try {
        txn0 = new Txn((EnvironmentImpl) null, transactionConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test62()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook813();
      assertFalse(txn0.isHandleLockTransferrable());
  }

  @Test
  public void test63()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try { 
        txn0.abort(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test64()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook807();
      assertFalse(txn0.isHandleLockTransferrable());
  }

  @Test
  public void test65()  throws Throwable  {
      Txn txn0 = new Txn();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      txn0.dumpLog(stringBuffer0, false);
      assertEquals("<txn id=\"0__Txn\"><DbLsn val=\"0xffffffff/0xffffffff\"/></txn>", stringBuffer0.toString());
      assertEquals("<txn id=\"0__Txn\"><DbLsn val=\"0xffffffff/0xffffffff\"/></txn>", stringWriter0.toString());
  }

  @Test
  public void test66()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isHandleLockTransferrable();
      assertFalse(boolean0);
  }

  @Test
  public void test67()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isTransactional();
      assertTrue(boolean0);
  }

  @Test
  public void test68()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getFirstActiveLsn();
      assertEquals((-1L), long0);
  }

  @Test
  public void test69()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook812();
      assertEquals(0L, txn0.getTransactionId());
  }

  @Test
  public void test70()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook806();
      assertEquals(0L, txn0.getId());
  }

  @Test
  public void test71()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getTransactionId();
      assertEquals(0L, long0);
  }

  @Test
  public void test72()  throws Throwable  {
      Txn txn0 = new Txn();
      Txn txn1 = txn0.getTxnLocker();
      assertEquals(0L, txn1.getLockTimeout());
  }

  @Test
  public void test73()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.operationEnd();
      assertEquals(10000, Txn.ACCUMULATED_LIMIT);
  }

  @Test
  public void test74()  throws Throwable  {
      Txn txn0 = new Txn();
      MS949 mS949_0 = (MS949)Charset.defaultCharset();
      ByteBuffer byteBuffer0 = mS949_0.encode(" nRepeatIteratorReads=");
      txn0.writeToLog(byteBuffer0);
      assertTrue(byteBuffer0.hasRemaining());
  }

  @Test
  public void test75()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isReadCommittedIsolation();
      assertFalse(boolean0);
  }

  @Test
  public void test76()  throws Throwable  {
      TransactionConfig transactionConfig0 = TransactionConfig.DEFAULT;
      Txn txn0 = null;
      try {
        txn0 = new Txn((EnvironmentImpl) null, transactionConfig0, 2723L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Locker", e);
      }
  }

  @Test
  public void test77()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook803();
      assertFalse(txn0.getOnlyAbortable());
  }

  @Test
  public void test79()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook805();
      assertEquals(10000, Txn.ACCUMULATED_LIMIT);
  }

  @Test
  public void test81()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.hook809();
      assertFalse(txn0.isSerializableIsolation());
  }

  @Test
  public void test82()  throws Throwable  {
      Txn txn0 = new Txn();
      try { 
        txn0.commit((Xid) null);
        fail("Expecting exception: DatabaseException");
      
      } catch(DatabaseException e) {
         //
         // Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         //
         assertThrownBy("com.sleepycat.je.txn.Txn", e);
      }
  }

  @Test
  public void test83()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isSerializableIsolation();
      assertFalse(boolean0);
  }

  @Test
  public void test84()  throws Throwable  {
      Txn txn0 = new Txn();
      Txn.Txn_traceCommit txn_Txn_traceCommit0 = new Txn.Txn_traceCommit(txn0, 1938, (-572));
      // Undeclared exception!
      try { 
        txn_Txn_traceCommit0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.sleepycat.je.txn.Txn$Txn_traceCommit", e);
      }
  }
}
