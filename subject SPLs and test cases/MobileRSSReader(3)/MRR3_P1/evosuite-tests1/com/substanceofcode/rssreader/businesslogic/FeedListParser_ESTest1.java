/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 20:28:01 KST 2018
 */

package com.substanceofcode.rssreader.businesslogic;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.substanceofcode.rssreader.businessentities.RssItunesFeed;
import com.substanceofcode.utils.CauseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class FeedListParser_ESTest1 extends FeedListParser_ESTest_scaffolding1 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      assertFalse(lineByLineParser0.isRedirectHtml());
      
      lineByLineParser0.setRedirectHtml(true);
      assertTrue(lineByLineParser0.isRedirectHtml());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", (String) null);
      assertFalse(lineByLineParser0.isRedirectHtml());
      
      lineByLineParser0.m_redirectHtml = true;
      boolean boolean0 = lineByLineParser0.isSuccessfull();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", "", "");
      opmlParser0.m_needRedirect = true;
      boolean boolean0 = opmlParser0.isSuccessfull();
      assertFalse(opmlParser0.isRedirectHtml());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", "", "");
      opmlParser0.m_password = "";
      try { 
        opmlParser0.parseFeeds();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cz.cacek.ebook.util.ResourceProviderME", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", "", "");
      opmlParser0.m_needRedirect = true;
      opmlParser0.run();
      assertFalse(opmlParser0.isSuccessfull());
      assertFalse(opmlParser0.isRedirectHtml());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      assertFalse(lineByLineParser0.isRedirectHtml());
      
      lineByLineParser0.m_redirectHtml = true;
      lineByLineParser0.startParsing();
      assertFalse(lineByLineParser0.isSuccessfull());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", "", "");
      opmlParser0.m_needRedirect = true;
      opmlParser0.startParsing();
      assertFalse(opmlParser0.isSuccessfull());
      assertFalse(opmlParser0.isReady());
      assertFalse(opmlParser0.isRedirectHtml());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", "", "");
      assertFalse(opmlParser0.isRedirectHtml());
      
      opmlParser0.m_redirectHtml = true;
      boolean boolean0 = opmlParser0.isRedirectHtml();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      lineByLineParser0.run();
      boolean boolean0 = lineByLineParser0.isReady();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser((String) null, (String) null, "");
      String string0 = lineByLineParser0.getUrl();
      assertFalse(lineByLineParser0.isRedirectHtml());
      assertFalse(lineByLineParser0.isSuccessfull());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("a", "", "");
      String string0 = lineByLineParser0.getUrl();
      assertNotNull(string0);
      assertFalse(lineByLineParser0.isRedirectHtml());
      assertEquals("a", string0);
      assertFalse(lineByLineParser0.isSuccessfull());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", (String) null, (String) null);
      RssItunesFeed[] rssItunesFeedArray0 = new RssItunesFeed[1];
      opmlParser0.m_feeds = rssItunesFeedArray0;
      opmlParser0.getFeeds();
      assertFalse(opmlParser0.isRedirectHtml());
      assertFalse(opmlParser0.isSuccessfull());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      RssItunesFeed[] rssItunesFeedArray0 = new RssItunesFeed[0];
      lineByLineParser0.m_feeds = rssItunesFeedArray0;
      lineByLineParser0.getFeeds();
      assertFalse(lineByLineParser0.isRedirectHtml());
      assertFalse(lineByLineParser0.isSuccessfull());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      lineByLineParser0.setFeedURLFilter("a");
      String string0 = lineByLineParser0.getFeedURLFilter();
      assertEquals("a", string0);
      assertFalse(lineByLineParser0.isSuccessfull());
      assertFalse(lineByLineParser0.isRedirectHtml());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      lineByLineParser0.setFeedNameFilter("O");
      String string0 = lineByLineParser0.getFeedNameFilter();
      assertEquals("o", string0);
      assertFalse(lineByLineParser0.isSuccessfull());
      assertNotNull(string0);
      assertFalse(lineByLineParser0.isRedirectHtml());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser((String) null, "", (String) null);
      opmlParser0.m_feedNameFilter = "";
      String string0 = opmlParser0.getFeedNameFilter();
      assertFalse(opmlParser0.isSuccessfull());
      assertFalse(opmlParser0.isRedirectHtml());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", (String) null, (String) null);
      opmlParser0.run();
      CauseException causeException0 = opmlParser0.getEx();
      assertFalse(opmlParser0.isRedirectHtml());
      assertEquals("com.substanceofcode.utils.CauseException: Error while parsing feed ", causeException0.toString());
      assertFalse(opmlParser0.isSuccessfull());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      lineByLineParser0.startParsing();
      // Undeclared exception!
      try { 
        lineByLineParser0.startParsing();
        fail("Expecting exception: IllegalThreadStateException");
      
      } catch(IllegalThreadStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Thread", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      lineByLineParser0.setFeedURLFilter((String) null);
      assertFalse(lineByLineParser0.isSuccessfull());
      assertFalse(lineByLineParser0.isRedirectHtml());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", "", "");
      opmlParser0.setFeedURLFilter("");
      assertFalse(opmlParser0.isSuccessfull());
      assertFalse(opmlParser0.isRedirectHtml());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser((String) null, (String) null, "");
      lineByLineParser0.setFeedNameFilter((String) null);
      assertFalse(lineByLineParser0.isRedirectHtml());
      assertFalse(lineByLineParser0.isSuccessfull());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", "", "");
      opmlParser0.setFeedNameFilter("");
      assertFalse(opmlParser0.isSuccessfull());
      assertFalse(opmlParser0.isRedirectHtml());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", (String) null);
      String string0 = lineByLineParser0.getUrl();
      assertFalse(lineByLineParser0.isSuccessfull());
      assertNotNull(string0);
      assertFalse(lineByLineParser0.isRedirectHtml());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", "", "");
      boolean boolean0 = opmlParser0.isRedirectHtml();
      assertFalse(opmlParser0.isSuccessfull());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      String string0 = lineByLineParser0.getFeedURLFilter();
      assertNull(string0);
      assertFalse(lineByLineParser0.isRedirectHtml());
      assertFalse(lineByLineParser0.isSuccessfull());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", "", "");
      opmlParser0.isReady();
      assertFalse(opmlParser0.isSuccessfull());
      assertFalse(opmlParser0.isRedirectHtml());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OpmlParser opmlParser0 = new OpmlParser("", "", "");
      String string0 = opmlParser0.getFeedNameFilter();
      assertNull(string0);
      assertFalse(opmlParser0.isSuccessfull());
      assertFalse(opmlParser0.isRedirectHtml());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      lineByLineParser0.getEx();
      assertFalse(lineByLineParser0.isSuccessfull());
      assertFalse(lineByLineParser0.isRedirectHtml());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LineByLineParser lineByLineParser0 = new LineByLineParser("", "", "");
      lineByLineParser0.getFeeds();
      assertFalse(lineByLineParser0.isSuccessfull());
      assertFalse(lineByLineParser0.isRedirectHtml());
  }
}
