/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 15:35:43 KST 2018
 */

package com.substanceofcode.rssreader.businesslogic;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.fail;

import java.util.Date;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.substanceofcode.rssreader.businessentities.RssItunesFeed;
import com.substanceofcode.utils.XmlParser;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class RssFormatParser_ESTest1 extends RssFormatParser_ESTest_scaffolding1 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Date date0 = RssFormatParser.getCal(0, 0, 0, 0, 0, 1);
      assertEquals("Wed Dec 31 00:00:01 KST 2", date0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Date date0 = RssFormatParser.getCal(0, 0, (-1), 0, 0, 0);
      assertEquals("Tue Dec 31 00:00:00 KST 3", date0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Date date0 = RssFormatParser.getCal(0, 1, 0, 0, 0, 0);
      assertEquals("Sat Jan 31 00:00:00 KST 1", date0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Date date0 = RssFormatParser.getCal(1, 0, 0, 0, 0, 0);
      assertEquals("Thu Jan 01 00:00:00 KST 1", date0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Date date0 = RssFormatParser.getCal(0, 0, 0, (-1), 0, 0);
      assertEquals("Tue Dec 30 23:00:00 KST 2", date0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RssFormatParser rssFormatParser0 = new RssFormatParser();
      RssItunesFeed rssItunesFeed0 = new RssItunesFeed();
      // Undeclared exception!
      try { 
        rssFormatParser0.parse((XmlParser) null, rssItunesFeed0, false, 0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businesslogic.ExtParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        RssFormatParser.parseRssDate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businesslogic.RssFormatParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RssFormatParser rssFormatParser0 = new RssFormatParser();
      // Undeclared exception!
      try { 
        rssFormatParser0.parseItem((XmlParser) null, 'd', (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Date date0 = RssFormatParser.parseDcDate("\u0001");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Date date0 = RssFormatParser.parseStdDate("");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Date date0 = RssFormatParser.parseStdDate(" e w c d s t ");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Date date0 = RssFormatParser.parseStdDate(" e w l ");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Date date0 = RssFormatParser.parseDcDate("-");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Date date0 = RssFormatParser.parseRssDate("p e w c d s t o");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Date date0 = RssFormatParser.parseStdDate(" f d n m ");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Date date0 = RssFormatParser.parseRssDate("us--");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Date date0 = RssFormatParser.parseRssDate("}[-");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RssFormatParser rssFormatParser0 = new RssFormatParser();
      rssFormatParser0.parseItem((XmlParser) null, 'a', "");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RssFormatParser rssFormatParser0 = new RssFormatParser();
      rssFormatParser0.parseItem((XmlParser) null, 'i', "");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RssFormatParser rssFormatParser0 = new RssFormatParser();
      rssFormatParser0.parseItem((XmlParser) null, 'd', "");
  }
}
