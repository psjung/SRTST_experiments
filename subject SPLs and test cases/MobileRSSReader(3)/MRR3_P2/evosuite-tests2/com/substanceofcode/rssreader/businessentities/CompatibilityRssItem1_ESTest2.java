/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 12 16:57:32 KST 2018
 */

package com.substanceofcode.rssreader.businessentities;

import static org.junit.Assert.assertEquals;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.time.Instant;
import java.util.Date;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class CompatibilityRssItem1_ESTest2 extends CompatibilityRssItem1_ESTest_scaffolding2 {
@BeforeClass
public static void initEvoSuiteFramework() {
String a = "aa";
}
@AfterClass
public static void exitEvoSuiteFramework() {
String a = "aa";
}

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Instant instant0 = Instant.ofEpochSecond(0L, 0L);
      Date date0 = Date.from(instant0);
      CompatibilityRssItem1 compatibilityRssItem1_0 = new CompatibilityRssItem1("", "", (String) null, date0);
      // Undeclared exception!
      try { 
        compatibilityRssItem1_0.equals((RssItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem1", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompatibilityRssItem1.deserialize1("RssIt");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompatibilityRssItem1.deserialize1(":");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unexpected code: :
         //
         verifyException("com.substanceofcode.utils.CompatibilityBase64", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompatibilityRssItem1.deserialize1("fHxJMzJPOkBVd0BLdW1+cl5YL3FGfHx8");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"I32O:@Uw@Kum~r^X/qF\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompatibilityRssItem1.deserialize1((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.utils.CompatibilityBase64", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        CompatibilityRssItem1.deserialize1("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem1", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompatibilityRssItem1 compatibilityRssItem1_0 = null;
      try {
        compatibilityRssItem1_0 = new CompatibilityRssItem1((RssItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.substanceofcode.rssreader.businessentities.CompatibilityRssItem1", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem1 compatibilityRssItem1_0 = new CompatibilityRssItem1("", "", "", date0);
      Date date1 = new Date(0L);
      CompatibilityRssItem1 compatibilityRssItem1_1 = new CompatibilityRssItem1("", "", "", date1);
      boolean boolean0 = compatibilityRssItem1_0.equals((RssItem) compatibilityRssItem1_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Date date0 = new Date();
      RssItem rssItem0 = new RssItem("", "", "", date0, "", false);
      CompatibilityRssItem1 compatibilityRssItem1_0 = new CompatibilityRssItem1(rssItem0);
      CompatibilityRssItem1 compatibilityRssItem1_1 = CompatibilityRssItem1.deserialize1("fHx8");
      boolean boolean0 = compatibilityRssItem1_1.equals((RssItem) compatibilityRssItem1_0);
      //  // Unstable assertion: assertEquals("", compatibilityRssItem1_1.getLink());
      //  // Unstable assertion: assertEquals("", compatibilityRssItem1_1.getDescription());
      //  // Unstable assertion: assertFalse(boolean0);
      //  // Unstable assertion: assertEquals("Sun Aug 12 16:57:14 KST 2018", date0.toString());
      //  // Unstable assertion: assertEquals("", compatibilityRssItem1_1.getTitle());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Date date0 = new Date();
      RssItem rssItem0 = new RssItem("", "", "", date0, "", false);
      CompatibilityRssItem1 compatibilityRssItem1_0 = new CompatibilityRssItem1(rssItem0);
      boolean boolean0 = compatibilityRssItem1_0.equals(rssItem0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompatibilityRssItem1 compatibilityRssItem1_0 = new CompatibilityRssItem1();
      compatibilityRssItem1_0.m_desc = "u";
      CompatibilityRssItem1 compatibilityRssItem1_1 = new CompatibilityRssItem1();
      boolean boolean0 = compatibilityRssItem1_1.equals((RssItem) compatibilityRssItem1_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompatibilityRssItem1 compatibilityRssItem1_0 = new CompatibilityRssItem1("J%OG_REC_STORE_NAME", "", "");
      CompatibilityRssItem1 compatibilityRssItem1_1 = new CompatibilityRssItem1("J%OG_REC_STORE_NAME", "I", "");
      boolean boolean0 = compatibilityRssItem1_0.equals((RssItem) compatibilityRssItem1_1);
      assertFalse(boolean0);
      assertEquals("", compatibilityRssItem1_1.getDescription());
      assertEquals("J%OG_REC_STORE_NAME", compatibilityRssItem1_1.getTitle());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompatibilityRssItem1 compatibilityRssItem1_0 = new CompatibilityRssItem1();
      Date date0 = new Date();
      RssItem rssItem0 = new RssItem("p", "", "", date0, "", true);
      boolean boolean0 = compatibilityRssItem1_0.equals(rssItem0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompatibilityRssItem1 compatibilityRssItem1_0 = new CompatibilityRssItem1("", "", "");
      boolean boolean0 = compatibilityRssItem1_0.equals((RssItem) compatibilityRssItem1_0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem1 compatibilityRssItem1_0 = new CompatibilityRssItem1((String) null, "", (String) null, date0);
      String string0 = compatibilityRssItem1_0.serialize();
      //  // Unstable assertion: assertNotNull(string0);
      //  // Unstable assertion: assertEquals("bnVsbHx8MTUzNDA2MDYzMzY1NHxudWxs", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Date date0 = new Date();
      CompatibilityRssItem1 compatibilityRssItem1_0 = new CompatibilityRssItem1("", "", "", date0);
      CompatibilityRssItem1 compatibilityRssItem1_1 = new CompatibilityRssItem1("", "", "");
      boolean boolean0 = compatibilityRssItem1_0.equals((RssItem) compatibilityRssItem1_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompatibilityRssItem1 compatibilityRssItem1_0 = new CompatibilityRssItem1("", "", "");
      String string0 = compatibilityRssItem1_0.serialize();
      assertEquals("fHx8", string0);
  }
}
